2025-05-16 18:16:16 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-16 18:16:16 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-16 18:16:16 - app.main - INFO - Registering routers with prefix /api
2025-05-16 18:16:17 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-16 18:16:17 - app.main - INFO - MongoDB connection verified successfully
2025-05-16 18:16:17 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-16 18:16:17 - app.main - INFO - All database indexes verified
2025-05-16 18:16:17 - app.main - INFO - Server started successfully!
2025-05-16 18:16:17 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-16 18:23:37 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-16 18:24:00 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-16 18:24:00 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-16 18:24:00 - app.main - INFO - Registering routers with prefix /api
2025-05-16 18:24:00 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-16 18:24:00 - app.main - INFO - MongoDB connection verified successfully
2025-05-16 18:24:00 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-16 18:24:01 - app.main - INFO - All database indexes verified
2025-05-16 18:24:01 - app.main - INFO - Server started successfully!
2025-05-16 18:24:01 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 11:32:11 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 11:32:11 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 11:32:11 - app.main - INFO - Registering routers with prefix /api
2025-05-18 11:32:11 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 11:32:11 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 11:32:12 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 11:32:12 - app.main - INFO - All database indexes verified
2025-05-18 11:32:12 - app.main - INFO - Server started successfully!
2025-05-18 11:32:12 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 11:33:43 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 11:34:07 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 11:34:07 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 11:34:07 - app.main - INFO - Registering routers with prefix /api
2025-05-18 11:34:07 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 11:34:07 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 11:34:07 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 11:34:07 - app.main - INFO - All database indexes verified
2025-05-18 11:34:07 - app.main - INFO - Server started successfully!
2025-05-18 11:34:07 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 11:38:35 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-18 11:38:35 - app.main - WARNING - Request failed: POST /api/asset-categories/ - Status: 404
2025-05-18 11:42:26 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 11:43:44 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 11:43:44 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 11:43:44 - app.main - INFO - Registering routers with prefix /api
2025-05-18 11:43:44 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 11:43:44 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 11:43:44 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 11:43:44 - app.main - INFO - All database indexes verified
2025-05-18 11:43:44 - app.main - INFO - Server started successfully!
2025-05-18 11:43:44 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 11:44:05 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-18 11:44:05 - app.routers.asset_categories - INFO - Creating asset category: Laptops
2025-05-18 11:44:05 - app.services.asset_category_service - INFO - Creating category: Laptops
2025-05-18 11:44:05 - app.services.asset_category_service - ERROR - Error creating category: 'Collection' object is not callable. If you meant to call the 'find_one' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 176, in create_asset_category
    existing = db.find_one({"category_name": category.category_name})
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find_one' method on a 'Database' object it is failing because no such method exists.
2025-05-18 11:44:05 - app.routers.asset_categories - ERROR - Failed to create category: 'Collection' object is not callable. If you meant to call the 'find_one' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 103, in create_new_asset_category
    created_category = create_asset_category(db, category)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 176, in create_asset_category
    existing = db.find_one({"category_name": category.category_name})
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find_one' method on a 'Database' object it is failing because no such method exists.
2025-05-18 11:44:05 - app.main - WARNING - Request failed: POST /api/asset-categories/ - Status: 500
2025-05-18 11:48:11 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 11:50:31 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 11:50:31 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 11:50:31 - app.main - INFO - Registering routers with prefix /api
2025-05-18 11:50:31 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 11:50:31 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 11:50:31 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 11:50:31 - app.main - INFO - All database indexes verified
2025-05-18 11:50:31 - app.main - INFO - Server started successfully!
2025-05-18 11:50:31 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 11:50:36 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-18 11:50:36 - app.routers.asset_categories - INFO - Creating asset category: Laptops
2025-05-18 11:50:36 - app.services.asset_category_service - INFO - Creating category: Laptops
2025-05-18 11:50:36 - app.services.asset_category_service - INFO - Created category with ID: 6dea1a4c-e556-4a42-a0a9-f6a42d39eb9f
2025-05-18 12:16:23 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-18 12:16:23 - app.routers.asset_categories - INFO - Creating asset category: Laptops
2025-05-18 12:16:23 - app.services.asset_category_service - INFO - Creating category: Laptops
2025-05-18 12:16:24 - app.services.asset_category_service - INFO - Created category with ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-18 12:16:48 - app.main - INFO - Request: POST /api/employees/
2025-05-18 12:16:48 - app.routers.employees - INFO - Creating employee: EMP001
2025-05-18 12:16:48 - app.services.employee_service - INFO - Creating employee: Alice Smith
2025-05-18 12:16:48 - app.services.employee_service - ERROR - Error creating employee: 'EmployeeCreate' object has no attribute 'email'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 233, in create_employee
    if employee.email:
       ^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'EmployeeCreate' object has no attribute 'email'
2025-05-18 12:16:48 - app.routers.employees - ERROR - Failed to create employee: 'EmployeeCreate' object has no attribute 'email'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 164, in create_new_employee
    created_employee = create_employee(collection, employee)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 233, in create_employee
    if employee.email:
       ^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'EmployeeCreate' object has no attribute 'email'
2025-05-18 12:16:48 - app.main - WARNING - Request failed: POST /api/employees/ - Status: 500
2025-05-18 12:22:51 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 12:23:08 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 12:23:08 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 12:23:08 - app.main - INFO - Registering routers with prefix /api
2025-05-18 12:23:08 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 12:23:08 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 12:23:08 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 12:23:08 - app.main - INFO - All database indexes verified
2025-05-18 12:23:08 - app.main - INFO - Server started successfully!
2025-05-18 12:23:08 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 12:23:16 - app.main - INFO - Request: POST /api/employees/
2025-05-18 12:23:16 - app.routers.employees - INFO - Creating employee: EMP001
2025-05-18 12:23:16 - app.services.employee_service - INFO - Creating employee: Alice Smith
2025-05-18 12:23:17 - app.services.employee_service - INFO - Created employee with ID: 3a142936-dcb9-4962-9c9b-94995d6eb1f3
2025-05-18 12:31:43 - app.main - INFO - Request: POST /api/asset-items/
2025-05-18 12:31:44 - app.routers.asset_items - INFO - Creating asset item: Dell XPS 13
2025-05-18 12:31:44 - app.routers.asset_items - ERROR - Failed to create asset item: 'AssetItemCreate' object has no attribute 'asset_name'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 177, in create_new_asset_item
    created_item = create_asset_item(collection, item)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 141, in create_asset_item
    logger.info(f"Creating asset: {asset.asset_name}")
                                   ^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssetItemCreate' object has no attribute 'asset_name'. Did you mean: 'asset_tag'?
2025-05-18 12:31:44 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 500
2025-05-18 12:43:03 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 12:43:14 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 12:43:14 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 12:43:14 - app.main - INFO - Registering routers with prefix /api
2025-05-18 12:43:14 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 12:43:14 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 12:43:15 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 12:43:15 - app.main - INFO - All database indexes verified
2025-05-18 12:43:15 - app.main - INFO - Server started successfully!
2025-05-18 12:43:15 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 12:44:06 - app.main - INFO - Request: POST /api/asset-items/
2025-05-18 12:44:06 - app.routers.asset_items - INFO - Creating asset item: Dell XPS 13
2025-05-18 12:44:06 - app.routers.asset_items - ERROR - Failed to create asset item: 'AssetItemCreate' object has no attribute 'asset_name'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 177, in create_new_asset_item
    created_item = create_asset_item(collection, item)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 141, in create_asset_item
    logger.info(f"Creating asset: {asset.name}")
                                   ^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssetItemCreate' object has no attribute 'asset_name'. Did you mean: 'asset_tag'?
2025-05-18 12:44:06 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 500
2025-05-18 12:45:26 - app.main - INFO - Request: POST /api/asset-items/
2025-05-18 12:45:26 - app.routers.asset_items - INFO - Creating asset item: Dell XPS 13
2025-05-18 12:45:26 - app.routers.asset_items - ERROR - Failed to create asset item: 'AssetItemCreate' object has no attribute 'asset_name'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 177, in create_new_asset_item
    created_item = create_asset_item(collection, item)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 141, in create_asset_item
    logger.info(f"Creating asset: {asset.name}")
                                   ^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssetItemCreate' object has no attribute 'asset_name'. Did you mean: 'asset_tag'?
2025-05-18 12:45:26 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 500
2025-05-18 12:48:07 - app.main - INFO - Request: POST /api/asset-items/
2025-05-18 12:48:07 - app.routers.asset_items - INFO - Creating asset item: Dell XPS 13
2025-05-18 12:48:07 - app.routers.asset_items - ERROR - Failed to create asset item: 'AssetItemCreate' object has no attribute 'asset_name'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 177, in create_new_asset_item
    created_item = create_asset_item(collection, item)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 141, in create_asset_item
    logger.info(f"Creating asset: {asset.name}")
                                   ^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssetItemCreate' object has no attribute 'asset_name'. Did you mean: 'asset_tag'?
2025-05-18 12:48:08 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 500
2025-05-18 12:49:54 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 12:50:08 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 12:50:08 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 12:50:08 - app.main - INFO - Registering routers with prefix /api
2025-05-18 12:50:09 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 12:50:09 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 12:50:09 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 12:50:09 - app.main - INFO - All database indexes verified
2025-05-18 12:50:09 - app.main - INFO - Server started successfully!
2025-05-18 12:50:09 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 12:50:14 - app.main - INFO - Request: POST /api/asset-items/
2025-05-18 12:50:14 - app.routers.asset_items - INFO - Creating asset item: Dell XPS 13
2025-05-18 12:50:14 - app.services.asset_item_service - INFO - Creating asset: Dell XPS 13
2025-05-18 12:50:14 - app.services.asset_item_service - INFO - Created asset with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-18 19:24:53 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 19:24:53 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 19:24:53 - app.main - INFO - Registering routers with prefix /api
2025-05-18 19:24:53 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 19:24:53 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 19:24:53 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 19:24:53 - app.main - INFO - All database indexes verified
2025-05-18 19:24:53 - app.main - INFO - Server started successfully!
2025-05-18 19:24:53 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 19:29:40 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 19:29:40 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 19:29:40 - app.main - INFO - Registering routers with prefix /api
2025-05-18 19:29:41 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 19:29:41 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 19:29:41 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 19:29:41 - app.main - INFO - All database indexes verified
2025-05-18 19:29:41 - app.main - INFO - Server started successfully!
2025-05-18 19:29:41 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 19:34:32 - app.main - INFO - Request: POST /api/maintenance-history
2025-05-18 19:34:32 - app.main - WARNING - Request failed: POST /api/maintenance-history - Status: 404
2025-05-18 19:36:40 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 19:36:50 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 19:36:50 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 19:36:50 - app.main - INFO - Registering routers with prefix /api
2025-05-18 19:36:51 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 19:36:51 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 19:36:51 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 19:36:51 - app.main - INFO - All database indexes verified
2025-05-18 19:36:51 - app.main - INFO - Server started successfully!
2025-05-18 19:36:51 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 19:37:12 - app.main - INFO - Request: POST /api/maintenance-history
2025-05-18 19:37:12 - app.routers.maintenance_history - INFO - Creating maintenance history entry for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-18 19:40:56 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 19:41:07 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 19:41:07 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 19:41:07 - app.main - INFO - Registering routers with prefix /api
2025-05-18 19:41:07 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 19:41:07 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 19:41:07 - app.main - INFO - Creating collection: departments
2025-05-18 19:41:07 - app.main - INFO - Creating collection: vendors
2025-05-18 19:41:07 - app.main - INFO - Creating collection: locations
2025-05-18 19:41:08 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 19:41:08 - app.main - INFO - All database indexes verified
2025-05-18 19:41:08 - app.main - INFO - Server started successfully!
2025-05-18 19:41:08 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 20:04:21 - app.main - INFO - Request: POST /api/documents
2025-05-18 20:04:22 - app.main - INFO - Request: POST /api/documents/
2025-05-18 20:04:22 - app.routers.documents - INFO - POST /documents/
2025-05-18 20:04:22 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.INVOICE
2025-05-18 20:04:22 - app.services.document_service - WARNING - Asset not found: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-18 20:04:22 - app.services.document_service - ERROR - Error creating document: Asset not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 104, in create_document
    raise ValueError("Asset not found")
ValueError: Asset not found
2025-05-18 20:04:22 - app.routers.documents - WARNING - Validation error in create_new_document: Asset not found
2025-05-18 20:04:22 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-18 20:12:15 - app.main - INFO - Request: POST /api/asset-categories
2025-05-18 20:12:15 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-18 20:12:15 - app.routers.asset_categories - INFO - Creating asset category: Monitors
2025-05-18 20:12:15 - app.services.asset_category_service - INFO - Creating category: Monitors
2025-05-18 20:12:15 - app.services.asset_category_service - INFO - Created category with ID: 1052ff57-e6ce-4238-b623-914a51cf1d38
2025-05-18 20:12:46 - app.main - INFO - Request: POST /api/employees
2025-05-18 20:12:46 - app.main - INFO - Request: POST /api/employees/
2025-05-18 20:12:46 - app.routers.employees - INFO - Creating employee: EMP002
2025-05-18 20:12:46 - app.services.employee_service - INFO - Creating employee: John Doe
2025-05-18 20:12:46 - app.services.employee_service - INFO - Created employee with ID: a35cdcd3-5a2d-4f7f-b2df-3f67cd5fdaa1
2025-05-18 20:13:02 - app.main - INFO - Request: POST /api/asset-items 
2025-05-18 20:13:02 - app.main - WARNING - Request failed: POST /api/asset-items  - Status: 404
2025-05-18 20:13:10 - app.main - INFO - Request: POST /api/asset-items 
2025-05-18 20:13:10 - app.main - WARNING - Request failed: POST /api/asset-items  - Status: 404
2025-05-18 20:18:38 - app.main - INFO - Request: POST /api/documents
2025-05-18 20:18:38 - app.main - INFO - Request: POST /api/documents/
2025-05-18 20:18:38 - app.routers.documents - INFO - POST /documents/
2025-05-18 20:18:38 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.INVOICE
2025-05-18 20:18:39 - app.services.document_service - WARNING - Asset not found: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-18 20:18:39 - app.services.document_service - ERROR - Error creating document: Asset not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 104, in create_document
    raise ValueError("Asset not found")
ValueError: Asset not found
2025-05-18 20:18:39 - app.routers.documents - WARNING - Validation error in create_new_document: Asset not found
2025-05-18 20:18:39 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-18 20:18:44 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 20:18:55 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 20:18:55 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 20:18:55 - app.main - INFO - Registering routers with prefix /api
2025-05-18 20:18:55 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 20:18:55 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 20:18:55 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 20:18:55 - app.main - INFO - All database indexes verified
2025-05-18 20:18:55 - app.main - INFO - Server started successfully!
2025-05-18 20:18:55 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 20:19:57 - app.main - INFO - Request: POST /api/documents
2025-05-18 20:19:57 - app.main - INFO - Request: POST /api/documents/
2025-05-18 20:19:57 - app.routers.documents - INFO - POST /documents/
2025-05-18 20:19:57 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.INVOICE
2025-05-18 20:19:57 - app.services.document_service - WARNING - Asset not found: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-18 20:19:57 - app.services.document_service - ERROR - Error creating document: Asset not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 104, in create_document
    raise ValueError("Asset not found")
ValueError: Asset not found
2025-05-18 20:19:57 - app.routers.documents - WARNING - Validation error in create_new_document: Asset not found
2025-05-18 20:19:57 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-18 20:22:11 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 20:22:23 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 20:22:23 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 20:22:23 - app.main - INFO - Registering routers with prefix /api
2025-05-18 20:22:24 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 20:22:24 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 20:22:24 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 20:22:24 - app.main - INFO - All database indexes verified
2025-05-18 20:22:24 - app.main - INFO - Server started successfully!
2025-05-18 20:22:24 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 20:24:26 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 20:24:26 - app.routers.documents - INFO - POST /documents/import
2025-05-18 20:24:26 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.INVOICE
2025-05-18 20:24:27 - app.services.document_service - INFO - Created document with ID: DOC-D60D66D4
2025-05-18 20:24:27 - app.routers.documents - INFO - Document imported successfully with ID: DOC-D60D66D4
2025-05-18 20:26:03 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 20:26:03 - app.routers.documents - INFO - POST /documents/import
2025-05-18 20:26:03 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.INVOICE
2025-05-18 20:26:03 - app.services.document_service - WARNING - Document with file_url https://storage.company.com/documents/invoices/dell_xps13_invoice.pdf already exists
2025-05-18 20:26:03 - app.services.document_service - ERROR - Error creating document: Document with file_url https://storage.company.com/documents/invoices/dell_xps13_invoice.pdf already exists
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 124, in create_document
    raise ValueError(f"Document with file_url {document.file_url} already exists")
ValueError: Document with file_url https://storage.company.com/documents/invoices/dell_xps13_invoice.pdf already exists
2025-05-18 20:26:03 - app.routers.documents - WARNING - Validation error in import_document: Document with file_url https://storage.company.com/documents/invoices/dell_xps13_invoice.pdf already exists
2025-05-18 20:26:03 - app.main - WARNING - Request failed: POST /api/documents/import - Status: 400
2025-05-18 20:26:15 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 20:26:15 - app.routers.documents - INFO - POST /documents/import
2025-05-18 20:26:15 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.WARRANTY
2025-05-18 20:26:15 - app.services.document_service - INFO - Created document with ID: DOC-090477D7
2025-05-18 20:26:15 - app.routers.documents - INFO - Document imported successfully with ID: DOC-090477D7
2025-05-18 20:26:22 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 20:26:22 - app.routers.documents - INFO - POST /documents/import
2025-05-18 20:26:22 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: 3a142936-dcb9-4962-9c9b-94995d6eb1f3, type: DocumentType.CONTRACT
2025-05-18 20:26:22 - app.services.document_service - INFO - Created document with ID: DOC-A0F23CD8
2025-05-18 20:26:22 - app.routers.documents - INFO - Document imported successfully with ID: DOC-A0F23CD8
2025-05-18 20:26:29 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 20:26:29 - app.main - WARNING - Request failed: POST /api/documents/import - Status: 422
2025-05-18 20:26:46 - app.main - INFO - Request: POST /api/requests
2025-05-18 20:26:46 - app.main - INFO - Request: POST /api/requests/
2025-05-18 20:26:46 - app.main - ERROR - Request failed: POST /api/requests/ - Error: 'RequestCreate' object has no attribute 'request_type'
2025-05-18 20:26:57 - app.main - INFO - Request: POST /api/requests
2025-05-18 20:26:57 - app.main - INFO - Request: POST /api/requests/
2025-05-18 20:26:57 - app.main - ERROR - Request failed: POST /api/requests/ - Error: 'RequestCreate' object has no attribute 'request_type'
2025-05-18 20:44:18 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 20:44:18 - app.routers.documents - INFO - POST /documents/import
2025-05-18 20:44:18 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.INVOICE
2025-05-18 20:44:18 - app.services.document_service - INFO - Created document with ID: DOC-07CC8339
2025-05-18 20:44:18 - app.routers.documents - INFO - Document imported successfully with ID: DOC-07CC8339
2025-05-18 20:47:32 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 20:47:42 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 20:47:42 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 20:47:42 - app.main - INFO - Registering routers with prefix /api
2025-05-18 20:47:42 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 20:47:42 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 20:47:42 - app.main - INFO - Creating collection: request_approval
2025-05-18 20:47:42 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 20:47:42 - app.main - INFO - All database indexes verified
2025-05-18 20:47:42 - app.main - INFO - Server started successfully!
2025-05-18 20:47:42 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 20:50:22 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 20:50:36 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 20:50:36 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 20:50:36 - app.main - INFO - Registering routers with prefix /api
2025-05-18 20:50:37 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 20:50:37 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 20:50:37 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 20:50:37 - app.main - INFO - All database indexes verified
2025-05-18 20:50:37 - app.main - INFO - Server started successfully!
2025-05-18 20:50:37 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 20:50:42 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 20:50:42 - app.routers.documents - INFO - POST /documents/import
2025-05-18 20:50:42 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.INVOICE
2025-05-18 20:50:42 - app.services.document_service - INFO - Created document with ID: DOC-387CB58A
2025-05-18 20:50:42 - app.routers.documents - INFO - Document imported successfully with ID: DOC-387CB58A
2025-05-18 21:01:28 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 21:01:28 - app.main - WARNING - Request failed: POST /api/documents/import - Status: 422
2025-05-18 21:01:37 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 21:04:19 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 21:04:19 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 21:04:19 - app.main - INFO - Registering routers with prefix /api
2025-05-18 21:04:19 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 21:04:19 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 21:04:19 - app.main - INFO - Creating collection: request_approval
2025-05-18 21:04:19 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 21:04:19 - app.main - INFO - All database indexes verified
2025-05-18 21:04:19 - app.main - INFO - Server started successfully!
2025-05-18 21:04:19 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 21:04:26 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 21:04:26 - app.main - WARNING - Request failed: POST /api/documents/import - Status: 422
2025-05-18 21:07:50 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 21:08:02 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 21:08:02 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 21:08:02 - app.main - INFO - Registering routers with prefix /api
2025-05-18 21:08:02 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 21:08:02 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 21:08:02 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 21:08:02 - app.main - INFO - All database indexes verified
2025-05-18 21:08:02 - app.main - INFO - Server started successfully!
2025-05-18 21:08:02 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 21:08:18 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 21:08:18 - app.routers.documents - INFO - POST /documents/import
2025-05-18 21:08:18 - app.services.document_service - INFO - Creating document - asset_id: AST-001, employee_id: None, type: DocumentType.INVOICE
2025-05-18 21:08:18 - app.services.document_service - ERROR - Error creating document: 'Collection' object is not callable. If you meant to call the 'get_collection' method on a 'Collection' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 138, in create_document
    collection = db.get_collection(DOCUMENTS_COLLECTION)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 407, in __call__
    raise TypeError(
    ...<3 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'get_collection' method on a 'Collection' object it is failing because no such method exists.
2025-05-18 21:08:18 - app.routers.documents - WARNING - Validation error in import_document: 'Collection' object is not callable. If you meant to call the 'get_collection' method on a 'Collection' object it is failing because no such method exists.
2025-05-18 21:08:18 - app.main - WARNING - Request failed: POST /api/documents/import - Status: 400
2025-05-18 21:29:51 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 21:30:00 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 21:30:00 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 21:30:00 - app.main - INFO - Registering routers with prefix /api
2025-05-18 21:30:00 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 21:30:00 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 21:30:00 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 21:30:01 - app.main - INFO - All database indexes verified
2025-05-18 21:30:01 - app.main - INFO - Server started successfully!
2025-05-18 21:30:01 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 21:30:04 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 21:30:04 - app.routers.documents - INFO - POST /documents/import
2025-05-18 21:30:04 - app.services.document_service - INFO - Creating document - asset_id: AST-001, employee_id: None, type: DocumentType.INVOICE
2025-05-18 21:30:04 - app.services.document_service - INFO - Created document with ID: DOC-FE4A50C4
2025-05-18 21:30:04 - app.routers.documents - INFO - Document imported successfully with ID: DOC-FE4A50C4
2025-05-18 21:30:52 - app.main - INFO - Request: POST /api/documents/import
2025-05-18 21:30:52 - app.routers.documents - INFO - POST /documents/import
2025-05-18 21:30:52 - app.services.document_service - INFO - Creating document - asset_id: AST-001, employee_id: None, type: DocumentType.INVOICE
2025-05-18 21:30:52 - app.services.document_service - WARNING - Document with file_url https://storage.example.com/documents/invoice_123456.pdf already exists
2025-05-18 21:30:52 - app.services.document_service - ERROR - Error creating document: Document with file_url https://storage.example.com/documents/invoice_123456.pdf already exists
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 152, in create_document
    raise ValueError(f"Document with file_url {document.file_url} already exists")
ValueError: Document with file_url https://storage.example.com/documents/invoice_123456.pdf already exists
2025-05-18 21:30:52 - app.routers.documents - WARNING - Validation error in import_document: Document with file_url https://storage.example.com/documents/invoice_123456.pdf already exists
2025-05-18 21:30:52 - app.main - WARNING - Request failed: POST /api/documents/import - Status: 400
2025-05-18 22:07:04 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-18 22:31:06 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-18 22:31:06 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-18 22:31:06 - app.main - INFO - Registering routers with prefix /api
2025-05-18 22:31:06 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-18 22:31:06 - app.main - INFO - MongoDB connection verified successfully
2025-05-18 22:31:06 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-18 22:31:06 - app.main - INFO - All database indexes verified
2025-05-18 22:31:06 - app.main - INFO - Server started successfully!
2025-05-18 22:31:06 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-18 22:33:14 - app.main - INFO - Request: POST /api/requests/
2025-05-18 22:33:14 - app.routers.request - INFO - POST /requests/ - type: RequestType.ASSET_REQUEST
2025-05-18 22:33:14 - app.routers.request - ERROR - Error in create_new_request: 'Collection' object is not callable. If you meant to call the 'get_collection' method on a 'Collection' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\request.py", line 139, in create_new_request
    result = request_service.create_request(collection, request)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\request_service.py", line 127, in create_request
    collection = db.get_collection(REQUESTS_COLLECTION)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 407, in __call__
    raise TypeError(
    ...<3 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'get_collection' method on a 'Collection' object it is failing because no such method exists.
2025-05-18 22:33:14 - app.main - WARNING - Request failed: POST /api/requests/ - Status: 500
2025-05-18 22:37:16 - app.main - INFO - Request: POST /api/requests/
2025-05-18 22:37:16 - app.routers.request - INFO - POST /requests/ - type: RequestType.ASSET_REQUEST
2025-05-18 22:37:16 - app.routers.request - ERROR - Error in create_new_request: 'Collection' object is not callable. If you meant to call the 'get_collection' method on a 'Collection' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\request.py", line 139, in create_new_request
    result = request_service.create_request(collection, request)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\request_service.py", line 127, in create_request
    db (Union[Database, Collection]): MongoDB database instance or collection
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 407, in __call__
    raise TypeError(
    ...<3 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'get_collection' method on a 'Collection' object it is failing because no such method exists.
2025-05-18 22:37:16 - app.main - WARNING - Request failed: POST /api/requests/ - Status: 500
2025-05-19 01:28:46 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 01:28:56 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 01:28:56 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 01:28:56 - app.main - INFO - Registering routers with prefix /api
2025-05-19 01:28:56 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 01:28:56 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 01:28:56 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 01:28:56 - app.main - INFO - All database indexes verified
2025-05-19 01:28:56 - app.main - INFO - Server started successfully!
2025-05-19 01:28:56 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 01:29:08 - app.main - INFO - Request: POST /api/requests/
2025-05-19 01:29:08 - app.routers.request - INFO - POST /requests/ - type: RequestType.ASSET_REQUEST
2025-05-19 01:34:09 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 01:34:19 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 01:34:19 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 01:34:19 - app.main - INFO - Registering routers with prefix /api
2025-05-19 01:34:20 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 01:34:20 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 01:34:20 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 01:34:20 - app.main - INFO - All database indexes verified
2025-05-19 01:34:20 - app.main - INFO - Server started successfully!
2025-05-19 01:34:20 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 05:24:54 - app.main - INFO - Request: POST /api/v1/categories
2025-05-19 05:24:54 - app.main - WARNING - Request failed: POST /api/v1/categories - Status: 404
2025-05-19 05:25:03 - app.main - INFO - Request: POST /api/categories
2025-05-19 05:25:03 - app.main - WARNING - Request failed: POST /api/categories - Status: 404
2025-05-19 05:40:05 - app.main - INFO - Request: POST /api/asset-categories
2025-05-19 05:40:05 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-19 05:40:05 - app.routers.asset_categories - INFO - Creating asset category: Software Licenses
2025-05-19 05:40:05 - app.services.asset_category_service - INFO - Creating category: Software Licenses
2025-05-19 05:40:05 - app.services.asset_category_service - INFO - Created category with ID: 8211a835-bed3-4aab-89b6-a020b07d41cc
2025-05-19 05:42:33 - app.main - INFO - Request: POST /api/asset-categories
2025-05-19 05:42:33 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-19 05:42:33 - app.routers.asset_categories - INFO - Creating asset category: Mobile Phones
2025-05-19 05:42:33 - app.services.asset_category_service - INFO - Creating category: Mobile Phones
2025-05-19 05:42:33 - app.services.asset_category_service - INFO - Created category with ID: 4ffde1a3-b8f6-41c3-8894-ee1385360845
2025-05-19 05:42:59 - app.main - INFO - Request: POST /api/asset-items
2025-05-19 05:42:59 - app.main - INFO - Request: POST /api/asset-items/
2025-05-19 05:42:59 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 422
2025-05-19 05:44:07 - app.main - INFO - Request: POST /api/asset-items
2025-05-19 05:44:07 - app.main - INFO - Request: POST /api/asset-items/
2025-05-19 05:44:07 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 422
2025-05-19 05:44:39 - app.main - INFO - Request: POST /api/employees
2025-05-19 05:44:39 - app.main - INFO - Request: POST /api/employees/
2025-05-19 05:44:39 - app.routers.employees - INFO - Creating employee: EMP003
2025-05-19 05:44:39 - app.services.employee_service - INFO - Creating employee: Sarah Johnson
2025-05-19 05:44:39 - app.services.employee_service - INFO - Created employee with ID: 50428004-84a3-44e5-ae0c-a7e5cccdedfa
2025-05-19 05:45:51 - app.main - INFO - Request: POST /api/employees
2025-05-19 05:45:51 - app.main - INFO - Request: POST /api/employees/
2025-05-19 05:45:51 - app.routers.employees - INFO - Creating employee: EMP004
2025-05-19 05:45:51 - app.services.employee_service - INFO - Creating employee: Michael Brown
2025-05-19 05:45:51 - app.services.employee_service - INFO - Created employee with ID: fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 05:46:21 - app.main - INFO - Request: POST /api/documents
2025-05-19 05:46:21 - app.main - INFO - Request: POST /api/documents/
2025-05-19 05:46:21 - app.routers.documents - INFO - POST /documents/
2025-05-19 05:46:21 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 05:46:21 - app.services.document_service - WARNING - Uploader not found: EMP001
2025-05-19 05:46:21 - app.services.document_service - ERROR - Error creating document: Uploader not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 141, in create_document
    raise ValueError("Uploader not found")
ValueError: Uploader not found
2025-05-19 05:46:21 - app.routers.documents - WARNING - Validation error in create_new_document: Uploader not found
2025-05-19 05:46:21 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 13:10:58 - app.main - INFO - Request: POST /api/documents
2025-05-19 13:10:58 - app.main - INFO - Request: POST /api/documents/
2025-05-19 13:10:58 - app.routers.documents - INFO - POST /documents/
2025-05-19 13:10:58 - app.services.document_service - INFO - Creating document - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 13:10:58 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/documents/warranty_dell_xps13.pdf
2025-05-19 13:10:58 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/documents/warranty_dell_xps13.pdf already exists
2025-05-19 13:10:58 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 13:11:18 - app.main - INFO - Request: POST /api/maintenance-history/
2025-05-19 13:11:18 - app.main - INFO - Request: POST /api/maintenance-history
2025-05-19 13:11:18 - app.routers.maintenance_history - INFO - Creating maintenance history entry for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-19 13:11:41 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-19 13:11:41 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-19 13:12:01 - app.main - INFO - Request: POST /api/requests/
2025-05-19 13:12:01 - app.main - WARNING - Request failed: POST /api/requests/ - Status: 422
2025-05-19 16:17:14 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 16:17:14 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 16:17:14 - app.main - INFO - Registering routers with prefix /api
2025-05-19 16:17:14 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 16:17:14 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 16:17:14 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 16:17:15 - app.main - INFO - All database indexes verified
2025-05-19 16:17:15 - app.main - INFO - Server started successfully!
2025-05-19 16:17:15 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 16:18:18 - app.main - INFO - Request: POST /api/asset-items/
2025-05-19 16:18:18 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 422
2025-05-19 16:18:45 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:18:45 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 422
2025-05-19 16:18:49 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:18:49 - app.routers.documents - INFO - POST /documents/
2025-05-19 16:18:49 - app.services.document_service - INFO - Creating document - asset_id: None, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 16:18:49 - app.services.document_service - WARNING - At least one of asset_id or employee_id required
2025-05-19 16:18:49 - app.services.document_service - ERROR - Error creating document: At least one of asset_id or employee_id must be provided
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 108, in create_document
    raise ValueError("At least one of asset_id or employee_id must be provided")
ValueError: At least one of asset_id or employee_id must be provided
2025-05-19 16:18:49 - app.routers.documents - WARNING - Validation error in create_new_document: At least one of asset_id or employee_id must be provided
2025-05-19 16:18:49 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 16:19:22 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-19 16:19:22 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-19 16:19:38 - app.main - INFO - Request: POST /api/requests/
2025-05-19 16:19:38 - app.routers.request - INFO - POST /requests/ - type: RequestType.ASSET_REQUEST
2025-05-19 16:20:01 - app.main - INFO - Request: POST /api/asset-items/
2025-05-19 16:20:01 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 422
2025-05-19 16:20:22 - app.main - INFO - Request: POST /api/asset-items/
2025-05-19 16:20:22 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 422
2025-05-19 16:26:08 - app.main - INFO - Request: GET /docs
2025-05-19 16:26:09 - app.main - INFO - Request: GET /openapi.json
2025-05-19 16:31:46 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 16:31:56 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 16:31:56 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 16:31:56 - app.main - INFO - Registering routers with prefix /api
2025-05-19 16:31:56 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 16:31:56 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 16:31:56 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 16:31:56 - app.main - INFO - All database indexes verified
2025-05-19 16:31:56 - app.main - INFO - Server started successfully!
2025-05-19 16:31:56 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 16:32:03 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-19 16:32:04 - app.routers.asset_categories - INFO - Creating asset category: Network Equipment
2025-05-19 16:32:04 - app.services.asset_category_service - INFO - Creating category: Network Equipment
2025-05-19 16:32:04 - app.services.asset_category_service - INFO - Created category with ID: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b
2025-05-19 16:32:21 - app.main - INFO - Request: POST /api/asset-items/
2025-05-19 16:32:21 - app.routers.asset_items - INFO - Creating asset item: Cisco Catalyst 2960-X
2025-05-19 16:32:21 - app.services.asset_item_service - INFO - Creating asset: Cisco Catalyst 2960-X
2025-05-19 16:32:21 - app.services.asset_item_service - WARNING - Category not found: [NETWORK_EQUIPMENT_CATEGORY_ID]
2025-05-19 16:32:21 - app.routers.asset_items - WARNING - Failed to create asset item: Category with ID '[NETWORK_EQUIPMENT_CATEGORY_ID]' does not exist
2025-05-19 16:32:21 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 400
2025-05-19 16:32:58 - app.main - INFO - Request: POST /api/asset-items/
2025-05-19 16:32:58 - app.routers.asset_items - INFO - Creating asset item: Cisco Catalyst 2960-X
2025-05-19 16:32:58 - app.services.asset_item_service - INFO - Creating asset: Cisco Catalyst 2960-X
2025-05-19 16:32:59 - app.services.asset_item_service - INFO - Created asset with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-19 16:33:17 - app.main - INFO - Request: POST /api/employees/
2025-05-19 16:33:17 - app.routers.employees - INFO - Creating employee: EMP005
2025-05-19 16:33:17 - app.services.employee_service - INFO - Creating employee: David Garcia
2025-05-19 16:33:18 - app.services.employee_service - INFO - Created employee with ID: 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 16:33:34 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:33:34 - app.routers.documents - INFO - POST /documents/
2025-05-19 16:33:34 - app.services.document_service - INFO - Creating document - asset_id: [CISCO_SWITCH_ASSET_ID], employee_id: None, type: DocumentType.WARRANTY
2025-05-19 16:33:34 - app.services.document_service - WARNING - Asset not found: [CISCO_SWITCH_ASSET_ID]
2025-05-19 16:33:34 - app.services.document_service - ERROR - Error creating document: Asset not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 129, in create_document
    raise ValueError("Asset not found")
ValueError: Asset not found
2025-05-19 16:33:34 - app.routers.documents - WARNING - Validation error in create_new_document: Asset not found
2025-05-19 16:33:34 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 16:34:30 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:34:30 - app.routers.documents - INFO - POST /documents/
2025-05-19 16:34:30 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 16:34:30 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/documents/cisco_warranty_2960x.pdf
2025-05-19 16:34:30 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/documents/cisco_warranty_2960x.pdf already exists
2025-05-19 16:34:30 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 16:39:09 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 16:39:09 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 422
2025-05-19 16:40:46 - app.main - INFO - Request: POST /api/maintenance-history
2025-05-19 16:40:46 - app.routers.maintenance_history - INFO - Creating maintenance history entry for asset 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-19 16:40:46 - app.routers.maintenance_history - ERROR - Failed to create maintenance history: E11000 duplicate key error collection: asset_management.maintenance_history index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.maintenance_history index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\maintenance_history.py", line 38, in create_maintenance_history
    result = db.maintenance_history.insert_one(maintenance.model_dump(exclude_unset=True))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 870, in insert_one
    self._insert_one(
    ~~~~~~~~~~~~~~~~^
        document,
        ^^^^^^^^^
    ...<5 lines>...
        comment=comment,
        ^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 810, in _insert_one
    self._database.client._retryable_write(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        acknowledged, _insert_command, session, operation=_Op.INSERT
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1898, in _retryable_write
    return self._retry_with_session(retryable, func, s, bulk, operation, operation_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1784, in _retry_with_session
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func=func,
        ^^^^^^^^^^
    ...<4 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
                                              ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2676, in _write
    return self._func(self._session, conn, self._retryable)  # type: ignore
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 808, in _insert_command
    _check_write_command_response(result)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 285, in _check_write_command_response
    _raise_last_write_error(write_errors)
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 255, in _raise_last_write_error
    raise DuplicateKeyError(error.get("errmsg"), 11000, error)
pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: asset_management.maintenance_history index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.maintenance_history index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 16:40:47 - app.main - WARNING - Request failed: POST /api/maintenance-history - Status: 500
2025-05-19 16:42:09 - app.main - INFO - Request: POST /api/requests/
2025-05-19 16:42:09 - app.routers.request - INFO - POST /requests/ - type: RequestType.ASSET_REQUEST
2025-05-19 16:42:37 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-19 16:42:37 - app.routers.asset_categories - INFO - Creating asset category: Office Furniture
2025-05-19 16:42:37 - app.services.asset_category_service - INFO - Creating category: Office Furniture
2025-05-19 16:42:37 - app.services.asset_category_service - INFO - Created category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-19 16:43:17 - app.main - INFO - Request: POST /api/asset-items/
2025-05-19 16:43:17 - app.routers.asset_items - INFO - Creating asset item: Herman Miller Aeron Chair
2025-05-19 16:43:17 - app.services.asset_item_service - INFO - Creating asset: Herman Miller Aeron Chair
2025-05-19 16:43:18 - app.services.asset_item_service - INFO - Created asset with ID: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac
2025-05-19 16:44:24 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:44:24 - app.routers.documents - INFO - POST /documents/
2025-05-19 16:44:24 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 16:44:24 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/documents/herman_miller_warranty.pdf
2025-05-19 16:44:24 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/documents/herman_miller_warranty.pdf already exists
2025-05-19 16:44:24 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 16:45:25 - app.main - INFO - Request: POST /api/requests/
2025-05-19 16:45:25 - app.routers.request - INFO - POST /requests/ - type: RequestType.ASSET_REQUEST
2025-05-19 16:46:23 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 16:46:23 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 422
2025-05-19 16:53:26 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:53:26 - app.routers.documents - INFO - POST /documents/
2025-05-19 16:53:26 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 16:53:26 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/documents/cisco_warranty_2960x_v2.pdf
2025-05-19 16:53:26 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/documents/cisco_warranty_2960x_v2.pdf already exists
2025-05-19 16:53:26 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 16:53:49 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:53:49 - app.routers.documents - INFO - POST /documents/
2025-05-19 16:53:49 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 16:53:50 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/documents/cisco_warranty_2960x_v2.pdf
2025-05-19 16:53:50 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/documents/cisco_warranty_2960x_v2.pdf already exists
2025-05-19 16:53:50 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 16:54:01 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:54:01 - app.routers.documents - INFO - POST /documents/
2025-05-19 16:54:01 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 16:54:01 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/documents/herman_miller_warranty_v2.pdf
2025-05-19 16:54:01 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/documents/herman_miller_warranty_v2.pdf already exists
2025-05-19 16:54:01 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 16:54:12 - app.main - INFO - Request: POST /api/documents/
2025-05-19 16:54:12 - app.routers.documents - INFO - POST /documents/
2025-05-19 16:54:12 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 16:54:12 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/documents/heerman_miller_warranty_v2.pdf
2025-05-19 16:54:12 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/documents/heerman_miller_warranty_v2.pdf already exists
2025-05-19 16:54:12 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 16:54:44 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 16:54:44 - app.routers.assignment_history - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 16:54:44 - app.services.assignment_history_service - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to employee None
2025-05-19 16:54:44 - app.services.assignment_history_service - WARNING - Employee not found: None
2025-05-19 16:54:44 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee with ID None not found
2025-05-19 16:54:44 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 16:55:17 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 16:55:17 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 16:55:17 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee None
2025-05-19 16:55:17 - app.services.assignment_history_service - WARNING - Employee not found: None
2025-05-19 16:55:17 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee with ID None not found
2025-05-19 16:55:17 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 16:56:02 - app.main - INFO - Request: POST /api/maintenance-history
2025-05-19 16:56:02 - app.routers.maintenance_history - INFO - Creating maintenance history entry for asset 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-19 16:56:22 - app.main - INFO - Request: POST /api/maintenance-history
2025-05-19 16:56:22 - app.routers.maintenance_history - INFO - Creating maintenance history entry for asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac
2025-05-19 17:03:50 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:03:50 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:03:50 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:03:50 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/docs/cisco_2960x_manual_1234.pdf
2025-05-19 17:03:50 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/docs/cisco_2960x_manual_1234.pdf already exists
2025-05-19 17:03:50 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:04:00 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:04:00 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:04:00 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:04:00 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/docs/aeron_assembly_guide_5678.pdf
2025-05-19 17:04:00 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/docs/aeron_assembly_guide_5678.pdf already exists
2025-05-19 17:04:00 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:04:28 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:04:28 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 422
2025-05-19 17:04:45 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:04:45 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 422
2025-05-19 17:05:28 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:05:28 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 422
2025-05-19 17:05:46 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:05:46 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 422
2025-05-19 17:07:02 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:07:02 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:07:02 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:07:02 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/docs/cisco_2960x_technical_manual_unique1.pdf
2025-05-19 17:07:02 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/docs/cisco_2960x_technical_manual_unique1.pdf already exists
2025-05-19 17:07:02 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:07:13 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 17:07:22 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 17:07:22 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 17:07:22 - app.main - INFO - Registering routers with prefix /api
2025-05-19 17:07:22 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 17:07:22 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 17:07:22 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 17:07:22 - app.main - INFO - All database indexes verified
2025-05-19 17:07:22 - app.main - INFO - Server started successfully!
2025-05-19 17:07:22 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 17:07:25 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:07:25 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:07:25 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:07:25 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/docs/cisco_2960x_technical_manual_unique1.pdf
2025-05-19 17:07:25 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/docs/cisco_2960x_technical_manual_unique1.pdf already exists
2025-05-19 17:07:25 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:07:32 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:07:32 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:07:32 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:07:32 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/docs/aeron_chair_manual_unique2.pdf
2025-05-19 17:07:32 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/docs/aeron_chair_manual_unique2.pdf already exists
2025-05-19 17:07:32 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:07:54 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:07:54 - app.routers.assignment_history - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:07:54 - app.services.assignment_history_service - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to employee 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:07:54 - app.services.assignment_history_service - WARNING - Employee department IT not allowed to be assigned assets from category 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b
2025-05-19 17:07:55 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee in department 'IT' cannot be assigned assets from category 'Network Equipment'
2025-05-19 17:07:55 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 17:08:19 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:08:19 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:08:19 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:08:19 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'duration'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 190, in assign_asset_to_employee
    if assignment.duration and assignment.duration > 0:
       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'duration'. Did you mean: 'location'?
2025-05-19 17:08:19 - app.routers.assignment_history - ERROR - Failed to assign asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac: 'AssignmentCreate' object has no attribute 'duration'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 190, in assign_asset_to_employee
    if assignment.duration and assignment.duration > 0:
       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'duration'. Did you mean: 'location'?
2025-05-19 17:08:19 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 17:09:46 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:09:46 - app.routers.assignment_history - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:09:46 - app.services.assignment_history_service - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to employee 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:09:46 - app.services.assignment_history_service - WARNING - Employee department IT not allowed to be assigned assets from category 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b
2025-05-19 17:09:46 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee in department 'IT' cannot be assigned assets from category 'Network Equipment'
2025-05-19 17:09:46 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 17:10:01 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 17:10:10 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 17:10:10 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 17:10:10 - app.main - INFO - Registering routers with prefix /api
2025-05-19 17:10:10 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 17:10:10 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 17:10:10 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 17:10:11 - app.main - INFO - All database indexes verified
2025-05-19 17:10:11 - app.main - INFO - Server started successfully!
2025-05-19 17:10:11 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 17:10:15 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:10:15 - app.routers.assignment_history - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:10:15 - app.services.assignment_history_service - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to employee 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:10:15 - app.services.assignment_history_service - WARNING - Employee department IT not allowed to be assigned assets from category 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b
2025-05-19 17:10:15 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee in department 'IT' cannot be assigned assets from category 'Network Equipment'
2025-05-19 17:10:15 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 17:10:23 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:10:23 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:10:23 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:10:23 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'duration'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 190, in assign_asset_to_employee
    if assignment.duration and assignment.duration > 0:
       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'duration'. Did you mean: 'location'?
2025-05-19 17:10:23 - app.routers.assignment_history - ERROR - Failed to assign asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac: 'AssignmentCreate' object has no attribute 'duration'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 190, in assign_asset_to_employee
    if assignment.duration and assignment.duration > 0:
       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'duration'. Did you mean: 'location'?
2025-05-19 17:10:23 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 17:10:37 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:10:37 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:10:37 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:10:38 - app.services.document_service - WARNING - Duplicate file_url: https://storage.example.com/docs/cisco_manual_20250519170923.pdf
2025-05-19 17:10:38 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url https://storage.example.com/docs/cisco_manual_20250519170923.pdf already exists
2025-05-19 17:10:38 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:10:58 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:10:58 - app.routers.assignment_history - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:10:58 - app.services.assignment_history_service - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to employee 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:10:59 - app.services.assignment_history_service - WARNING - Employee department IT not allowed to be assigned assets from category 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b
2025-05-19 17:10:59 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee in department 'IT' cannot be assigned assets from category 'Network Equipment'
2025-05-19 17:10:59 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 17:11:10 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:11:10 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:11:10 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:11:10 - app.services.document_service - WARNING - Duplicate file_url: mongodb://custom/document/cisco_manual_1590483726.pdf
2025-05-19 17:11:10 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url mongodb://custom/document/cisco_manual_1590483726.pdf already exists
2025-05-19 17:11:10 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:11:17 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:11:17 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:11:17 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 17:11:17 - app.services.document_service - WARNING - Duplicate file_url: mongodb://custom/document/aeron_warranty_8273649152.pdf
2025-05-19 17:11:17 - app.routers.documents - WARNING - Validation error in create_new_document: Document with file_url mongodb://custom/document/aeron_warranty_8273649152.pdf already exists
2025-05-19 17:11:17 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:15:47 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 17:15:56 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 17:15:56 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 17:15:56 - app.main - INFO - Registering routers with prefix /api
2025-05-19 17:15:57 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 17:15:57 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 17:15:57 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 17:15:57 - app.main - INFO - All database indexes verified
2025-05-19 17:15:57 - app.main - INFO - Server started successfully!
2025-05-19 17:15:57 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 17:16:08 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:16:08 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:16:08 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:16:08 - app.services.document_service - WARNING - Duplicate key error for file_url: https://storage.example.com/docs/cisco_switch_manual_v1.pdf
2025-05-19 17:16:08 - app.routers.documents - WARNING - Validation error in create_new_document: Document with ID or name already exists
2025-05-19 17:16:08 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:16:31 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:16:31 - app.routers.assignment_history - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:16:31 - app.services.assignment_history_service - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to employee None
2025-05-19 17:16:31 - app.services.assignment_history_service - WARNING - Employee not found: None
2025-05-19 17:16:31 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee with ID None not found
2025-05-19 17:16:31 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 17:23:19 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:23:19 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:23:19 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:23:19 - app.services.document_service - WARNING - Duplicate key error for file_url: https://storage.example.com/docs/cisco_catalyst_guide_v23_1716211982.pdf
2025-05-19 17:23:19 - app.routers.documents - WARNING - Validation error in create_new_document: Document with ID or name already exists
2025-05-19 17:23:19 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:23:40 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:23:40 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 422
2025-05-19 17:23:50 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:23:50 - app.routers.assignment_history - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:23:50 - app.services.assignment_history_service - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to employee 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:23:50 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 17:23:50 - app.routers.assignment_history - ERROR - Failed to assign asset 76ad2e00-5c0d-4e3c-9307-5114330e425c: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 17:23:50 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 17:24:24 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:24:24 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:24:24 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 17:24:24 - app.services.document_service - WARNING - Duplicate key error for file_url: https://storage.example.com/docs/aeron_warranty_cert_1716211983.pdf
2025-05-19 17:24:24 - app.routers.documents - WARNING - Validation error in create_new_document: Document with ID or name already exists
2025-05-19 17:24:24 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:24:37 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:24:37 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:24:37 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:24:37 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 17:24:37 - app.routers.assignment_history - ERROR - Failed to assign asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 17:24:37 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 17:28:10 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:28:10 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:28:10 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:28:10 - app.services.document_service - WARNING - Duplicate key error for file_url: https://storage.example.com/docs/cisco-catalyst-2960x-manual-e8f293a7dc146b89.pdf
2025-05-19 17:28:10 - app.routers.documents - WARNING - Validation error in create_new_document: Document with ID or name already exists
2025-05-19 17:28:10 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:28:17 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 17:28:25 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 17:28:25 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 17:28:25 - app.main - INFO - Registering routers with prefix /api
2025-05-19 17:28:25 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 17:28:25 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 17:28:25 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 17:28:25 - app.main - INFO - All database indexes verified
2025-05-19 17:28:25 - app.main - INFO - Server started successfully!
2025-05-19 17:28:25 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 17:28:28 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:28:28 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:28:28 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:28:28 - app.services.document_service - WARNING - Duplicate key error for file_url: https://storage.example.com/docs/cisco-catalyst-2960x-manual-e8f293a7dc146b89.pdf
2025-05-19 17:28:28 - app.routers.documents - WARNING - Validation error in create_new_document: Document with ID or name already exists
2025-05-19 17:28:28 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:28:38 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:28:38 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:28:38 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:28:38 - app.services.document_service - WARNING - Duplicate key error for file_url: https://storage.example.com/docs/herman-miller-aeron-manual-5d7ac18f2e943b2c.pdf
2025-05-19 17:28:38 - app.routers.documents - WARNING - Validation error in create_new_document: Document with ID or name already exists
2025-05-19 17:28:38 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:28:53 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:28:53 - app.routers.assignment_history - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:28:53 - app.services.assignment_history_service - INFO - Assigning asset 76ad2e00-5c0d-4e3c-9307-5114330e425c to employee 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 17:28:53 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 17:28:53 - app.routers.assignment_history - ERROR - Failed to assign asset 76ad2e00-5c0d-4e3c-9307-5114330e425c: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 17:28:53 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 17:29:01 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:29:01 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:29:01 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:29:01 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 17:29:01 - app.routers.assignment_history - ERROR - Failed to assign asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 17:29:01 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 17:30:55 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:30:55 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:30:55 - app.services.document_service - INFO - Creating document - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, type: DocumentType.MANUAL
2025-05-19 17:30:55 - app.services.document_service - WARNING - Duplicate key error for file_url: https://storage.example.com/docs/cisco_switch_doc_23_4a_78a3b291c47d5e98.pdf
2025-05-19 17:30:55 - app.routers.documents - WARNING - Validation error in create_new_document: Document with ID or name already exists
2025-05-19 17:30:55 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:31:05 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 17:31:05 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 17:31:05 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee None
2025-05-19 17:31:05 - app.services.assignment_history_service - WARNING - Employee not found: None
2025-05-19 17:31:05 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee with ID None not found
2025-05-19 17:31:05 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 17:51:56 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 17:51:56 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 17:51:56 - app.main - INFO - Registering routers with prefix /api
2025-05-19 17:51:56 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 17:51:56 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 17:51:56 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 17:51:56 - app.main - INFO - All database indexes verified
2025-05-19 17:51:56 - app.main - INFO - Server started successfully!
2025-05-19 17:51:56 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 17:52:00 - app.main - INFO - Request: POST /api/documents
2025-05-19 17:52:00 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:52:00 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:52:00 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 17:52:00 - app.services.document_service - WARNING - Duplicate key error for file_url: https://storage.company.com/documents/warranties/aeron_chair_warranty.pdf
2025-05-19 17:52:00 - app.routers.documents - WARNING - Validation error in create_new_document: Document with ID or name already exists
2025-05-19 17:52:00 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:53:43 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 17:53:54 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 17:53:54 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 17:53:54 - app.main - INFO - Registering routers with prefix /api
2025-05-19 17:53:54 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 17:53:54 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 17:53:54 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 17:53:54 - app.main - INFO - All database indexes verified
2025-05-19 17:53:54 - app.main - INFO - Server started successfully!
2025-05-19 17:53:54 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 17:54:29 - app.main - INFO - Request: POST /api/documents
2025-05-19 17:54:29 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:54:29 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:54:29 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 17:54:29 - app.services.document_service - INFO - Made URL unique by adding timestamp: https://storage.company.com/documents/warranties/aeron_chair_warranty_1747657469192.pdf
2025-05-19 17:54:29 - app.services.document_service - WARNING - Still got duplicate key error, retrying with new ID: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:29 - app.services.document_service - ERROR - Error retrying document creation: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 173, in create_document
    result = collection.insert_one(doc_dict)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 870, in insert_one
    self._insert_one(
    ~~~~~~~~~~~~~~~~^
        document,
        ^^^^^^^^^
    ...<5 lines>...
        comment=comment,
        ^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 810, in _insert_one
    self._database.client._retryable_write(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        acknowledged, _insert_command, session, operation=_Op.INSERT
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1898, in _retryable_write
    return self._retry_with_session(retryable, func, s, bulk, operation, operation_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1784, in _retry_with_session
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func=func,
        ^^^^^^^^^^
    ...<4 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
                                              ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2676, in _write
    return self._func(self._session, conn, self._retryable)  # type: ignore
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 808, in _insert_command
    _check_write_command_response(result)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 285, in _check_write_command_response
    _raise_last_write_error(write_errors)
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 255, in _raise_last_write_error
    raise DuplicateKeyError(error.get("errmsg"), 11000, error)
pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 216, in create_document
    result = collection.insert_one(doc_dict)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 870, in insert_one
    self._insert_one(
    ~~~~~~~~~~~~~~~~^
        document,
        ^^^^^^^^^
    ...<5 lines>...
        comment=comment,
        ^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 810, in _insert_one
    self._database.client._retryable_write(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        acknowledged, _insert_command, session, operation=_Op.INSERT
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1898, in _retryable_write
    return self._retry_with_session(retryable, func, s, bulk, operation, operation_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1784, in _retry_with_session
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func=func,
        ^^^^^^^^^^
    ...<4 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
                                              ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2676, in _write
    return self._func(self._session, conn, self._retryable)  # type: ignore
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 808, in _insert_command
    _check_write_command_response(result)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 285, in _check_write_command_response
    _raise_last_write_error(write_errors)
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 255, in _raise_last_write_error
    raise DuplicateKeyError(error.get("errmsg"), 11000, error)
pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:29 - app.routers.documents - WARNING - Validation error in create_new_document: Could not create document after retry: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:29 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:54:45 - app.main - INFO - Request: POST /api/documents
2025-05-19 17:54:45 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:54:45 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:54:45 - app.services.document_service - INFO - Creating document - asset_id: None, employee_id: 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390, type: DocumentType.CERTIFICATE
2025-05-19 17:54:45 - app.services.document_service - INFO - Made URL unique by adding timestamp: https://storage.company.com/documents/certifications/david_garcia_ccna_1747657485246.pdf
2025-05-19 17:54:45 - app.services.document_service - WARNING - Still got duplicate key error, retrying with new ID: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:45 - app.services.document_service - ERROR - Error retrying document creation: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 173, in create_document
    result = collection.insert_one(doc_dict)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 870, in insert_one
    self._insert_one(
    ~~~~~~~~~~~~~~~~^
        document,
        ^^^^^^^^^
    ...<5 lines>...
        comment=comment,
        ^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 810, in _insert_one
    self._database.client._retryable_write(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        acknowledged, _insert_command, session, operation=_Op.INSERT
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1898, in _retryable_write
    return self._retry_with_session(retryable, func, s, bulk, operation, operation_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1784, in _retry_with_session
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func=func,
        ^^^^^^^^^^
    ...<4 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
                                              ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2676, in _write
    return self._func(self._session, conn, self._retryable)  # type: ignore
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 808, in _insert_command
    _check_write_command_response(result)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 285, in _check_write_command_response
    _raise_last_write_error(write_errors)
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 255, in _raise_last_write_error
    raise DuplicateKeyError(error.get("errmsg"), 11000, error)
pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 216, in create_document
    result = collection.insert_one(doc_dict)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 870, in insert_one
    self._insert_one(
    ~~~~~~~~~~~~~~~~^
        document,
        ^^^^^^^^^
    ...<5 lines>...
        comment=comment,
        ^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 810, in _insert_one
    self._database.client._retryable_write(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        acknowledged, _insert_command, session, operation=_Op.INSERT
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1898, in _retryable_write
    return self._retry_with_session(retryable, func, s, bulk, operation, operation_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1784, in _retry_with_session
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func=func,
        ^^^^^^^^^^
    ...<4 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
                                              ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2676, in _write
    return self._func(self._session, conn, self._retryable)  # type: ignore
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 808, in _insert_command
    _check_write_command_response(result)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 285, in _check_write_command_response
    _raise_last_write_error(write_errors)
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 255, in _raise_last_write_error
    raise DuplicateKeyError(error.get("errmsg"), 11000, error)
pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:45 - app.routers.documents - WARNING - Validation error in create_new_document: Could not create document after retry: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:45 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:54:53 - app.main - INFO - Request: POST /api/documents
2025-05-19 17:54:53 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:54:53 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:54:53 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: fefbcf5d-90a8-4129-9272-8413b843212a, type: DocumentType.CONTRACT
2025-05-19 17:54:53 - app.services.document_service - INFO - Made URL unique by adding timestamp: https://storage.company.com/documents/assignments/chair_assignment_michael_brown_1747657493313.pdf
2025-05-19 17:54:53 - app.services.document_service - WARNING - Still got duplicate key error, retrying with new ID: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:53 - app.services.document_service - ERROR - Error retrying document creation: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 173, in create_document
    result = collection.insert_one(doc_dict)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 870, in insert_one
    self._insert_one(
    ~~~~~~~~~~~~~~~~^
        document,
        ^^^^^^^^^
    ...<5 lines>...
        comment=comment,
        ^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 810, in _insert_one
    self._database.client._retryable_write(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        acknowledged, _insert_command, session, operation=_Op.INSERT
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1898, in _retryable_write
    return self._retry_with_session(retryable, func, s, bulk, operation, operation_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1784, in _retry_with_session
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func=func,
        ^^^^^^^^^^
    ...<4 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
                                              ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2676, in _write
    return self._func(self._session, conn, self._retryable)  # type: ignore
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 808, in _insert_command
    _check_write_command_response(result)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 285, in _check_write_command_response
    _raise_last_write_error(write_errors)
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 255, in _raise_last_write_error
    raise DuplicateKeyError(error.get("errmsg"), 11000, error)
pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\document_service.py", line 216, in create_document
    result = collection.insert_one(doc_dict)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 870, in insert_one
    self._insert_one(
    ~~~~~~~~~~~~~~~~^
        document,
        ^^^^^^^^^
    ...<5 lines>...
        comment=comment,
        ^^^^^^^^^^^^^^^^
    ),
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 810, in _insert_one
    self._database.client._retryable_write(
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        acknowledged, _insert_command, session, operation=_Op.INSERT
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1898, in _retryable_write
    return self._retry_with_session(retryable, func, s, bulk, operation, operation_id)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1784, in _retry_with_session
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func=func,
        ^^^^^^^^^^
    ...<4 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
                                              ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2676, in _write
    return self._func(self._session, conn, self._retryable)  # type: ignore
           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 808, in _insert_command
    _check_write_command_response(result)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 285, in _check_write_command_response
    _raise_last_write_error(write_errors)
    ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\helpers_shared.py", line 255, in _raise_last_write_error
    raise DuplicateKeyError(error.get("errmsg"), 11000, error)
pymongo.errors.DuplicateKeyError: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:53 - app.routers.documents - WARNING - Validation error in create_new_document: Could not create document after retry: E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }, full error: {'index': 0, 'code': 11000, 'errmsg': 'E11000 duplicate key error collection: asset_management.documents index: id_1 dup key: { id: null }', 'keyPattern': {'id': 1}, 'keyValue': {'id': None}}
2025-05-19 17:54:53 - app.main - WARNING - Request failed: POST /api/documents/ - Status: 400
2025-05-19 17:57:41 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 17:57:53 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 17:57:53 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 17:57:53 - app.main - INFO - Registering routers with prefix /api
2025-05-19 17:57:53 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 17:57:53 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 17:57:53 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 17:57:53 - app.main - INFO - All database indexes verified
2025-05-19 17:57:53 - app.main - INFO - Server started successfully!
2025-05-19 17:57:53 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 17:57:59 - app.main - INFO - Request: POST /api/documents
2025-05-19 17:57:59 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:57:59 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:57:59 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, type: DocumentType.WARRANTY
2025-05-19 17:57:59 - app.services.document_service - INFO - Made URL unique by adding timestamp: https://storage.company.com/documents/warranties/aeron_chair_warranty_1747657679346.pdf
2025-05-19 17:57:59 - app.services.document_service - INFO - Created document with ID: DOC-103721D5
2025-05-19 17:58:08 - app.main - INFO - Request: POST /api/documents
2025-05-19 17:58:08 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:58:08 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:58:08 - app.services.document_service - INFO - Creating document - asset_id: None, employee_id: 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390, type: DocumentType.CERTIFICATE
2025-05-19 17:58:08 - app.services.document_service - INFO - Made URL unique by adding timestamp: https://storage.company.com/documents/certifications/david_garcia_ccna_1747657688339.pdf
2025-05-19 17:58:08 - app.services.document_service - INFO - Created document with ID: DOC-6E4B461D
2025-05-19 17:58:18 - app.main - INFO - Request: POST /api/documents
2025-05-19 17:58:18 - app.main - INFO - Request: POST /api/documents/
2025-05-19 17:58:18 - app.routers.documents - INFO - POST /documents/
2025-05-19 17:58:18 - app.services.document_service - INFO - Creating document - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: fefbcf5d-90a8-4129-9272-8413b843212a, type: DocumentType.CONTRACT
2025-05-19 17:58:18 - app.services.document_service - INFO - Made URL unique by adding timestamp: https://storage.company.com/documents/assignments/chair_assignment_michael_brown_1747657698982.pdf
2025-05-19 17:58:19 - app.services.document_service - INFO - Created document with ID: DOC-70C3A29B
2025-05-19 18:02:04 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 18:02:13 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 18:02:13 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 18:02:13 - app.main - INFO - Registering routers with prefix /api
2025-05-19 18:02:13 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 18:02:13 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 18:02:13 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 18:02:14 - app.main - INFO - All database indexes verified
2025-05-19 18:02:14 - app.main - INFO - Server started successfully!
2025-05-19 18:02:14 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 18:02:41 - app.main - INFO - Request: POST /api/requests
2025-05-19 18:02:41 - app.main - INFO - Request: POST /api/requests/
2025-05-19 18:02:41 - app.routers.request - INFO - POST /requests/ - type: RequestType.ASSIGNMENT_APPROVAL
2025-05-19 18:07:26 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 18:07:26 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:07:26 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:07:26 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 18:07:26 - app.routers.assignment_history - ERROR - Failed to assign asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 18:07:26 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 18:07:40 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 18:07:49 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 18:07:49 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 18:07:49 - app.main - INFO - Registering routers with prefix /api
2025-05-19 18:07:49 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 18:07:49 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 18:07:49 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 18:07:49 - app.main - INFO - All database indexes verified
2025-05-19 18:07:49 - app.main - INFO - Server started successfully!
2025-05-19 18:07:49 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 18:07:53 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 18:07:53 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:07:53 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:07:53 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 18:07:53 - app.routers.assignment_history - ERROR - Failed to assign asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 18:07:53 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 18:08:08 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 18:08:08 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:08:08 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:08:08 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 18:08:08 - app.routers.assignment_history - ERROR - Failed to assign asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 18:08:08 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 18:08:14 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 18:08:14 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 18:08:14 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 18:08:14 - app.services.assignment_history_service - ERROR - Error assigning asset: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 18:08:14 - app.routers.assignment_history - ERROR - Failed to assign asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac: 'AssignmentCreate' object has no attribute 'checked_out_condition'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 66, in assign_asset
    updated_asset = assign_asset_to_employee(collection, assignment)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 254, in assign_asset_to_employee
    "checked_out_condition": assignment.checked_out_condition or "good",
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentCreate' object has no attribute 'checked_out_condition'. Did you mean: 'checkout_condition'?
2025-05-19 18:08:14 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 500
2025-05-19 18:08:31 - app.main - INFO - Request: POST /api/assignment-history/unassign
2025-05-19 18:08:31 - app.routers.assignment_history - INFO - Unassigning asset with assignment ID ASSIGNMENT_ID_FROM_RESPONSE
2025-05-19 18:08:31 - app.routers.assignment_history - ERROR - Failed to unassign assignment ASSIGNMENT_ID_FROM_RESPONSE: 'AssignmentReturn' object has no attribute 'asset_id'
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\assignment_history.py", line 93, in unassign_asset
    updated_asset = unassign_employee_from_asset(collection, return_data)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\assignment_history_service.py", line 354, in unassign_employee_from_asset
    logger.info(f"Unassigning asset {assignment.asset_id}")
                                     ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 892, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'AssignmentReturn' object has no attribute 'asset_id'
2025-05-19 18:08:31 - app.main - WARNING - Request failed: POST /api/assignment-history/unassign - Status: 500
2025-05-19 18:11:53 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 18:11:53 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:11:53 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee None
2025-05-19 18:11:53 - app.services.assignment_history_service - WARNING - Employee not found: None
2025-05-19 18:11:53 - app.routers.assignment_history - WARNING - Failed to assign asset: Employee with ID None not found
2025-05-19 18:11:53 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 18:12:06 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 18:12:14 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 18:12:14 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 18:12:14 - app.main - INFO - Registering routers with prefix /api
2025-05-19 18:12:14 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 18:12:14 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 18:12:14 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 18:12:15 - app.main - INFO - All database indexes verified
2025-05-19 18:12:15 - app.main - INFO - Server started successfully!
2025-05-19 18:12:15 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-19 18:12:18 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 18:12:18 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:12:18 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:12:18 - app.services.assignment_history_service - INFO - Updated asset status to assigned: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac
2025-05-19 18:12:18 - app.services.assignment_history_service - INFO - Updated employee has_assigned_assets: fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:12:18 - app.routers.assignment_history - WARNING - Failed to assign asset: 9 validation errors for AssetItem
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 19, 12, 42, 18, 574000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
documents.0.doc_id
  Field required [type=missing, input_value={'id': 'DOC-103721D5', 'n...ument_type': 'warranty'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
documents.0.type
  Field required [type=missing, input_value={'id': 'DOC-103721D5', 'n...ument_type': 'warranty'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
documents.0.url
  Field required [type=missing, input_value={'id': 'DOC-103721D5', 'n...ument_type': 'warranty'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
documents.0.upload_date
  Field required [type=missing, input_value={'id': 'DOC-103721D5', 'n...ument_type': 'warranty'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
documents.1.doc_id
  Field required [type=missing, input_value={'id': 'DOC-70C3A29B', 'n...ument_type': 'contract'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
documents.1.type
  Field required [type=missing, input_value={'id': 'DOC-70C3A29B', 'n...ument_type': 'contract'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
documents.1.url
  Field required [type=missing, input_value={'id': 'DOC-70C3A29B', 'n...ument_type': 'contract'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
documents.1.upload_date
  Field required [type=missing, input_value={'id': 'DOC-70C3A29B', 'n...ument_type': 'contract'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-19 18:12:18 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 18:12:34 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 18:12:34 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:12:34 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-19 18:12:34 - app.services.assignment_history_service - WARNING - Asset already assigned: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac
2025-05-19 18:12:34 - app.routers.assignment_history - WARNING - Failed to assign asset: Asset with ID 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac is already assigned
2025-05-19 18:12:34 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 18:12:42 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-19 18:12:42 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 18:12:42 - app.services.assignment_history_service - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to employee 1be3bc7d-a769-4a40-b2ea-0d2dc1b57390
2025-05-19 18:12:42 - app.services.assignment_history_service - WARNING - Asset already assigned: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac
2025-05-19 18:12:42 - app.routers.assignment_history - WARNING - Failed to assign asset: Asset with ID 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac is already assigned
2025-05-19 18:12:42 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 400
2025-05-19 18:14:44 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-19 18:14:57 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-19 18:14:57 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-19 18:14:57 - app.main - INFO - Registering routers with prefix /api
2025-05-19 18:14:57 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-19 18:14:57 - app.main - INFO - MongoDB connection verified successfully
2025-05-19 18:14:57 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-19 18:14:57 - app.main - INFO - All database indexes verified
2025-05-19 18:14:57 - app.main - INFO - Server started successfully!
2025-05-19 18:14:57 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 15:00:33 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-20 15:00:33 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 422
2025-05-20 15:00:42 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-20 15:00:42 - app.main - WARNING - Request failed: POST /api/assignment-history/assign - Status: 422
2025-05-20 15:00:45 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 15:00:59 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 15:00:59 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 15:00:59 - app.main - INFO - Registering routers with prefix /api
2025-05-20 15:00:59 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 15:00:59 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 15:01:00 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 15:01:00 - app.main - INFO - All database indexes verified
2025-05-20 15:01:00 - app.main - INFO - Server started successfully!
2025-05-20 15:01:00 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 15:01:07 - app.main - INFO - Request: POST /api/assignment-history/assign
2025-05-20 15:01:07 - app.routers.assignment_history - INFO - Assigning asset 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac to fefbcf5d-90a8-4129-9272-8413b843212a
2025-05-20 15:01:29 - app.main - INFO - Request: POST /api/assignment-history/unassign
2025-05-20 15:01:29 - app.routers.assignment_history - INFO - Unassigning asset with assignment ID ASSIGNMENT_ID_FROM_RESPONSE
2025-05-20 15:01:29 - app.main - WARNING - Request failed: POST /api/assignment-history/unassign - Status: 404
2025-05-20 15:02:10 - app.main - INFO - Request: POST /api/assignment-history/unassign
2025-05-20 15:02:10 - app.routers.assignment_history - INFO - Unassigning asset with assignment ID 829813ac-2c2a-4e14-bd79-372267c4bf23
2025-05-20 15:12:49 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 15:13:00 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 15:13:00 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 15:13:00 - app.main - INFO - Registering routers with prefix /api
2025-05-20 15:13:00 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 15:13:00 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 15:13:00 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 15:13:00 - app.main - INFO - All database indexes verified
2025-05-20 15:13:00 - app.main - INFO - Server started successfully!
2025-05-20 15:13:00 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 17:20:56 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 17:21:07 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 17:21:07 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 17:21:07 - app.main - INFO - Registering routers with prefix /api
2025-05-20 17:21:07 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 17:21:07 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 17:21:07 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 17:21:07 - app.main - INFO - All database indexes verified
2025-05-20 17:21:07 - app.main - INFO - Server started successfully!
2025-05-20 17:21:07 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 17:25:42 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 17:25:51 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 17:25:51 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 17:25:51 - app.main - INFO - Registering routers with prefix /api
2025-05-20 17:25:51 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 17:25:51 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 17:25:51 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 17:25:51 - app.main - INFO - All database indexes verified
2025-05-20 17:25:51 - app.main - INFO - Server started successfully!
2025-05-20 17:25:51 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 17:30:43 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 17:30:43 - uvicorn.error - ERROR - Traceback (most recent call last):
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ~~~~~~~~~~^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
    ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
    ~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
    ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\server.py", line 69, in serve
    with self.capture_signals():
         ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 148, in __exit__
    next(self.gen)
    ~~~~^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\server.py", line 330, in capture_signals
    signal.raise_signal(captured_signal)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 157, in _on_sigint
    raise KeyboardInterrupt()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\starlette\routing.py", line 700, in lifespan
    await receive()
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\lifespan\on.py", line 137, in receive
    return await self.receive_queue.get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\queues.py", line 186, in get
    await getter
asyncio.exceptions.CancelledError

2025-05-20 17:30:52 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 17:30:52 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 17:30:52 - app.main - INFO - Registering routers with prefix /api
2025-05-20 17:30:52 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 17:30:52 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 17:30:52 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 17:30:53 - app.main - INFO - All database indexes verified
2025-05-20 17:30:53 - app.main - INFO - Server started successfully!
2025-05-20 17:30:53 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 17:31:11 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:31:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:31:11 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:31:11 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:31:11 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:31:11 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:31:11 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:31:12 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:31:12 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:31:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:31:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:31:12 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:31:12 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:31:12 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:31:14 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:31:14 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:31:14 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:31:14 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:31:14 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:31:14 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:31:14 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:31:17 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:31:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:31:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:31:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:31:17 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:31:17 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:31:17 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:32:42 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:32:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:32:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:32:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:32:42 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:42 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:42 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:32:44 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:32:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:32:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:32:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:32:44 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:44 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:44 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:32:45 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:32:45 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:32:45 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:32:45 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:32:45 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:45 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:45 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:32:48 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:32:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:32:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:32:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:32:48 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:48 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:48 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:32:58 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:32:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:32:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:32:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:32:58 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:58 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:58 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:32:59 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:32:59 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:32:59 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:32:59 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:32:59 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:59 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:32:59 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:00 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:00 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:00 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:00 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:00 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:00 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:00 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:01 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:01 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:01 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:01 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:02 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:02 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:02 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:02 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:02 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:02 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:03 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:03 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:03 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:03 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:05 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:05 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:05 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:05 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:06 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:06 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:06 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:06 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:06 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:06 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:06 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:36 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:36 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:36 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:36 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:37 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:37 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:37 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:37 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:40 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:40 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:40 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:40 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:33:42 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:33:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:33:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:33:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:33:42 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:42 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:33:42 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:34:12 - app.main - INFO - Request: GET /debug/list-categories
2025-05-20 17:34:12 - app.main - WARNING - Request failed: GET /debug/list-categories - Status: 404
2025-05-20 17:34:41 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:34:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:34:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:34:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:34:41 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:34:41 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-20 17:34:41 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-20 17:37:07 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 17:37:07 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 17:37:07 - app.main - INFO - Registering routers with prefix /api
2025-05-20 17:37:07 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 17:37:07 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 17:37:08 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 17:37:08 - app.main - INFO - All database indexes verified
2025-05-20 17:37:08 - app.main - INFO - Server started successfully!
2025-05-20 17:37:08 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 17:37:24 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:37:24 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:37:24 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:37:24 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:37:29 - app.main - INFO - Request: POST /debug/add-sample-categories
2025-05-20 17:37:29 - app.main - INFO - Adding sample asset categories
2025-05-20 17:37:46 - app.main - INFO - Request: GET /debug/list-categories
2025-05-20 17:37:46 - app.main - INFO - Debug: Listing all asset categories
2025-05-20 17:37:47 - app.main - INFO - Found 6 categories in the database
2025-05-20 17:38:01 - app.main - INFO - Request: GET /api/asset-categories
2025-05-20 17:38:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-20 17:38:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-20 17:38:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-20 17:38:24 - app.main - INFO - Request: GET /api/assignment-history/asset/asst001
2025-05-20 17:38:24 - app.routers.assignment_history - INFO - Fetching assignment history for asset asst001
2025-05-20 17:38:24 - app.services.assignment_history_service - INFO - Fetching assignment history for asset ID: asst001
2025-05-20 17:38:25 - app.services.assignment_history_service - WARNING - Asset not found: asst001
2025-05-20 17:38:25 - app.routers.assignment_history - WARNING - Invalid request: Asset with ID asst001 not found
2025-05-20 17:38:25 - app.main - WARNING - Request failed: GET /api/assignment-history/asset/asst001 - Status: 400
2025-05-20 17:39:18 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 17:39:18 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 17:39:18 - app.main - INFO - Registering routers with prefix /api
2025-05-20 17:39:18 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 17:39:18 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 17:39:18 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 17:39:19 - app.main - INFO - All database indexes verified
2025-05-20 17:39:19 - app.main - INFO - Server started successfully!
2025-05-20 17:39:19 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 17:39:19 - uvicorn.error - ERROR - [Errno 10048] error while attempting to bind on address ('0.0.0.0', 8000): [winerror 10048] only one usage of each socket address (protocol/network address/port) is normally permitted
2025-05-20 17:39:19 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 17:39:20 - app.main - INFO - Request: POST /debug/add-sample-asset
2025-05-20 17:39:20 - app.main - WARNING - Request failed: POST /debug/add-sample-asset - Status: 404
2025-05-20 17:39:59 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 17:39:59 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 17:39:59 - app.main - INFO - Registering routers with prefix /api
2025-05-20 17:40:00 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 17:40:00 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 17:40:00 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 17:40:00 - app.main - INFO - All database indexes verified
2025-05-20 17:40:00 - app.main - INFO - Server started successfully!
2025-05-20 17:40:00 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 17:40:00 - uvicorn.error - ERROR - [Errno 10048] error while attempting to bind on address ('0.0.0.0', 8000): [winerror 10048] only one usage of each socket address (protocol/network address/port) is normally permitted
2025-05-20 17:40:00 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 17:40:03 - app.main - INFO - Request: GET /api/asset-items
2025-05-20 17:40:03 - app.main - INFO - Request: GET /api/asset-items/
2025-05-20 17:40:03 - app.routers.asset_items - INFO - Fetching asset items - category_id: None, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-20 17:40:03 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-20 17:40:03 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-20 17:40:03 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-20 17:40:03 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-20 17:51:11 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 17:51:11 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 17:51:11 - app.main - INFO - Registering routers with prefix /api
2025-05-20 17:51:11 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 17:51:11 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 17:51:11 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 17:51:12 - app.main - INFO - All database indexes verified
2025-05-20 17:51:12 - app.main - INFO - Server started successfully!
2025-05-20 17:51:12 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 17:58:04 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 17:58:04 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 17:59:02 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 17:59:02 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 17:59:06 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 18:00:49 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 18:00:49 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 18:00:49 - app.main - INFO - Registering routers with prefix /api
2025-05-20 18:00:49 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 18:00:49 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 18:00:49 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 18:00:49 - app.main - INFO - All database indexes verified
2025-05-20 18:00:49 - app.main - INFO - Server started successfully!
2025-05-20 18:00:49 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 18:00:56 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 18:00:56 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 18:14:34 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 18:14:34 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:16:03 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:16:03 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:17:44 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:17:44 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:19:07 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:19:07 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:21:52 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:21:52 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:41:00 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:41:00 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:41:01 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:41:01 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:59:56 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:59:56 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:59:57 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:59:57 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 19:59:59 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 19:59:59 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:00:05 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:00:05 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:00:06 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:00:06 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:00:09 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:00:09 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:01:20 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 20:01:29 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 20:01:29 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 20:01:29 - app.main - INFO - Registering routers with prefix /api
2025-05-20 20:01:30 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 20:01:30 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 20:01:30 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 20:01:30 - app.main - INFO - All database indexes verified
2025-05-20 20:01:30 - app.main - INFO - Server started successfully!
2025-05-20 20:01:30 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 20:01:39 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:01:39 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:01:40 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:01:40 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:01:41 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:01:41 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:04:09 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:04:09 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:04:10 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:04:10 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:04:11 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:04:11 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:08:11 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:08:11 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:08:14 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:08:14 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:08:16 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:08:16 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:08:45 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 20:08:55 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 20:08:55 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 20:08:55 - app.main - INFO - Registering routers with prefix /api
2025-05-20 20:08:55 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 20:08:55 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 20:08:55 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 20:08:55 - app.main - INFO - All database indexes verified
2025-05-20 20:08:55 - app.main - INFO - Server started successfully!
2025-05-20 20:08:55 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 20:09:19 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:09:19 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:09:20 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:09:20 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:09:21 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:09:21 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:11:56 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:11:56 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:11:59 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:11:59 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:12:00 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:12:00 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:10 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:10 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:10 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:10 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:11 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:11 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:11 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:11 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:13 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:13 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:13 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:13 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:20 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:20 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:21 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:21 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:21 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:21 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:22 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:22 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:23 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:23 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:25 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:25 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:32 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:32 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:33 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:33 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:33 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:33 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:34 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:34 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:35 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:35 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:36 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:36 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:42 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:42 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:43 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:43 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:43 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:43 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:44 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:44 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:45 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:45 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:46 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:46 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:54 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:54 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:55 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:55 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:56 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:56 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:56 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:56 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:59 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:59 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:19:59 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:19:59 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:29:23 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-20 20:29:33 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-20 20:29:33 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-20 20:29:33 - app.main - INFO - Registering routers with prefix /api
2025-05-20 20:29:33 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-20 20:29:33 - app.main - INFO - MongoDB connection verified successfully
2025-05-20 20:29:33 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-20 20:29:33 - app.main - INFO - All database indexes verified
2025-05-20 20:29:33 - app.main - INFO - Server started successfully!
2025-05-20 20:29:33 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-20 20:29:41 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:29:41 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:29:42 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:29:42 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-20 20:29:43 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-20 20:29:43 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-21 11:03:03 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 11:03:12 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 11:03:12 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 11:03:12 - app.main - INFO - Registering routers with prefix /api
2025-05-21 11:03:12 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 11:03:12 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 11:03:12 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 11:03:13 - app.main - INFO - All database indexes verified
2025-05-21 11:03:13 - app.main - INFO - Server started successfully!
2025-05-21 11:03:13 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 11:03:38 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-21 11:03:38 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-21 11:03:39 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-21 11:03:39 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-21 11:03:40 - app.main - INFO - Request: GET /api/v1/asset-categories/
2025-05-21 11:03:40 - app.main - WARNING - Request failed: GET /api/v1/asset-categories/ - Status: 404
2025-05-21 11:09:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:09:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:09:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:09:28 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:09:28 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:09:28 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:09:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:09:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:09:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:09:30 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:09:30 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:09:30 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:09:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:09:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:09:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:09:32 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:09:32 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:09:32 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:09:49 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 11:09:58 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 11:09:58 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 11:09:58 - app.main - INFO - Registering routers with prefix /api
2025-05-21 11:09:58 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 11:09:58 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 11:09:58 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 11:09:59 - app.main - INFO - All database indexes verified
2025-05-21 11:09:59 - app.main - INFO - Server started successfully!
2025-05-21 11:09:59 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 11:10:10 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:10:10 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:10:10 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:10:10 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:10:10 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:10:10 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:10:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:10:11 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:10:11 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:10:11 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:10:11 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:10:11 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:10:12 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:10:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:10:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:10:12 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:10:12 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:10:12 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:11:55 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:11:55 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:11:55 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:11:55 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:11:55 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:11:55 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:11:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:11:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:11:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:11:58 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:11:58 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:11:58 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:12:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:12:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:12:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:12:01 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:12:01 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:12:01 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:12:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:12:02 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:12:02 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:12:02 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:12:02 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:12:02 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:12:04 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:12:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:12:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:12:04 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:12:04 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
    categories = get_asset_categories(db, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:12:04 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:14:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:14:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:14:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:14:01 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:14:01 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:14:01 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:14:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:14:02 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:14:02 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:14:02 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:14:02 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:14:02 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:14:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:14:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:14:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:14:05 - app.services.asset_category_service - ERROR - Error fetching categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:14:05 - app.routers.asset_categories - ERROR - Failed to fetch categories: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 48, in read_asset_categories
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
                      ~~~~~~~^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\collection.py", line 401, in __call__
    raise TypeError(
    ...<4 lines>...
    )
TypeError: 'Collection' object is not callable. If you meant to call the 'find' method on a 'Database' object it is failing because no such method exists.
2025-05-21 11:14:05 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 11:14:07 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 11:14:16 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 11:14:16 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 11:14:16 - app.main - INFO - Registering routers with prefix /api
2025-05-21 11:14:16 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 11:14:16 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 11:14:16 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 11:14:16 - app.main - INFO - All database indexes verified
2025-05-21 11:14:16 - app.main - INFO - Server started successfully!
2025-05-21 11:14:16 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 11:14:26 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:14:26 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:14:26 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:25:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:25:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:25:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:25:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:25:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:25:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:25:23 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:25:23 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:25:23 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:25:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:25:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:25:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:25:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:25:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:25:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:25:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:25:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:25:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:29:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:29:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:29:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:32:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:32:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:32:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:41:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:41:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:41:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:41:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:41:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:41:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:41:57 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:41:57 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:41:57 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:46:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:46:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:46:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:46:24 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 11:46:40 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 11:46:40 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 11:46:40 - app.main - INFO - Registering routers with prefix /api
2025-05-21 11:46:40 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 11:46:40 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 11:46:40 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 11:46:40 - app.main - INFO - All database indexes verified
2025-05-21 11:46:40 - app.main - INFO - Server started successfully!
2025-05-21 11:46:40 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 11:46:47 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:46:47 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:46:47 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:46:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:46:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:46:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:47:00 - app.main - INFO - Request: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:47:00 - app.routers.asset_categories - INFO - Updating asset category with ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:47:00 - app.services.asset_category_service - INFO - Updating category ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:47:00 - app.main - ERROR - Request failed: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a - Error: 1 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='9c8c1a9f-603f-480d-8d99-badd29588abb', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 11:47:02 - app.main - INFO - Request: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:47:02 - app.routers.asset_categories - INFO - Updating asset category with ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:47:02 - app.services.asset_category_service - INFO - Updating category ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:47:03 - app.main - ERROR - Request failed: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a - Error: 2 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='9c8c1a9f-603f-480d-8d99-badd29588abb', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='c5c0969c-b235-4bd3-a852-bf3c114a55f8', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 11:47:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:47:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:47:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:47:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:47:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:47:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:47:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:47:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:47:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:47:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:47:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:47:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:47:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:47:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:47:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:48:08 - app.main - INFO - Request: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:48:08 - app.routers.asset_categories - INFO - Updating asset category with ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:48:08 - app.services.asset_category_service - INFO - Updating category ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:48:08 - app.main - ERROR - Request failed: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a - Error: 3 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='9c8c1a9f-603f-480d-8d99-badd29588abb', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='c5c0969c-b235-4bd3-a852-bf3c114a55f8', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 2), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='dc28f5d9-aab4-400b-a50c-551b975ff3c6', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 11:48:14 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:48:14 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:48:14 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:48:36 - app.main - INFO - Request: DELETE /api/asset-categories/4ffde1a3-b8f6-41c3-8894-ee1385360845
2025-05-21 11:48:36 - app.routers.asset_categories - INFO - Deleting asset category with ID: 4ffde1a3-b8f6-41c3-8894-ee1385360845
2025-05-21 11:48:36 - app.services.asset_category_service - INFO - Deleting category ID: 4ffde1a3-b8f6-41c3-8894-ee1385360845
2025-05-21 11:48:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:48:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:48:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:48:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:48:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:48:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:51:53 - app.main - INFO - Request: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:51:53 - app.routers.asset_categories - INFO - Updating asset category with ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:51:53 - app.services.asset_category_service - INFO - Updating category ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 11:51:53 - app.main - ERROR - Request failed: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a - Error: 4 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='9c8c1a9f-603f-480d-8d99-badd29588abb', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='c5c0969c-b235-4bd3-a852-bf3c114a55f8', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 2), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='dc28f5d9-aab4-400b-a50c-551b975ff3c6', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 3), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='92375412-a9f9-4787-b416-202e605f57e5', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 11:52:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:52:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:52:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:52:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:52:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:52:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:55:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:55:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:55:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 11:55:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 11:55:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 11:55:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:02:22 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-21 12:02:22 - app.routers.asset_categories - INFO - Creating asset category: hello world
2025-05-21 12:02:22 - app.services.asset_category_service - INFO - Creating category: hello world
2025-05-21 12:02:23 - app.services.asset_category_service - INFO - Created category with ID: 99f1e373-9e13-4e61-9b58-090a311f1a4f
2025-05-21 12:02:23 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:02:23 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:02:23 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:02:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:02:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:02:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:02:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:02:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:02:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:03:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:03:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:03:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:06:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:06:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:06:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:12:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:12:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:12:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:12:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:12:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:12:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:13:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:13:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:13:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:13:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:13:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:13:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:16:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:16:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:16:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:16:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:16:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:16:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:17:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:17:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:17:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:17:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:17:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:17:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:21:34 - app.main - INFO - Request: PUT /api/asset-categories/99f1e373-9e13-4e61-9b58-090a311f1a4f
2025-05-21 12:21:34 - app.routers.asset_categories - INFO - Updating asset category with ID: 99f1e373-9e13-4e61-9b58-090a311f1a4f
2025-05-21 12:21:34 - app.services.asset_category_service - INFO - Updating category ID: 99f1e373-9e13-4e61-9b58-090a311f1a4f
2025-05-21 12:21:34 - app.main - ERROR - Request failed: PUT /api/asset-categories/99f1e373-9e13-4e61-9b58-090a311f1a4f - Error: 1 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='e1745554-8478-4f3d-9a8d-2deade1e542c', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 12:21:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:21:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:21:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:21:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:21:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:21:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:23:45 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:23:45 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:23:45 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:32:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:32:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:32:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:33:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:33:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:33:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:33:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:33:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:33:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:33:59 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:33:59 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:33:59 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:34:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:34:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:34:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:38:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:38:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:38:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:38:08 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 12:38:21 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 12:38:21 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 12:38:21 - app.main - INFO - Registering routers with prefix /api
2025-05-21 12:38:22 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 12:38:22 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 12:38:22 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 12:38:22 - app.main - INFO - All database indexes verified
2025-05-21 12:38:22 - app.main - INFO - Server started successfully!
2025-05-21 12:38:22 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 12:38:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:38:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:38:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:38:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:38:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:38:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:39:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:39:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:39:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:39:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:39:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:39:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:41:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:41:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:41:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:41:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:41:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:41:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:51:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:51:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:51:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:51:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:51:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:51:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:53:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:53:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:53:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:53:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:53:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:53:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:54:18 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:54:18 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:54:18 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:54:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:54:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:54:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:54:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:54:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:54:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:54:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:54:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:54:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:54:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:54:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:54:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:54:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:54:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:54:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:54:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:54:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:54:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:54:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:54:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:54:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:55:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:55:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:55:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:55:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:55:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:55:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:55:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:55:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:55:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:55:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:55:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:55:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:55:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:55:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:55:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:55:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:55:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:55:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:55:47 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:55:47 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:55:47 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:55:48 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 12:55:59 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 12:55:59 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 12:55:59 - app.main - INFO - Registering routers with prefix /api
2025-05-21 12:55:59 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 12:55:59 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 12:55:59 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 12:55:59 - app.main - INFO - All database indexes verified
2025-05-21 12:55:59 - app.main - INFO - Server started successfully!
2025-05-21 12:55:59 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 12:56:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:56:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:56:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 12:56:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 12:56:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 12:56:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:09:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:09:11 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:09:11 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:09:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:09:11 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:09:11 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:11:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:11:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:11:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:11:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:11:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:11:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:12:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:12:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:12:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:12:01 - app.main - INFO - Request: GET /api/asset-items/statistics
2025-05-21 13:12:01 - app.routers.asset_items - INFO - Fetching asset statistics
2025-05-21 13:12:01 - app.services.asset_item_service - INFO - Calculating comprehensive asset statistics
2025-05-21 13:13:38 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:13:38 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:13:38 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:13:39 - app.main - INFO - Request: GET /api/asset-items/statistics
2025-05-21 13:13:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:13:39 - app.routers.asset_items - INFO - Fetching asset statistics
2025-05-21 13:13:39 - app.services.asset_item_service - INFO - Calculating comprehensive asset statistics
2025-05-21 13:13:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:13:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:13:45 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:13:45 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:13:45 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:13:46 - app.main - INFO - Request: GET /api/asset-items/statistics
2025-05-21 13:13:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:13:46 - app.routers.asset_items - INFO - Fetching asset statistics
2025-05-21 13:13:46 - app.services.asset_item_service - INFO - Calculating comprehensive asset statistics
2025-05-21 13:13:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:13:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:13:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:13:52 - app.main - INFO - Request: GET /api/asset-items/statistics
2025-05-21 13:13:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:13:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:13:53 - app.routers.asset_items - INFO - Fetching asset statistics
2025-05-21 13:13:53 - app.services.asset_item_service - INFO - Calculating comprehensive asset statistics
2025-05-21 13:13:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:13:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:13:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:15:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:15:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:15:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:15:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:15:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:15:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:17:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:17:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:17:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:17:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:17:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:17:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:18:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:18:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:18:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:18:55 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:18:55 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:18:55 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:20:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:20:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:20:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:20:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:20:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:20:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:21:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:21:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:21:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:21:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:21:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:21:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:22:00 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:22:00 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:22:00 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:22:00 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:22:00 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:22:00 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:22:04 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:22:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:22:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:22:04 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:22:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:22:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:22:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:22:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:22:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:22:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:22:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:22:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:22:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:22:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:22:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:22:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:22:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:22:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:23:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:23:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:23:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:23:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:23:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:23:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:23:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:23:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:23:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:28:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:28:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:28:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:28:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:28:02 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:28:02 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:28:12 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 13:28:12 - app.routers.asset_items - INFO - Fetching asset items - category_id: 99f1e373-9e13-4e61-9b58-090a311f1a4f, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 13:28:12 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 13:28:14 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:28:14 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:28:14 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:28:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 13:28:16 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 13:28:16 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 13:28:16 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 13:28:16 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 13:28:16 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 13:28:17 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 13:28:17 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 13:28:17 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 13:28:17 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 13:28:17 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 13:28:17 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 13:28:19 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 13:28:19 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 13:28:19 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 13:28:19 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 13:28:19 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 13:28:19 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 13:28:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:28:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:28:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:29:54 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:29:54 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:29:54 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:29:54 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:29:54 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:29:54 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:32:38 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:32:38 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:32:38 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:32:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:32:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:32:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:33:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:33:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:33:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:33:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:33:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:33:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:33:48 - app.main - INFO - Request: POST /api/asset-items/
2025-05-21 13:33:48 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 422
2025-05-21 13:34:05 - app.main - INFO - Request: POST /api/asset-items/
2025-05-21 13:34:05 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 422
2025-05-21 13:39:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:39:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:39:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:39:45 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:39:45 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:39:45 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:40:04 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:40:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:40:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:40:04 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:40:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:40:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:40:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:40:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:40:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:40:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:40:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:40:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:40:25 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:40:25 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:40:25 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:40:26 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:40:26 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:40:26 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:40:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:40:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:40:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:40:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:40:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:40:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:41:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:41:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:41:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 13:41:57 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 13:41:57 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 13:41:57 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 14:22:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 14:22:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 14:22:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 14:23:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 14:23:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 14:23:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 14:23:27 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 14:23:27 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 14:23:27 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 14:23:27 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 14:23:27 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 14:23:27 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 14:23:28 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 14:23:28 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 14:23:28 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 14:23:28 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 14:23:28 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 14:23:28 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 14:23:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 14:23:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 14:23:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 14:23:30 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 14:23:30 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 14:23:30 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 14:23:30 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 14:23:30 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 14:23:30 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 14:24:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 14:24:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 14:24:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 14:33:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 14:33:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 14:33:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 14:39:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 14:39:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 14:39:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:09:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:09:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:09:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:09:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:09:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:09:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:24:48 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:24:48 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:24:48 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:24:48 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:24:48 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:24:48 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:24:49 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:24:49 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:24:49 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:24:49 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:24:49 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:24:49 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:24:51 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:24:51 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:24:51 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:24:51 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:24:51 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:24:51 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:24:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:24:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:24:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:25:05 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:25:05 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:25:05 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:25:05 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:25:05 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:25:05 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:25:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:25:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:25:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:25:06 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:25:06 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:25:06 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:25:08 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:25:08 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:25:08 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:25:08 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:25:08 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:25:08 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:26:35 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:26:35 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:26:35 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:26:35 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:26:35 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:26:35 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:26:37 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:26:37 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:26:37 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:26:37 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:26:37 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:26:37 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:26:40 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:26:40 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:26:40 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:26:40 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:26:40 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:26:40 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:27:48 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:27:48 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:27:48 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:27:48 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:27:48 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:27:48 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:27:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:27:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:27:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:27:50 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:27:50 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:27:50 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:27:50 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:27:50 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:27:50 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:27:53 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:27:53 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:27:53 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:27:53 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:27:53 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:27:53 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:28:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:28:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:28:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:28:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:28:16 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:16 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:16 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:28:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:28:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:28:45 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:45 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:45 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:28:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:28:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:28:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:29:34 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:29:34 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:29:34 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:29:35 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:29:35 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:29:35 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:29:37 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:29:37 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:29:37 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:29:37 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:29:37 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:29:37 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:29:38 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:29:38 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:29:38 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:29:38 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:29:38 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:29:38 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:29:40 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:29:40 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:29:40 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:29:40 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:29:40 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:29:40 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:30:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:30:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:30:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:30:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:30:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:30:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:30:33 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:30:33 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:30:33 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:30:33 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:30:33 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:30:33 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:30:59 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:30:59 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:30:59 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:30:59 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:30:59 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:30:59 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:31:01 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:31:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:31:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:31:01 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:01 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:01 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:31:04 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:31:04 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:31:04 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:31:04 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:04 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:04 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:31:26 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:31:26 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:31:26 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:31:27 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:27 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:27 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:31:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:31:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:31:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:31:28 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:31:28 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:31:28 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:31:28 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:28 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:28 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:31:31 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:31:31 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:31:31 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:31:31 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:31 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:31 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:31:52 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:31:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:31:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:31:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:31:53 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:31:53 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:31:53 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:53 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:53 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:31:55 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:31:55 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:31:55 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:31:55 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:55 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:55 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:31:58 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:31:58 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:31:58 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:31:58 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:58 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:31:58 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:33:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:33:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:33:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:33:47 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:33:47 - app.routers.asset_items - INFO - Fetching asset items - category_id: 99f1e373-9e13-4e61-9b58-090a311f1a4f, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:33:47 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:33:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:33:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:33:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:33:54 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:33:54 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:33:54 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:33:54 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:33:54 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:33:54 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:33:55 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:33:55 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:33:55 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:33:55 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:33:55 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:33:55 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:33:57 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:33:57 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:33:57 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:33:57 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:33:57 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:33:57 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:39:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:39:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:39:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:39:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:39:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:39:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:40:55 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:40:55 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:40:55 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:40:55 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:40:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:40:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:41:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:41:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:41:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:41:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:41:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:41:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:43:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:43:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:43:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:43:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:43:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:43:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:44:25 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:44:25 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:44:25 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:44:26 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:44:26 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:44:26 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:44:33 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:44:33 - app.routers.asset_items - INFO - Fetching asset items - category_id: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:44:33 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:44:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:44:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:44:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:44:39 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:44:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: 99f1e373-9e13-4e61-9b58-090a311f1a4f, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:44:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:44:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:44:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:44:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:44:44 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:44:44 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:44:44 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:44:44 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:44:44 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:44:44 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:44:45 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:44:45 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:44:45 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:44:45 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:44:45 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:44:45 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:44:47 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:44:47 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:44:47 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:44:47 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:44:47 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:44:47 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:44:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:44:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:44:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:45:08 - app.main - INFO - Request: PUT /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:45:08 - app.routers.asset_categories - INFO - Updating asset category with ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:45:09 - app.services.asset_category_service - INFO - Updating category ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:45:09 - app.main - ERROR - Request failed: PUT /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e - Error: 2 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='q4r5s6t7-u8v9-4w0x-1y2z-3a4b5c6d7e8f', type='edit', edit_date='2025-05-21', change_type='Category Creation', details='Created new category: Conference Equipment', notes='Added via API on 2025-05-21 at 02:29 PM IST')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='f93ef154-02ff-4168-9240-602d7046a8e5', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 15:45:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:45:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:45:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:45:50 - app.main - INFO - Request: PUT /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:45:50 - app.routers.asset_categories - INFO - Updating asset category with ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:45:50 - app.services.asset_category_service - INFO - Updating category ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:45:51 - app.main - ERROR - Request failed: PUT /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e - Error: 3 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='q4r5s6t7-u8v9-4w0x-1y2z-3a4b5c6d7e8f', type='edit', edit_date='2025-05-21', change_type='Category Creation', details='Created new category: Conference Equipment', notes='Added via API on 2025-05-21 at 02:29 PM IST')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='f93ef154-02ff-4168-9240-602d7046a8e5', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 2), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='38267290-ff16-4688-8db4-1e3ac703f2df', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 15:46:12 - app.main - INFO - Request: PUT /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:46:12 - app.routers.asset_categories - INFO - Updating asset category with ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:46:12 - app.services.asset_category_service - INFO - Updating category ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 15:46:13 - app.main - ERROR - Request failed: PUT /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e - Error: 4 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='q4r5s6t7-u8v9-4w0x-1y2z-3a4b5c6d7e8f', type='edit', edit_date='2025-05-21', change_type='Category Creation', details='Created new category: Conference Equipment', notes='Added via API on 2025-05-21 at 02:29 PM IST')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='f93ef154-02ff-4168-9240-602d7046a8e5', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 2), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='38267290-ff16-4688-8db4-1e3ac703f2df', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 3), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='e8ff4632-7e9b-4f2c-b4c1-353e545e0ca8', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 15:46:16 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:46:16 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:46:16 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:58:03 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:58:03 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:58:03 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:58:03 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:58:03 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:58:03 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:58:04 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:58:04 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:58:04 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:58:04 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:58:04 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:58:04 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:58:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:58:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:58:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:58:06 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:58:06 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 15:58:06 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 15:58:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:58:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:58:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:58:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:58:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:58:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:58:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:58:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:58:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:58:35 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:58:35 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:58:35 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:58:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:58:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:58:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:58:48 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:58:48 - app.routers.asset_items - INFO - Fetching asset items - category_id: b26222e4-7867-4c78-a3e3-17abd46d6897, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:58:48 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:58:55 - app.main - INFO - Request: GET /api/asset-items/4d38e2ff-9d4d-482b-9d8c-429022d0f1ac
2025-05-21 15:58:55 - app.routers.asset_items - INFO - Fetching asset item with ID: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac
2025-05-21 15:58:55 - app.services.asset_item_service - INFO - Fetching asset item ID: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac
2025-05-21 15:58:55 - app.main - INFO - Request: GET /api/documents/
2025-05-21 15:58:55 - app.routers.documents - INFO - GET /documents/ - asset_id: 4d38e2ff-9d4d-482b-9d8c-429022d0f1ac, employee_id: None, document_type: None
2025-05-21 15:58:55 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '4d38e2ff-9d4d-482b-9d8c-429022d0f1ac'}
2025-05-21 15:59:03 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:59:03 - app.routers.asset_items - INFO - Fetching asset items - category_id: b26222e4-7867-4c78-a3e3-17abd46d6897, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:59:03 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:59:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 15:59:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 15:59:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 15:59:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 15:59:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 15:59:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 15:59:13 - app.main - INFO - Request: GET /api/asset-items/temp-1747823346798-chthwipu2
2025-05-21 15:59:13 - app.main - INFO - Request: GET /api/documents/
2025-05-21 15:59:13 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747823346798-chthwipu2
2025-05-21 15:59:13 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747823346798-chthwipu2
2025-05-21 15:59:13 - app.services.asset_item_service - WARNING - Asset not found: temp-1747823346798-chthwipu2
2025-05-21 15:59:13 - app.routers.asset_items - WARNING - Asset item not found: temp-1747823346798-chthwipu2
2025-05-21 15:59:13 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747823346798-chthwipu2: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 15:59:13 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747823346798-chthwipu2 - Status: 500
2025-05-21 15:59:13 - app.routers.documents - INFO - GET /documents/ - asset_id: temp-1747823346798-chthwipu2, employee_id: None, document_type: None
2025-05-21 15:59:13 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'temp-1747823346798-chthwipu2'}
2025-05-21 15:59:14 - app.main - INFO - Request: GET /api/asset-items/temp-1747823346798-chthwipu2
2025-05-21 15:59:14 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747823346798-chthwipu2
2025-05-21 15:59:14 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747823346798-chthwipu2
2025-05-21 15:59:14 - app.services.asset_item_service - WARNING - Asset not found: temp-1747823346798-chthwipu2
2025-05-21 15:59:14 - app.routers.asset_items - WARNING - Asset item not found: temp-1747823346798-chthwipu2
2025-05-21 15:59:14 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747823346798-chthwipu2: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 15:59:14 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747823346798-chthwipu2 - Status: 500
2025-05-21 15:59:16 - app.main - INFO - Request: GET /api/asset-items/temp-1747823346798-chthwipu2
2025-05-21 15:59:16 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747823346798-chthwipu2
2025-05-21 15:59:16 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747823346798-chthwipu2
2025-05-21 15:59:16 - app.services.asset_item_service - WARNING - Asset not found: temp-1747823346798-chthwipu2
2025-05-21 15:59:16 - app.routers.asset_items - WARNING - Asset item not found: temp-1747823346798-chthwipu2
2025-05-21 15:59:16 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747823346798-chthwipu2: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 15:59:16 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747823346798-chthwipu2 - Status: 500
2025-05-21 16:01:52 - app.main - INFO - Request: GET /api/assignment-history/
2025-05-21 16:01:52 - app.main - WARNING - Request failed: GET /api/assignment-history/ - Status: 404
2025-05-21 16:01:53 - app.main - INFO - Request: GET /api/assignment-history/
2025-05-21 16:01:53 - app.main - WARNING - Request failed: GET /api/assignment-history/ - Status: 404
2025-05-21 16:01:55 - app.main - INFO - Request: GET /api/assignment-history/
2025-05-21 16:01:55 - app.main - WARNING - Request failed: GET /api/assignment-history/ - Status: 404
2025-05-21 16:01:55 - app.main - INFO - Request: GET /api/maintenance-history/
2025-05-21 16:01:55 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-21 16:01:55 - app.main - WARNING - Request failed: GET /api/maintenance-history - Status: 405
2025-05-21 16:09:20 - app.main - INFO - Request: GET /api/asset-items/temp-1747823346798-chthwipu2
2025-05-21 16:09:20 - app.main - INFO - Request: GET /api/documents/
2025-05-21 16:09:20 - app.routers.documents - INFO - GET /documents/ - asset_id: temp-1747823346798-chthwipu2, employee_id: None, document_type: None
2025-05-21 16:09:20 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'temp-1747823346798-chthwipu2'}
2025-05-21 16:09:20 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747823346798-chthwipu2
2025-05-21 16:09:20 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747823346798-chthwipu2
2025-05-21 16:09:20 - app.services.asset_item_service - WARNING - Asset not found: temp-1747823346798-chthwipu2
2025-05-21 16:09:20 - app.routers.asset_items - WARNING - Asset item not found: temp-1747823346798-chthwipu2
2025-05-21 16:09:20 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747823346798-chthwipu2: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:09:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:09:20 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747823346798-chthwipu2 - Status: 500
2025-05-21 16:09:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:09:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:09:21 - app.main - INFO - Request: GET /api/asset-items/temp-1747823346798-chthwipu2
2025-05-21 16:09:21 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747823346798-chthwipu2
2025-05-21 16:09:21 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747823346798-chthwipu2
2025-05-21 16:09:21 - app.services.asset_item_service - WARNING - Asset not found: temp-1747823346798-chthwipu2
2025-05-21 16:09:21 - app.routers.asset_items - WARNING - Asset item not found: temp-1747823346798-chthwipu2
2025-05-21 16:09:21 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747823346798-chthwipu2: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:09:21 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747823346798-chthwipu2 - Status: 500
2025-05-21 16:09:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:09:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:09:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:09:23 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:09:23 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:09:23 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:09:24 - app.main - INFO - Request: GET /api/asset-items/temp-1747823346798-chthwipu2
2025-05-21 16:09:24 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747823346798-chthwipu2
2025-05-21 16:09:24 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747823346798-chthwipu2
2025-05-21 16:09:24 - app.services.asset_item_service - WARNING - Asset not found: temp-1747823346798-chthwipu2
2025-05-21 16:09:24 - app.routers.asset_items - WARNING - Asset item not found: temp-1747823346798-chthwipu2
2025-05-21 16:09:24 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747823346798-chthwipu2: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:09:24 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747823346798-chthwipu2 - Status: 500
2025-05-21 16:09:28 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:09:28 - app.routers.asset_items - INFO - Fetching asset items - category_id: b26222e4-7867-4c78-a3e3-17abd46d6897, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:09:28 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:09:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:09:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:09:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:09:33 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:09:33 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:09:33 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:09:50 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:09:50 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:09:50 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:09:50 - app.main - INFO - Request: GET /api/documents/
2025-05-21 16:09:50 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-21 16:09:50 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-21 16:10:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:10:11 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:10:11 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:13:25 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:13:25 - app.main - INFO - Request: GET /api/documents/
2025-05-21 16:13:25 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:13:25 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:13:25 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-21 16:13:25 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-21 16:13:30 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:13:30 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:13:30 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:13:37 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:13:37 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:13:37 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-21 16:13:37 - app.main - INFO - Request: GET /api/documents/
2025-05-21 16:13:37 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-21 16:13:37 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-21 16:13:44 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:13:44 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:13:44 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:13:45 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:13:45 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:13:45 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:13:58 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:13:58 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:13:58 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:13:58 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:13:58 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:13:58 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:13:59 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:13:59 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:13:59 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:13:59 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:13:59 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:13:59 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:01 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:01 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:01 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:01 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:03 - app.main - INFO - Request: GET /api/asset-items/temp-1747824241974-imowoydvd
2025-05-21 16:14:03 - app.main - INFO - Request: GET /api/documents/
2025-05-21 16:14:03 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824241974-imowoydvd
2025-05-21 16:14:03 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824241974-imowoydvd
2025-05-21 16:14:03 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824241974-imowoydvd
2025-05-21 16:14:03 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824241974-imowoydvd
2025-05-21 16:14:03 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824241974-imowoydvd: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:03 - app.routers.documents - INFO - GET /documents/ - asset_id: temp-1747824241974-imowoydvd, employee_id: None, document_type: None
2025-05-21 16:14:03 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'temp-1747824241974-imowoydvd'}
2025-05-21 16:14:03 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824241974-imowoydvd - Status: 500
2025-05-21 16:14:04 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:04 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:04 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:04 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:04 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:04 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:04 - app.main - INFO - Request: GET /api/asset-items/temp-1747824241974-imowoydvd
2025-05-21 16:14:04 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824241974-imowoydvd
2025-05-21 16:14:04 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824241974-imowoydvd
2025-05-21 16:14:04 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824241974-imowoydvd
2025-05-21 16:14:04 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824241974-imowoydvd
2025-05-21 16:14:04 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824241974-imowoydvd: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:04 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824241974-imowoydvd - Status: 500
2025-05-21 16:14:05 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:05 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:05 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:05 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:05 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:05 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:06 - app.main - INFO - Request: GET /api/asset-items/temp-1747824244341-3iba2co1v
2025-05-21 16:14:06 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824244341-3iba2co1v
2025-05-21 16:14:06 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824244341-3iba2co1v
2025-05-21 16:14:06 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824244341-3iba2co1v
2025-05-21 16:14:06 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824244341-3iba2co1v
2025-05-21 16:14:06 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824244341-3iba2co1v: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:06 - app.main - INFO - Request: GET /api/documents/
2025-05-21 16:14:06 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824244341-3iba2co1v - Status: 500
2025-05-21 16:14:06 - app.routers.documents - INFO - GET /documents/ - asset_id: temp-1747824244341-3iba2co1v, employee_id: None, document_type: None
2025-05-21 16:14:06 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'temp-1747824244341-3iba2co1v'}
2025-05-21 16:14:06 - app.main - INFO - Request: GET /api/asset-items/temp-1747824241974-imowoydvd
2025-05-21 16:14:07 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824241974-imowoydvd
2025-05-21 16:14:07 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824241974-imowoydvd
2025-05-21 16:14:07 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824241974-imowoydvd
2025-05-21 16:14:08 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824241974-imowoydvd
2025-05-21 16:14:08 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824241974-imowoydvd: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:08 - app.main - INFO - Request: GET /api/asset-items/temp-1747824244341-3iba2co1v
2025-05-21 16:14:08 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824241974-imowoydvd - Status: 500
2025-05-21 16:14:08 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:14:08 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824244341-3iba2co1v
2025-05-21 16:14:08 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824244341-3iba2co1v
2025-05-21 16:14:08 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824244341-3iba2co1v
2025-05-21 16:14:08 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824244341-3iba2co1v
2025-05-21 16:14:08 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824244341-3iba2co1v: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:08 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:08 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:08 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:08 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:08 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824244341-3iba2co1v - Status: 500
2025-05-21 16:14:08 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:14:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:14:10 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:10 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:10 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:10 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:10 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:10 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:10 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:10 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:10 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:10 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:10 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:10 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:10 - app.main - INFO - Request: GET /api/asset-items/temp-1747824244341-3iba2co1v
2025-05-21 16:14:10 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824244341-3iba2co1v
2025-05-21 16:14:10 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824244341-3iba2co1v
2025-05-21 16:14:10 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824244341-3iba2co1v
2025-05-21 16:14:10 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824244341-3iba2co1v
2025-05-21 16:14:10 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824244341-3iba2co1v: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:10 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824244341-3iba2co1v - Status: 500
2025-05-21 16:14:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:11 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:11 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:11 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:11 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:11 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:11 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:11 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:11 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:11 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:11 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:11 - app.main - INFO - Request: GET /api/asset-items/temp-1747824250727-2njwmui19
2025-05-21 16:14:11 - app.main - INFO - Request: GET /api/documents/
2025-05-21 16:14:11 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824250727-2njwmui19
2025-05-21 16:14:11 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824250727-2njwmui19
2025-05-21 16:14:11 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824250727-2njwmui19
2025-05-21 16:14:11 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824250727-2njwmui19
2025-05-21 16:14:11 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824250727-2njwmui19: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:11 - app.routers.documents - INFO - GET /documents/ - asset_id: temp-1747824250727-2njwmui19, employee_id: None, document_type: None
2025-05-21 16:14:11 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'temp-1747824250727-2njwmui19'}
2025-05-21 16:14:11 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824250727-2njwmui19 - Status: 500
2025-05-21 16:14:12 - app.main - INFO - Request: GET /api/asset-items/temp-1747824250727-2njwmui19
2025-05-21 16:14:12 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824250727-2njwmui19
2025-05-21 16:14:12 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824250727-2njwmui19
2025-05-21 16:14:12 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824250727-2njwmui19
2025-05-21 16:14:12 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824250727-2njwmui19
2025-05-21 16:14:12 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824250727-2njwmui19: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:12 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824250727-2njwmui19 - Status: 500
2025-05-21 16:14:13 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:13 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:13 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:13 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:13 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:13 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:13 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:13 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:13 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:13 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:13 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:13 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:14 - app.main - INFO - Request: GET /api/asset-items/temp-1747824250727-2njwmui19
2025-05-21 16:14:14 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747824250727-2njwmui19
2025-05-21 16:14:14 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747824250727-2njwmui19
2025-05-21 16:14:14 - app.services.asset_item_service - WARNING - Asset not found: temp-1747824250727-2njwmui19
2025-05-21 16:14:14 - app.routers.asset_items - WARNING - Asset item not found: temp-1747824250727-2njwmui19
2025-05-21 16:14:14 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747824250727-2njwmui19: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 16:14:14 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747824250727-2njwmui19 - Status: 500
2025-05-21 16:14:27 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:27 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:27 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:27 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:27 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:27 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:28 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:28 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:28 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:28 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:28 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:28 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:14:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:14:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:14:30 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:30 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:30 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:30 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:30 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:30 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:36 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:36 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:36 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:36 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:36 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:36 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:37 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:37 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:37 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:37 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:37 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:37 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:39 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:14:39 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:39 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:14:39 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:14:55 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:14:55 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:14:55 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:14:58 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:14:58 - app.routers.asset_items - INFO - Fetching asset items - category_id: 99f1e373-9e13-4e61-9b58-090a311f1a4f, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:14:58 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:15:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:15:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:15:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:15:02 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:15:02 - app.routers.asset_items - INFO - Fetching asset items - category_id: 99f1e373-9e13-4e61-9b58-090a311f1a4f, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:15:02 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:15:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:15:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:15:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:15:24 - app.main - INFO - Request: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 16:15:24 - app.routers.asset_categories - INFO - Updating asset category with ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 16:15:24 - app.services.asset_category_service - INFO - Updating category ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-21 16:15:25 - app.main - ERROR - Request failed: PUT /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a - Error: 5 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='9c8c1a9f-603f-480d-8d99-badd29588abb', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='c5c0969c-b235-4bd3-a852-bf3c114a55f8', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 2), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='dc28f5d9-aab4-400b-a50c-551b975ff3c6', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 3), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='92375412-a9f9-4787-b416-202e605f57e5', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 4), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='ecb9f321-a6c8-4f35-bcf2-c0a69e7fd994', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 16:15:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:15:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:15:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:15:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:15:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:15:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:16:17 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:16:17 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:16:17 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:16:17 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:16:17 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:16:17 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:16:18 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:16:18 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:16:18 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:16:18 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:16:18 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:16:18 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:16:20 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:16:20 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:16:20 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:16:20 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:16:20 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 16:16:20 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 16:16:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:16:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:16:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:16:41 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:16:41 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:16:41 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:18:44 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:18:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:18:44 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:18:44 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:18:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:18:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:18:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:18:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:18:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:19:00 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:19:00 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:19:00 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:19:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:19:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:19:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:19:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:19:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:19:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:22:25 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:22:25 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:22:25 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:16 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:16 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:16 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:18 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:19 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:19 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:20 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:20 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:20 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:21 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:21 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:21 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:22 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:22 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:22 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:23 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:23 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:23 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:23 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:23 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:23 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:24 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:24 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:24 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:24 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:24 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:24 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:25 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:25 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:25 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:25 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:25 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:25 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:26 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:26 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:26 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:26 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:26 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:26 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:27 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:27 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:27 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:28 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:28 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:28 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:30 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:30 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:30 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:31 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:31 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:31 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:32 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:33 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:33 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:34 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:34 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:34 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:34 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:34 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:34 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:35 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:35 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:35 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:35 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:40:35 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:40:35 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:40:36 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:36 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:40:36 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:40:42 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 16:41:03 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 16:41:03 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 16:41:03 - app.main - INFO - Registering routers with prefix /api
2025-05-21 16:41:04 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 16:41:04 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 16:41:04 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 16:41:04 - app.main - INFO - All database indexes verified
2025-05-21 16:41:04 - app.main - INFO - Server started successfully!
2025-05-21 16:41:04 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 16:41:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:41:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:41:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:41:14 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:14 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:14 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:41:14 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:41:14 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:41:14 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:41:15 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:15 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:15 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:41:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:41:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:41:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:41:16 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:16 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:16 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:41:16 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:41:16 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:41:16 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:41:18 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:18 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:18 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:41:18 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:41:18 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:41:18 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:41:19 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:19 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:19 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:41:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:41:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:41:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:41:20 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:20 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:41:20 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:42:17 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 16:42:29 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 16:42:29 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 16:42:29 - app.main - INFO - Registering routers with prefix /api
2025-05-21 16:42:30 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 16:42:30 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 16:42:30 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 16:42:30 - app.main - INFO - All database indexes verified
2025-05-21 16:42:30 - app.main - INFO - Server started successfully!
2025-05-21 16:42:30 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 16:42:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:42:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:42:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:42:43 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:42:43 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:42:43 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:42:45 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:42:45 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:42:45 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:42:46 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:42:46 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:42:46 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:42:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:42:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:42:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:42:49 - app.services.asset_category_service - ERROR - Error fetching categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:42:49 - app.routers.asset_categories - ERROR - Failed to fetch categories: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 80, in get_asset_categories
    result.append(AssetCategoryResponse(**cat_dict))
                  ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 2 validation errors for AssetCategoryResponse
unassignable_assets
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
is_allotted
  Field required [type=missing, input_value={'id': '3m5n7p9q-1r3s-4t6... 'utilizationRate': 0.0}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
2025-05-21 16:42:49 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-21 16:45:47 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:45:47 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:45:47 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:45:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:45:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:45:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 16:57:54 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 16:57:54 - app.routers.asset_items - INFO - Fetching asset items - category_id: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 16:57:54 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 16:59:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 16:59:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 16:59:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:00:09 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 17:00:09 - app.routers.asset_items - INFO - Fetching asset items - category_id: b26222e4-7867-4c78-a3e3-17abd46d6897, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 17:00:09 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 17:00:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:00:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:00:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:02:48 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:48 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:48 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:48 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:02:48 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:02:48 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:02:48 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:02:49 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:49 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:49 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:50 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:02:50 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:02:50 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:02:50 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:02:51 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:51 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:51 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:02:51 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:02:51 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:02:51 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:02:51 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:02:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:02:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:02:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:02:57 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:02:57 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:02:57 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:03:01 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:01 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:01 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:01 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:01 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:01 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:01 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:02 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:02 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:02 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:02 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:02 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:02 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:02 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:03 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:03 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:03 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:03 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:03 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:03 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:03 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:03 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:03 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:03 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:03 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:03 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:03 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:05 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:05 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:05 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:05 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:05 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:05 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:05 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:05 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:05 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:05 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:05 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:05 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:03:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:03:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:03:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:03:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:03:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:03:16 - app.main - INFO - Request: DELETE /api/asset-categories/99f1e373-9e13-4e61-9b58-090a311f1a4f
2025-05-21 17:03:16 - app.routers.asset_categories - INFO - Deleting asset category with ID: 99f1e373-9e13-4e61-9b58-090a311f1a4f
2025-05-21 17:03:16 - app.services.asset_category_service - INFO - Deleting category ID: 99f1e373-9e13-4e61-9b58-090a311f1a4f
2025-05-21 17:03:21 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:21 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:21 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:21 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:21 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:21 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:21 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:21 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:21 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:21 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:21 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:21 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:21 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:03:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:03:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:03:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:03:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:03:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:03:33 - app.main - INFO - Request: DELETE /api/asset-categories/8211a835-bed3-4aab-89b6-a020b07d41cc
2025-05-21 17:03:33 - app.routers.asset_categories - INFO - Deleting asset category with ID: 8211a835-bed3-4aab-89b6-a020b07d41cc
2025-05-21 17:03:33 - app.services.asset_category_service - INFO - Deleting category ID: 8211a835-bed3-4aab-89b6-a020b07d41cc
2025-05-21 17:03:37 - app.main - INFO - Request: DELETE /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:37 - app.routers.asset_categories - INFO - Deleting asset category with ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:37 - app.services.asset_category_service - INFO - Deleting category ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:37 - app.services.asset_category_service - WARNING - Cannot delete category p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e: 1 assets associated
2025-05-21 17:03:37 - app.services.asset_category_service - ERROR - Error deleting category p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:37 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:37 - app.main - WARNING - Request failed: DELETE /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e - Status: 400
2025-05-21 17:03:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:03:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:03:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:03:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:03:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:03:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:03:47 - app.main - INFO - Request: DELETE /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:47 - app.routers.asset_categories - INFO - Deleting asset category with ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:47 - app.services.asset_category_service - INFO - Deleting category ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:47 - app.services.asset_category_service - WARNING - Cannot delete category p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e: 1 assets associated
2025-05-21 17:03:47 - app.services.asset_category_service - ERROR - Error deleting category p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:47 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:47 - app.main - WARNING - Request failed: DELETE /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e - Status: 400
2025-05-21 17:03:48 - app.main - INFO - Request: DELETE /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:48 - app.routers.asset_categories - INFO - Deleting asset category with ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:48 - app.services.asset_category_service - INFO - Deleting category ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:48 - app.services.asset_category_service - WARNING - Cannot delete category p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e: 1 assets associated
2025-05-21 17:03:48 - app.services.asset_category_service - ERROR - Error deleting category p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:48 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:48 - app.main - WARNING - Request failed: DELETE /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e - Status: 400
2025-05-21 17:03:48 - app.main - INFO - Request: DELETE /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:48 - app.routers.asset_categories - INFO - Deleting asset category with ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:48 - app.services.asset_category_service - INFO - Deleting category ID: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e
2025-05-21 17:03:48 - app.services.asset_category_service - WARNING - Cannot delete category p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e: 1 assets associated
2025-05-21 17:03:48 - app.services.asset_category_service - ERROR - Error deleting category p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:48 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:48 - app.main - WARNING - Request failed: DELETE /api/asset-categories/p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e - Status: 400
2025-05-21 17:03:53 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:53 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:53 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:53 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:53 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:53 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:53 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:03:54 - app.main - INFO - Request: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:54 - app.routers.asset_categories - INFO - Deleting asset category with ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:54 - app.services.asset_category_service - INFO - Deleting category ID: b26222e4-7867-4c78-a3e3-17abd46d6897
2025-05-21 17:03:54 - app.services.asset_category_service - WARNING - Cannot delete category b26222e4-7867-4c78-a3e3-17abd46d6897: 1 assets associated
2025-05-21 17:03:54 - app.services.asset_category_service - ERROR - Error deleting category b26222e4-7867-4c78-a3e3-17abd46d6897: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-21 17:03:54 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-21 17:03:54 - app.main - WARNING - Request failed: DELETE /api/asset-categories/b26222e4-7867-4c78-a3e3-17abd46d6897 - Status: 400
2025-05-21 17:07:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:07:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:07:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:07:10 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 17:07:20 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 17:07:20 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 17:07:20 - app.main - INFO - Registering routers with prefix /api
2025-05-21 17:07:20 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 17:07:20 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 17:07:20 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 17:07:20 - app.main - INFO - All database indexes verified
2025-05-21 17:07:20 - app.main - INFO - Server started successfully!
2025-05-21 17:07:20 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 17:07:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:07:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:07:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:07:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:07:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:07:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:09:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:09:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:09:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:26:35 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:26:35 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:26:35 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:26:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:26:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:26:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:26:38 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:26:38 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:26:38 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:27:24 - app.main - INFO - Request: PUT /api/asset-categories/t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i
2025-05-21 17:27:24 - app.routers.asset_categories - INFO - Updating asset category with ID: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i
2025-05-21 17:27:24 - app.services.asset_category_service - INFO - Updating category ID: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i
2025-05-21 17:27:25 - app.main - ERROR - Request failed: PUT /api/asset-categories/t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i - Error: 2 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='u2v3w4x5-y6z7-4a8b-9c0d-1e2f3g4h5i6j', type='edit', edit_date='2025-05-21', change_type='Category Creation', details='Created new category: Tables', notes='Added via API on 2025-05-21 at 05:11 PM IST')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='b3db0ece-1868-4670-8766-374ff9b1453b', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 17:27:32 - app.main - INFO - Request: PUT /api/asset-categories/c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r
2025-05-21 17:27:32 - app.routers.asset_categories - INFO - Updating asset category with ID: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r
2025-05-21 17:27:32 - app.services.asset_category_service - INFO - Updating category ID: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r
2025-05-21 17:27:32 - app.main - ERROR - Request failed: PUT /api/asset-categories/c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r - Error: 2 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='d2e3f4g5-h6i7-4j8k-9l0m-1n2o3p4q5r6s', type='edit', edit_date='2025-05-21', change_type='Category Creation', details='Created new category: Chairs', notes='Added via API on 2025-05-21 at 05:11 PM IST')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='dda86534-41e3-4c3b-9387-69ee0ab6bf27', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 17:27:47 - app.main - INFO - Request: PUT /api/asset-categories/a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p
2025-05-21 17:27:47 - app.routers.asset_categories - INFO - Updating asset category with ID: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p
2025-05-21 17:27:47 - app.services.asset_category_service - INFO - Updating category ID: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p
2025-05-21 17:27:48 - app.main - ERROR - Request failed: PUT /api/asset-categories/a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p - Error: 2 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='b2c3d4e5-f6g7-4h8i-9j0k-1l2m3n4o5p6q', type='edit', edit_date='2025-05-21', change_type='Category Creation', details='Created new category: Air Conditioner', notes='Added via API on 2025-05-21 at 05:15 PM IST')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='a2ab1728-602c-4b75-bfb8-19b97a0fcc27', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-21 17:27:51 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:27:51 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:27:51 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:27:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:27:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:27:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:29:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:29:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:29:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:29:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:29:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:29:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:29:48 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 17:29:48 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 17:29:48 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 17:29:53 - app.main - INFO - Request: GET /api/asset-items/temp-1747828788321-apoa6860e
2025-05-21 17:29:53 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747828788321-apoa6860e
2025-05-21 17:29:53 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747828788321-apoa6860e
2025-05-21 17:29:53 - app.services.asset_item_service - WARNING - Asset not found: temp-1747828788321-apoa6860e
2025-05-21 17:29:53 - app.routers.asset_items - WARNING - Asset item not found: temp-1747828788321-apoa6860e
2025-05-21 17:29:53 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747828788321-apoa6860e: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 17:29:53 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747828788321-apoa6860e - Status: 500
2025-05-21 17:29:53 - app.main - INFO - Request: GET /api/documents/
2025-05-21 17:29:53 - app.routers.documents - INFO - GET /documents/ - asset_id: temp-1747828788321-apoa6860e, employee_id: None, document_type: None
2025-05-21 17:29:53 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'temp-1747828788321-apoa6860e'}
2025-05-21 17:29:54 - app.main - INFO - Request: GET /api/asset-items/temp-1747828788321-apoa6860e
2025-05-21 17:29:54 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747828788321-apoa6860e
2025-05-21 17:29:54 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747828788321-apoa6860e
2025-05-21 17:29:54 - app.services.asset_item_service - WARNING - Asset not found: temp-1747828788321-apoa6860e
2025-05-21 17:29:54 - app.routers.asset_items - WARNING - Asset item not found: temp-1747828788321-apoa6860e
2025-05-21 17:29:54 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747828788321-apoa6860e: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 17:29:54 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747828788321-apoa6860e - Status: 500
2025-05-21 17:29:56 - app.main - INFO - Request: GET /api/asset-items/temp-1747828788321-apoa6860e
2025-05-21 17:29:56 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747828788321-apoa6860e
2025-05-21 17:29:56 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747828788321-apoa6860e
2025-05-21 17:29:56 - app.services.asset_item_service - WARNING - Asset not found: temp-1747828788321-apoa6860e
2025-05-21 17:29:56 - app.routers.asset_items - WARNING - Asset item not found: temp-1747828788321-apoa6860e
2025-05-21 17:29:56 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747828788321-apoa6860e: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 17:29:56 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747828788321-apoa6860e - Status: 500
2025-05-21 17:30:00 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 17:30:00 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 17:30:00 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 17:30:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:30:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:30:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:32:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:32:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:32:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:32:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:32:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:32:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:33:12 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:33:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:33:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:33:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:33:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:33:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:33:18 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:33:18 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:33:18 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:33:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:33:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:33:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:33:27 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 17:33:27 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 17:33:27 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 17:33:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:33:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:33:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:33:31 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 17:33:31 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 17:33:31 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 17:33:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:33:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:33:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:42:54 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:42:54 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:42:54 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:46:22 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:46:22 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:46:22 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:46:22 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:46:22 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:46:22 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 17:46:23 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:46:23 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:46:23 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:46:23 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:46:23 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:46:23 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 17:46:25 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:46:25 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:46:25 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:46:26 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:46:26 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:46:26 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 17:53:29 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 17:57:05 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 17:57:05 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 17:57:05 - app.main - INFO - Registering routers with prefix /api
2025-05-21 17:57:05 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 17:57:05 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 17:57:05 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 17:57:06 - app.main - INFO - All database indexes verified
2025-05-21 17:57:06 - app.main - INFO - Server started successfully!
2025-05-21 17:57:06 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 17:57:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:57:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:57:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:57:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:57:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:57:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:57:32 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:57:32 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:57:32 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:57:32 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:57:32 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:57:32 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 17:57:33 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:57:33 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:57:33 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:57:34 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:57:34 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:57:34 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 17:57:36 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:57:36 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:57:36 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:57:36 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:57:36 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:57:36 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 17:58:02 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:58:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 17:58:02 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:58:02 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:58:03 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:58:03 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:58:03 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 17:58:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 17:58:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 17:58:04 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:58:04 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:58:04 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:58:04 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:58:04 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:58:04 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 17:58:06 - app.main - INFO - Request: GET /api/employees/
2025-05-21 17:58:06 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 17:58:06 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 17:58:06 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:58:06 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 17:58:06 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:05:57 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:05:57 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:05:57 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:05:57 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:05:57 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:05:57 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:05:57 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:05:57 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:05:57 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:05:59 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:05:59 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:05:59 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:05:59 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:05:59 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:05:59 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:06:02 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:06:02 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:06:02 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:06:02 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:06:02 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:06:02 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:07:33 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:07:33 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:07:33 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:07:33 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:07:33 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:07:33 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:07:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:07:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:07:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:07:34 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:07:34 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:07:34 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:07:34 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:07:34 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:07:34 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:07:37 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:07:37 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:07:37 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:07:37 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:07:37 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:07:37 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:07:50 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 18:07:50 - uvicorn.error - ERROR - Traceback (most recent call last):
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ~~~~~~~~~~^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
    ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
    ~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
    ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\server.py", line 69, in serve
    with self.capture_signals():
         ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 148, in __exit__
    next(self.gen)
    ~~~~^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\server.py", line 330, in capture_signals
    signal.raise_signal(captured_signal)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 157, in _on_sigint
    raise KeyboardInterrupt()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\starlette\routing.py", line 700, in lifespan
    await receive()
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\lifespan\on.py", line 137, in receive
    return await self.receive_queue.get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\queues.py", line 186, in get
    await getter
asyncio.exceptions.CancelledError

2025-05-21 18:08:04 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 18:08:04 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 18:08:04 - app.main - INFO - Registering routers with prefix /api
2025-05-21 18:08:04 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 18:08:04 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 18:08:04 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 18:08:04 - app.main - INFO - All database indexes verified
2025-05-21 18:08:04 - app.main - INFO - Server started successfully!
2025-05-21 18:08:04 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 18:08:22 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:08:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:08:22 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:08:22 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:08:22 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:08:22 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:08:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:08:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:08:23 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:08:24 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:08:24 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:08:24 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:08:24 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:08:24 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:08:24 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:08:26 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:08:26 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:08:26 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:08:27 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:08:27 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:08:27 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:12:01 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:12:01 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:12:01 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:12:01 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:01 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:01 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:12:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:12:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:12:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:12:03 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:12:03 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:12:03 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:12:03 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:03 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:03 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:12:05 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:12:05 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:12:05 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:12:05 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:05 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:12:05 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:12:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:12:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:12:07 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:12:07 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:12:07 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:12:07 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:07 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:07 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:12:10 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:12:10 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:12:10 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:12:10 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:10 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:12:10 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:14:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:14:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:14:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:14:18 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:14:18 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:14:18 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:14:18 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:14:18 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:14:18 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:14:19 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:14:19 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:14:19 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:14:20 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:14:20 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:14:20 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:14:22 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:14:22 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:14:22 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:14:22 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:14:22 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:14:22 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:14:33 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 18:14:48 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 18:14:48 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 18:14:48 - app.main - INFO - Registering routers with prefix /api
2025-05-21 18:14:48 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 18:14:48 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 18:14:48 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 18:14:48 - app.main - INFO - All database indexes verified
2025-05-21 18:14:48 - app.main - INFO - Server started successfully!
2025-05-21 18:14:48 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 18:15:03 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:15:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:15:03 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:15:03 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:15:04 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:15:04 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:15:04 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:15:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:15:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:15:05 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:15:05 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:15:05 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:15:05 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:15:05 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:15:05 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:15:07 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:15:07 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:15:07 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:15:07 - app.services.employee_service - ERROR - Error fetching employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:15:07 - app.routers.employees - ERROR - Failed to fetch employees: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\employees.py", line 64, in read_employees
    employees = get_employees(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\employee_service.py", line 93, in get_employees
    employee_response = EmployeeResponse(**employee)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for EmployeeResponse
assigned_assets
  Input should be a valid integer [type=int_type, input_value=[{'asset_id': '70ee52cb-1...5-05-18T08:41:13.715Z'}], input_type=list]
    For further information visit https://errors.pydantic.dev/2.10/v/int_type
2025-05-21 18:15:07 - app.main - WARNING - Request failed: GET /api/employees/ - Status: 500
2025-05-21 18:17:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:17:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:17:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:22:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:22:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:22:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:22:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:22:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:22:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:22:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:22:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:22:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:22:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:22:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:22:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:32:24 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 18:32:35 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 18:32:35 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 18:32:35 - app.main - INFO - Registering routers with prefix /api
2025-05-21 18:32:35 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 18:32:35 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 18:32:35 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 18:32:36 - app.main - INFO - All database indexes verified
2025-05-21 18:32:36 - app.main - INFO - Server started successfully!
2025-05-21 18:32:36 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 18:32:40 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:32:40 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:32:40 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:32:54 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:32:54 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:32:54 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 18:33:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:33:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:33:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:37:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:37:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:37:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:37:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:37:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:37:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:38:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:38:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:38:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:38:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:38:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:38:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:56:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:56:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:56:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:56:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:56:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:56:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:56:49 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-21 18:56:49 - uvicorn.error - ERROR - Traceback (most recent call last):
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
           ~~~~~~~~~~^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
    ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
    ~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
    ~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\server.py", line 69, in serve
    with self.capture_signals():
         ~~~~~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\contextlib.py", line 148, in __exit__
    next(self.gen)
    ~~~~^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\server.py", line 330, in capture_signals
    signal.raise_signal(captured_signal)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\runners.py", line 157, in _on_sigint
    raise KeyboardInterrupt()
KeyboardInterrupt

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\starlette\routing.py", line 700, in lifespan
    await receive()
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\uvicorn\lifespan\on.py", line 137, in receive
    return await self.receive_queue.get()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\queues.py", line 186, in get
    await getter
asyncio.exceptions.CancelledError

2025-05-21 18:57:00 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-21 18:57:00 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-21 18:57:00 - app.main - INFO - Registering routers with prefix /api
2025-05-21 18:57:00 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-21 18:57:00 - app.main - INFO - MongoDB connection verified successfully
2025-05-21 18:57:00 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-21 18:57:01 - app.main - INFO - All database indexes verified
2025-05-21 18:57:01 - app.main - INFO - Server started successfully!
2025-05-21 18:57:01 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-21 18:57:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:57:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:57:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:57:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 18:57:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 18:57:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 18:59:33 - app.main - INFO - Request: GET /api/employees/
2025-05-21 18:59:33 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 18:59:33 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:00:06 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:00:06 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:00:06 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:00:08 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:00:08 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:00:08 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:06:56 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:06:56 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:06:56 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:06:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:06:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:06:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:31:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:31:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:31:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:31:30 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:31:30 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:31:30 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:31:30 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:31:30 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:30 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:30 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:31:30 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:31:31 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:31:32 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:31:32 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:31:32 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:31:32 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:32 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:32 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:31:34 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:31:34 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:31:34 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:31:35 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:31:35 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:31:35 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:31:35 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:35 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:35 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:31:37 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:31:37 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:31:37 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:31:37 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:31:37 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:37 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:37 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:31:37 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:31:37 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:31:38 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:31:38 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:31:38 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:31:38 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:38 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:38 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:31:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:31:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:31:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:31:40 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:31:40 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:31:40 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:31:40 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:40 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:31:40 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:31:42 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:31:42 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:31:42 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:31:42 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:31:42 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:31:42 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:31:47 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:31:47 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:31:47 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:52:55 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:52:55 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:52:55 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:52:56 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:52:56 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:52:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:52:56 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:52:56 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:52:56 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:52:56 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:52:56 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:52:56 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:52:56 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:52:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:52:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:52:57 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:52:57 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:52:57 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:52:57 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:52:57 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:52:57 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:52:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:52:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:52:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:52:59 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:52:59 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:52:59 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:53:00 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:53:00 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:53:00 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:53:03 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:53:03 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:53:03 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:53:03 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:03 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:03 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:53:04 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:53:04 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:53:04 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:53:04 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:04 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:04 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:53:06 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:53:06 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:53:06 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:53:07 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:53:07 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:53:07 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:53:07 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:07 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:07 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:53:10 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:53:10 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:53:10 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:53:10 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:10 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:10 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:53:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:53:11 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:53:11 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:53:11 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:11 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:11 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:53:13 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:53:13 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:53:13 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:53:13 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:13 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:53:13 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:55:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:55:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:55:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:55:20 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:55:20 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:55:20 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:55:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:55:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:55:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:55:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:55:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:55:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:55:35 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:55:35 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:55:35 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:55:37 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:55:37 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:55:37 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:55:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:55:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:55:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:55:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:55:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:55:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:57:17 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:57:17 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:57:17 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:57:17 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:57:17 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:57:17 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:57:17 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:57:17 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:57:17 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:57:18 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:57:18 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:57:18 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:57:18 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:57:18 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:57:18 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:57:18 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:57:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:57:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:57:20 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:57:20 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:57:20 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:57:20 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:57:20 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 19:57:20 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 19:57:21 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:57:21 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:57:22 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:57:22 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:57:22 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:57:22 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:57:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:57:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:57:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:57:42 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:57:42 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:57:42 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:57:42 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:57:42 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:57:42 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:57:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:57:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:57:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:57:46 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 19:57:46 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:57:46 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 19:57:46 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 19:57:46 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:57:46 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 19:57:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 19:57:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 19:57:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 19:57:51 - app.main - INFO - Request: GET /api/employees/
2025-05-21 19:57:51 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 19:57:51 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:15:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:15:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:15:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:15:46 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:15:46 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:15:46 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:15:46 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:15:46 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:15:46 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:15:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:15:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:15:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:15:50 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:15:50 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:15:50 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:15:50 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:15:50 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:15:50 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:15:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:15:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:15:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:16:55 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:16:55 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:16:55 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:16:55 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:16:55 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:16:55 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:16:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:16:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:16:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:16:57 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:16:57 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:16:57 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:16:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:16:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:16:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:17:00 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:17:00 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:17:00 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:17:00 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:17:00 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:17:00 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:17:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:17:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:17:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:05 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:05 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:24:05 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:05 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:05 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:05 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:05 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:24:05 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:24:05 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:24:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:24:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:06 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:06 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:06 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:06 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:07 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:07 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:08 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:08 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:08 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:08 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:08 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:08 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:24:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:24:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:09 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:09 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:09 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:09 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:09 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:09 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:10 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:10 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:10 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:10 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:10 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:10 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:11 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:24:11 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:11 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:11 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:11 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:11 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:24:11 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:24:11 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:12 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:12 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:12 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:12 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:12 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:12 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:24:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:24:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:14 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:14 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:14 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:14 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:14 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:14 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:15 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:15 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:24:15 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:15 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:15 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:24:15 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:24:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:24:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:24:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:23 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:24:23 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:24:23 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:24:25 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:24:25 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:24:25 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:27 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:27 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:24:27 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:27 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:27 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:24:27 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:24:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:24:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:24:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:30 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:30 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:24:30 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:30 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:30 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:24:30 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:24:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:24:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:24:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:34 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:34 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:24:34 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:24:34 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:24:34 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:34 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:34 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:34 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:34 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:35 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:35 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:35 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:35 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:35 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:35 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:24:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:24:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:24:37 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:37 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:37 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:37 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:37 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:24:37 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:24:56 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:24:56 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:24:56 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:24:56 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:24:56 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:24:56 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:25:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:25:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:25:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:25:15 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:25:15 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:25:15 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:25:15 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:25:15 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:25:15 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:25:15 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:25:15 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:25:15 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:25:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:25:16 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:25:16 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:25:16 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:25:16 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:25:16 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:25:18 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:25:18 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:25:18 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:25:18 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:25:18 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:25:18 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:33:06 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:33:06 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:33:06 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:33:44 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:33:44 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:33:44 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:33:44 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:44 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:44 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:33:45 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:33:45 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:33:45 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:33:45 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:45 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:45 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:33:45 - app.main - INFO - Request: GET /api/asset-items/temp-1747839824272-hwtcjsh84
2025-05-21 20:33:46 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:46 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:46 - app.services.asset_item_service - WARNING - Asset not found: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:46 - app.routers.asset_items - WARNING - Asset item not found: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:46 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747839824272-hwtcjsh84: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 20:33:46 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747839824272-hwtcjsh84 - Status: 500
2025-05-21 20:33:46 - app.main - INFO - Request: GET /api/documents/
2025-05-21 20:33:46 - app.routers.documents - INFO - GET /documents/ - asset_id: temp-1747839824272-hwtcjsh84, employee_id: None, document_type: None
2025-05-21 20:33:46 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'temp-1747839824272-hwtcjsh84'}
2025-05-21 20:33:47 - app.main - INFO - Request: GET /api/asset-items/temp-1747839824272-hwtcjsh84
2025-05-21 20:33:47 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:47 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:47 - app.services.asset_item_service - WARNING - Asset not found: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:47 - app.routers.asset_items - WARNING - Asset item not found: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:47 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747839824272-hwtcjsh84: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 20:33:47 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747839824272-hwtcjsh84 - Status: 500
2025-05-21 20:33:47 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:33:47 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:33:47 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:33:47 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:47 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:47 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:33:49 - app.main - INFO - Request: GET /api/asset-items/temp-1747839824272-hwtcjsh84
2025-05-21 20:33:49 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:49 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:49 - app.services.asset_item_service - WARNING - Asset not found: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:49 - app.routers.asset_items - WARNING - Asset item not found: temp-1747839824272-hwtcjsh84
2025-05-21 20:33:49 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747839824272-hwtcjsh84: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-21 20:33:49 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747839824272-hwtcjsh84 - Status: 500
2025-05-21 20:33:49 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:33:49 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:33:49 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:33:49 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:49 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:49 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:33:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:33:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:33:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:33:51 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:33:51 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:33:51 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:33:51 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:51 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:51 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:33:53 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:33:53 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:33:53 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:33:53 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:53 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:33:53 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:36:04 - app.main - INFO - Request: DELETE /api/asset-categories/n1o2p3q4-r5s6-4t7u-8v9w-0x1y2z3a4b5c
2025-05-21 20:36:04 - app.routers.asset_categories - INFO - Deleting asset category with ID: n1o2p3q4-r5s6-4t7u-8v9w-0x1y2z3a4b5c
2025-05-21 20:36:04 - app.services.asset_category_service - INFO - Deleting category ID: n1o2p3q4-r5s6-4t7u-8v9w-0x1y2z3a4b5c
2025-05-21 20:36:52 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-21 20:36:52 - app.routers.asset_categories - INFO - Creating asset category: hskjvewnjoc
2025-05-21 20:36:52 - app.services.asset_category_service - INFO - Creating category: hskjvewnjoc
2025-05-21 20:36:52 - app.services.asset_category_service - INFO - Created category with ID: 207290be-433c-4db8-84ec-0e060193269b
2025-05-21 20:36:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:36:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:36:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:37:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:37:23 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:37:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:37:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:37:23 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:37:23 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:37:23 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:37:23 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:37:23 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:37:24 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:37:24 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:37:24 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:37:24 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:37:24 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:37:24 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:37:25 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:37:25 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:37:25 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:37:26 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:37:26 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:37:26 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:37:26 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:37:26 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-21 20:37:26 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-21 20:37:35 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:37:35 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:37:35 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:37:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:37:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:37:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:37:40 - app.main - INFO - Request: GET /api/asset-items/
2025-05-21 20:37:40 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-21 20:37:40 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-21 20:37:40 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:37:40 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:37:40 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:37:54 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:37:54 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:37:54 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:37:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:37:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:37:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:37:59 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:37:59 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:37:59 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-21 20:38:22 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:38:22 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:38:22 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:38:31 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:38:31 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:38:31 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:38:57 - app.main - INFO - Request: GET /api/employees/
2025-05-21 20:38:57 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-21 20:38:57 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-21 20:38:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-21 20:38:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-21 20:38:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:21:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:21:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:21:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:21:58 - app.services.asset_category_service - ERROR - Error fetching categories: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:21:58 - app.routers.asset_categories - ERROR - Failed to fetch categories: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:21:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:21:58 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:21:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:21:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:22:28 - app.services.asset_category_service - ERROR - Error fetching categories: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:22:28 - app.routers.asset_categories - ERROR - Failed to fetch categories: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:22:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:22:28 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:22:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:22:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:22:58 - app.services.asset_category_service - ERROR - Error fetching categories: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:22:58 - app.routers.asset_categories - ERROR - Failed to fetch categories: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:22:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:22:58 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:22:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:22:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:23:28 - app.services.asset_category_service - ERROR - Error fetching categories: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:23:28 - app.routers.asset_categories - ERROR - Failed to fetch categories: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [Errno 11001] getaddrinfo failed (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:23:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:23:28 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:23:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:23:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:23:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:23:58 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:23:58 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:23:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:23:58 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:23:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:23:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:23:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:23:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:24:28 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:24:28 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:24:28 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:24:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:24:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:24:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:24:59 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:24:59 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:24:59 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:24:59 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:24:59 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:25:29 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:25:29 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:25:29 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:25:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:25:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:25:59 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:25:59 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:25:59 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:25:59 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:25:59 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:25:59 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:26:29 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:26:30 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:26:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:26:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:27:00 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:27:00 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:27:00 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:27:00 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:27:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:27:02 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:27:02 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:27:32 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:27:32 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:27:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:27:32 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:27:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:27:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:28:02 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:28:02 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:28:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:28:02 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:28:02 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:28:02 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:28:33 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:28:33 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:28:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 00:28:33 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 00:28:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 00:28:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 00:29:03 - app.services.asset_category_service - ERROR - Error fetching categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:29:03 - app.routers.asset_categories - ERROR - Failed to fetch categories: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_categories.py", line 49, in read_asset_categories
    categories = get_asset_categories(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 35, in get_asset_categories
    categories = list(db.find(query))
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1281, in __next__
    return self.next()
           ~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1257, in next
    if len(self._data) or self._refresh():
                          ~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1205, in _refresh
    self._send_message(q)
    ~~~~~~~~~~~~~~~~~~^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\cursor.py", line 1100, in _send_message
    response = client._run_operation(
        operation, self._unpack_response, address=self._address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1754, in _run_operation
    return self._retryable_read(
           ~~~~~~~~~~~~~~~~~~~~^
        _cmd,
        ^^^^^
    ...<4 lines>...
        operation=operation.name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1863, in _retryable_read
    return self._retry_internal(
           ~~~~~~~~~~~~~~~~~~~~^
        func,
        ^^^^^
    ...<7 lines>...
        operation_id=operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\_csot.py", line 120, in csot_wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1830, in _retry_internal
    ).run()
      ~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2554, in run
    return self._read() if self._is_read else self._write()
           ~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2689, in _read
    self._server = self._get_server()
                   ~~~~~~~~~~~~~~~~^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 2645, in _get_server
    return self._client._select_server(
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        self._server_selector,
        ^^^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
        operation_id=self._operation_id,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\mongo_client.py", line 1649, in _select_server
    server = topology.select_server(
        server_selector,
    ...<2 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 398, in select_server
    server = self._select_server(
        selector,
    ...<4 lines>...
        operation_id=operation_id,
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 376, in _select_server
    servers = self.select_servers(
        selector, operation, server_selection_timeout, address, operation_id
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 283, in select_servers
    server_descriptions = self._select_servers_loop(
        selector, server_timeout, operation, operation_id, address
    )
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pymongo\synchronous\topology.py", line 333, in _select_servers_loop
    raise ServerSelectionTimeoutError(
        f"{self._error_message(selector)}, Timeout: {timeout}s, Topology Description: {self.description!r}"
    )
pymongo.errors.ServerSelectionTimeoutError: SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms),SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms), Timeout: 30.0s, Topology Description: <TopologyDescription id: 682dd4a0a804b7ee3011a91e, topology_type: ReplicaSetNoPrimary, servers: [<ServerDescription ('ac-crlljdz-shard-00-00.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-00.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-01.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-01.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>, <ServerDescription ('ac-crlljdz-shard-00-02.b2c6oth.mongodb.net', 27017) server_type: Unknown, rtt: None, error=AutoReconnect('SSL handshake failed: ac-crlljdz-shard-00-02.b2c6oth.mongodb.net:27017: [SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:1018) (configured timeouts: socketTimeoutMS: 30000.0ms, connectTimeoutMS: 30000.0ms)')>]>
2025-05-22 00:29:03 - app.main - WARNING - Request failed: GET /api/asset-categories/ - Status: 500
2025-05-22 01:24:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:24:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:24:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:28:15 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 01:28:15 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 01:28:15 - app.main - INFO - Registering routers with prefix /api
2025-05-22 01:28:15 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 01:28:15 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 01:28:15 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 01:28:15 - app.main - INFO - All database indexes verified
2025-05-22 01:28:15 - app.main - INFO - Server started successfully!
2025-05-22 01:28:15 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 01:28:26 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:28:26 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:28:26 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:28:31 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:31 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:28:31 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:31 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:31 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:28:31 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:28:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:28:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:28:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:28:35 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:28:35 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:35 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:28:35 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:28:36 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:36 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:36 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:36 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:36 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:37 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:37 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:37 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:37 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:37 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:37 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:39 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:39 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:39 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:39 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:28:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:28:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:28:42 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:42 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:28:42 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:42 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:42 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:42 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:42 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:42 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:28:42 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:28:43 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:43 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:43 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:43 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:43 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:43 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:28:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:28:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:28:45 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:45 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:45 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:45 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:45 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:45 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:49 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:49 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:28:49 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:28:49 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:28:50 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:50 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:50 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:50 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:50 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:51 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:51 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:51 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:51 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:51 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:51 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:53 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:53 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:53 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:53 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:53 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:53 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:28:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:28:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:28:58 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:28:58 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:28:58 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:28:58 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:58 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:28:58 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:28:59 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:28:59 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:28:59 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:29:01 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:01 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:01 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:01 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:02 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:02 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:29:02 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:02 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:02 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:02 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:02 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:29:02 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:29:03 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:03 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:03 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:03 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:03 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:03 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:03 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:04 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:04 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:04 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:04 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:04 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:04 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:29:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:29:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:29:07 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:07 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:07 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:07 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:07 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:07 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:29:07 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:07 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:07 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:29:07 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:29:08 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:08 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:08 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:08 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:08 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:09 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:09 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:09 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:09 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:09 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:09 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:29:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:29:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:29:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:11 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:11 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:11 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:11 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:11 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:19 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:19 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:19 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:19 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:19 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:19 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:19 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:29:19 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:29:19 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:29:20 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:20 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:20 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:20 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:20 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:20 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:29:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:29:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:29:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:23 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:23 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:23 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:24 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:24 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:29:24 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:24 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:24 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:24 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:24 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:29:24 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:29:26 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:26 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:29:26 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:29:26 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:29:28 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:28 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:28 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:28 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:28 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:28 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:30 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:30 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:30 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:30 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:30 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:30 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:31 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:31 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:29:31 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:31 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:31 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:31 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:31 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:31 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:29:31 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:29:32 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:32 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:32 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:32 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:32 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:32 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:34 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:29:34 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:29:34 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:29:34 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:34 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:29:34 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:29:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:29:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:29:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:00 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:32:00 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:01 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:32:01 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:32:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:32:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:32:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:06 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:32:06 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:32:06 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:32:08 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:08 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:10 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:32:10 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:32:10 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:13 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:13 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:32:13 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:32:13 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:32:14 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:14 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:32:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:32:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:16 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:16 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:16 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:32:16 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:32:16 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:32:18 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:32:18 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:32:18 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:23 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:32:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: 207290be-433c-4db8-84ec-0e060193269b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:23 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:32:23 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:32:26 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:32:26 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:32:26 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:31 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:31 - app.routers.asset_items - INFO - Fetching asset items - category_id: 207290be-433c-4db8-84ec-0e060193269b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:31 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:31 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:32:31 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:32:31 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:32:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:32:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:32:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:36 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:36 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:32:36 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:32:36 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:32:37 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:37 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:37 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:37 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:37 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:32:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:32:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:32:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:38 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:38 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:38 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:38 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:38 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:38 - app.main - INFO - Request: GET /api/employees/
2025-05-22 01:32:38 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:32:38 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 01:32:38 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 01:32:39 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:39 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:39 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:39 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:32:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 01:32:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 01:32:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 01:32:41 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:41 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:41 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:41 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:41 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:41 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:32:41 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:41 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:41 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:41 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:41 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:41 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 01:32:43 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 01:32:43 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 01:32:43 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 01:32:43 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:43 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 01:32:43 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 10:03:41 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 10:03:41 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 10:03:41 - app.main - INFO - Registering routers with prefix /api
2025-05-22 10:03:41 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 10:03:41 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 10:03:41 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 10:03:41 - app.main - INFO - All database indexes verified
2025-05-22 10:03:41 - app.main - INFO - Server started successfully!
2025-05-22 10:03:41 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 10:03:58 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 10:03:58 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 10:03:58 - app.main - INFO - Registering routers with prefix /api
2025-05-22 10:03:58 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 10:03:58 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 10:03:58 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 10:03:58 - app.main - INFO - All database indexes verified
2025-05-22 10:03:58 - app.main - INFO - Server started successfully!
2025-05-22 10:03:58 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 10:04:10 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:10 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:10 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:04:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:11 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:11 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:04:12 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:04:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:04:14 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:14 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:14 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:04:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:04:16 - app.main - INFO - Request: GET /api/employees/
2025-05-22 10:04:16 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 10:04:16 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 10:04:20 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 10:04:20 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 10:04:20 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 10:04:20 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:20 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:20 - app.main - INFO - Request: GET /api/employees/
2025-05-22 10:04:20 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 10:04:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:21 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 10:04:21 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 10:04:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:04:22 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 10:04:22 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 10:04:22 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 10:04:22 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:22 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:22 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 10:04:25 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 10:04:25 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 10:04:25 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 10:04:25 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:25 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:25 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 10:04:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:04:34 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 10:04:34 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 10:04:34 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 10:04:34 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:34 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:34 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 10:04:35 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 10:04:35 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 10:04:35 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 10:04:35 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:35 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:35 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 10:04:37 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 10:04:37 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 10:04:37 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 10:04:37 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:37 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 10:04:37 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 10:04:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 10:04:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 10:04:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 10:05:02 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 10:05:02 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 10:05:02 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 11:46:43 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 11:46:43 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 11:46:43 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 11:46:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:46:44 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 11:46:44 - app.main - INFO - Request: GET /api/employees/
2025-05-22 11:46:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:46:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:46:45 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 11:46:45 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 11:46:45 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 11:46:45 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 11:46:45 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 11:46:45 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 11:46:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:46:46 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 11:46:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:46:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:46:47 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:46:47 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:46:47 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:46:48 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 11:46:48 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 11:46:48 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 11:46:48 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 11:46:48 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 11:46:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:46:48 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 11:46:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:46:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:46:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:46:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:46:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:46:51 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 11:46:51 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 11:46:51 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 11:46:51 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 11:46:51 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 11:46:51 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:46:51 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 11:46:51 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:46:51 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:55:31 - app.main - INFO - Request: GET /api/asset-items/temp-1747894608597-ogtglo5gt
2025-05-22 11:55:31 - app.main - INFO - Request: GET /api/employees/
2025-05-22 11:55:31 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:31 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:31 - app.services.asset_item_service - WARNING - Asset not found: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:31 - app.routers.asset_items - WARNING - Asset item not found: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:31 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747894608597-ogtglo5gt: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:55:31 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 11:55:31 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 11:55:32 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747894608597-ogtglo5gt - Status: 500
2025-05-22 11:55:33 - app.main - INFO - Request: GET /api/asset-items/temp-1747894608597-ogtglo5gt
2025-05-22 11:55:33 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:33 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:33 - app.services.asset_item_service - WARNING - Asset not found: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:33 - app.routers.asset_items - WARNING - Asset item not found: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:33 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747894608597-ogtglo5gt: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:55:33 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747894608597-ogtglo5gt - Status: 500
2025-05-22 11:55:35 - app.main - INFO - Request: GET /api/asset-items/temp-1747894608597-ogtglo5gt
2025-05-22 11:55:35 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:35 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:35 - app.services.asset_item_service - WARNING - Asset not found: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:35 - app.routers.asset_items - WARNING - Asset item not found: temp-1747894608597-ogtglo5gt
2025-05-22 11:55:35 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747894608597-ogtglo5gt: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:55:35 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747894608597-ogtglo5gt - Status: 500
2025-05-22 11:55:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:55:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:55:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:56:02 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 11:56:14 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 11:56:14 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 11:56:14 - app.main - INFO - Registering routers with prefix /api
2025-05-22 11:56:14 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 11:56:14 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 11:56:14 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 11:56:15 - app.main - INFO - All database indexes verified
2025-05-22 11:56:15 - app.main - INFO - Server started successfully!
2025-05-22 11:56:15 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 11:56:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:56:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:56:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:56:23 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 11:56:23 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 11:56:23 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 11:56:26 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 11:56:26 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 11:56:26 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 11:56:28 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:56:28 - app.main - INFO - Request: GET /api/employees/
2025-05-22 11:56:28 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:28 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:28 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:28 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:28 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:56:28 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:56:28 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 11:56:28 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 11:56:29 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:56:29 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:29 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:29 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:29 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:29 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:56:29 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:56:32 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:56:32 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:32 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:32 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:32 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:56:32 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:56:32 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:58:03 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:58:03 - app.main - INFO - Request: GET /api/employees/
2025-05-22 11:58:03 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:03 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:03 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:03 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:03 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:58:03 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 11:58:03 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 11:58:04 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:58:06 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:58:06 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:06 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:06 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:06 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:06 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:58:06 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:58:09 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:58:09 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:09 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:09 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:09 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:09 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:58:09 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:58:22 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:58:22 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:22 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:22 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:22 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:22 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:58:22 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:58:22 - app.main - INFO - Request: GET /api/employees/
2025-05-22 11:58:22 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 11:58:22 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 11:58:24 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:58:24 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:24 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:24 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:24 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:24 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:58:24 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:58:27 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:58:27 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:27 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:27 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:27 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:27 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:58:27 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:58:57 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:58:57 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:57 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:57 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:57 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:57 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:58:57 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:58:57 - app.main - INFO - Request: GET /api/employees/
2025-05-22 11:58:57 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 11:58:57 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 11:58:59 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:58:59 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:59 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:59 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:59 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:58:59 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:58:59 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:59:02 - app.main - INFO - Request: GET /api/asset-items/temp-1747895187015-w1pndl5d9
2025-05-22 11:59:02 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:59:02 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895187015-w1pndl5d9
2025-05-22 11:59:02 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:59:02 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895187015-w1pndl5d9
2025-05-22 11:59:02 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895187015-w1pndl5d9: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 11:59:02 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895187015-w1pndl5d9 - Status: 500
2025-05-22 11:59:24 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 11:59:34 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 11:59:34 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 11:59:34 - app.main - INFO - Registering routers with prefix /api
2025-05-22 11:59:34 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 11:59:34 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 11:59:34 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 11:59:34 - app.main - INFO - All database indexes verified
2025-05-22 11:59:34 - app.main - INFO - Server started successfully!
2025-05-22 11:59:34 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 12:02:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:02:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:02:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:02:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:02:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:02:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:02:45 - app.main - INFO - Request: GET /api/employees/
2025-05-22 12:02:45 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 12:02:45 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 12:02:47 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:02:47 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:02:47 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:02:49 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:02:49 - app.main - INFO - Request: GET /api/employees/
2025-05-22 12:02:49 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:02:49 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:02:49 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:02:49 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:02:49 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:02:49 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 12:02:49 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 12:02:50 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:02:50 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:02:50 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:02:50 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:02:50 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:02:50 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:02:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:02:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:02:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:02:52 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:02:52 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:02:52 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:02:52 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:02:52 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:02:52 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:02:53 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:02:53 - app.main - INFO - Request: GET /api/employees/
2025-05-22 12:02:53 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 12:02:53 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 12:02:54 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:02:54 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:03:12 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:03:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:03:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:03:13 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:03:13 - app.main - INFO - Request: GET /api/employees/
2025-05-22 12:03:13 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:03:13 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:03:14 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 12:03:14 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 12:03:16 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:03:16 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:03:16 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:03:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:03:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:03:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:03:25 - app.main - INFO - Request: GET /api/asset-items/temp-1747895603205-kz527pssi
2025-05-22 12:03:25 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895603205-kz527pssi
2025-05-22 12:03:25 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895603205-kz527pssi
2025-05-22 12:03:25 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895603205-kz527pssi
2025-05-22 12:03:25 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895603205-kz527pssi
2025-05-22 12:03:25 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895603205-kz527pssi: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 12:03:25 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895603205-kz527pssi - Status: 500
2025-05-22 12:03:26 - app.main - INFO - Request: GET /api/asset-items/temp-1747895603205-kz527pssi
2025-05-22 12:03:26 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895603205-kz527pssi
2025-05-22 12:03:26 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895603205-kz527pssi
2025-05-22 12:03:26 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895603205-kz527pssi
2025-05-22 12:03:26 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895603205-kz527pssi
2025-05-22 12:03:26 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895603205-kz527pssi: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 12:03:26 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895603205-kz527pssi - Status: 500
2025-05-22 12:03:28 - app.main - INFO - Request: GET /api/asset-items/temp-1747895603205-kz527pssi
2025-05-22 12:03:28 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747895603205-kz527pssi
2025-05-22 12:03:28 - app.services.asset_item_service - INFO - Fetching asset item ID: temp-1747895603205-kz527pssi
2025-05-22 12:03:28 - app.services.asset_item_service - WARNING - Asset not found: temp-1747895603205-kz527pssi
2025-05-22 12:03:28 - app.routers.asset_items - WARNING - Asset item not found: temp-1747895603205-kz527pssi
2025-05-22 12:03:28 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747895603205-kz527pssi: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 12:03:28 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747895603205-kz527pssi - Status: 500
2025-05-22 12:04:55 - app.main - INFO - Request: GET /api/employees/
2025-05-22 12:04:55 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 12:04:55 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 12:08:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:08:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:08:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:08:41 - app.main - INFO - Request: DELETE /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a
2025-05-22 12:08:41 - app.routers.asset_categories - INFO - Deleting asset category with ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-22 12:08:41 - app.services.asset_category_service - INFO - Deleting category ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-22 12:08:41 - app.services.asset_category_service - WARNING - Cannot delete category 958d338a-8828-495f-88c7-04d52049cb8a: 1 assets associated
2025-05-22 12:08:41 - app.services.asset_category_service - ERROR - Error deleting category 958d338a-8828-495f-88c7-04d52049cb8a: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-22 12:08:41 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-22 12:08:41 - app.main - WARNING - Request failed: DELETE /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a - Status: 400
2025-05-22 12:08:43 - app.main - INFO - Request: DELETE /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a
2025-05-22 12:08:43 - app.routers.asset_categories - INFO - Deleting asset category with ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-22 12:08:43 - app.services.asset_category_service - INFO - Deleting category ID: 958d338a-8828-495f-88c7-04d52049cb8a
2025-05-22 12:08:43 - app.services.asset_category_service - WARNING - Cannot delete category 958d338a-8828-495f-88c7-04d52049cb8a: 1 assets associated
2025-05-22 12:08:43 - app.services.asset_category_service - ERROR - Error deleting category 958d338a-8828-495f-88c7-04d52049cb8a: Cannot delete category with 1 associated assets
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_category_service.py", line 422, in delete_asset_category
    raise ValueError(f"Cannot delete category with {asset_count} associated assets")
ValueError: Cannot delete category with 1 associated assets
2025-05-22 12:08:43 - app.routers.asset_categories - WARNING - Cannot delete category: Cannot delete category with 1 associated assets
2025-05-22 12:08:43 - app.main - WARNING - Request failed: DELETE /api/asset-categories/958d338a-8828-495f-88c7-04d52049cb8a - Status: 400
2025-05-22 12:08:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:08:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:08:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:08:47 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:08:47 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:08:47 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:09:30 - app.main - INFO - Request: GET /api/employees/
2025-05-22 12:09:30 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 12:09:30 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 12:11:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:11:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:11:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:11:25 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 12:11:45 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 12:11:45 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 12:11:45 - app.main - INFO - Registering routers with prefix /api
2025-05-22 12:11:45 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 12:11:45 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 12:11:45 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 12:11:45 - app.main - INFO - All database indexes verified
2025-05-22 12:11:45 - app.main - INFO - Server started successfully!
2025-05-22 12:11:45 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 12:11:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:11:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:11:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:11:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:11:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:11:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:11:59 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:11:59 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:11:59 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:12:02 - app.main - INFO - Request: GET /api/asset-items/temp-1747896119098-lmwke5iu8
2025-05-22 12:12:02 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896119098-lmwke5iu8
2025-05-22 12:12:02 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896119098-lmwke5iu8
2025-05-22 12:12:02 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747896119098-lmwke5iu8: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 12:12:02 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896119098-lmwke5iu8 - Status: 500
2025-05-22 12:12:03 - app.main - INFO - Request: GET /api/asset-items/temp-1747896119098-lmwke5iu8
2025-05-22 12:12:03 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896119098-lmwke5iu8
2025-05-22 12:12:03 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896119098-lmwke5iu8
2025-05-22 12:12:03 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747896119098-lmwke5iu8: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 12:12:03 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896119098-lmwke5iu8 - Status: 500
2025-05-22 12:12:05 - app.main - INFO - Request: GET /api/asset-items/temp-1747896119098-lmwke5iu8
2025-05-22 12:12:05 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896119098-lmwke5iu8
2025-05-22 12:12:05 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896119098-lmwke5iu8
2025-05-22 12:12:05 - app.routers.asset_items - ERROR - Failed to fetch asset item temp-1747896119098-lmwke5iu8: 404: Asset item not found
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 149, in read_asset_item
    raise HTTPException(status_code=404, detail="Asset item not found")
fastapi.exceptions.HTTPException: 404: Asset item not found
2025-05-22 12:12:05 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896119098-lmwke5iu8 - Status: 500
2025-05-22 12:15:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:15:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:15:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:15:30 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 12:15:39 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 12:15:39 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 12:15:39 - app.main - INFO - Registering routers with prefix /api
2025-05-22 12:15:40 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 12:15:40 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 12:15:40 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 12:15:40 - app.main - INFO - All database indexes verified
2025-05-22 12:15:40 - app.main - INFO - Server started successfully!
2025-05-22 12:15:40 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 12:15:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:15:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:15:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:15:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:15:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:15:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:15:52 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:15:52 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:15:52 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:15:54 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:15:54 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:15:54 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:15:54 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:15:55 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:15:55 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:15:55 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:15:55 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:15:57 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:15:57 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:15:57 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:15:57 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:18:27 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:18:27 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:18:27 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:18:27 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:18:29 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:18:29 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:18:29 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:18:29 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:18:32 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:18:32 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:18:32 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:18:32 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:18:40 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:18:40 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:18:40 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:18:40 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:18:42 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:18:42 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:18:42 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:18:42 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:18:45 - app.main - INFO - Request: GET /api/asset-items/temp-1747896352175-xcgjihcek
2025-05-22 12:18:45 - app.routers.asset_items - INFO - Fetching asset item with ID: temp-1747896352175-xcgjihcek
2025-05-22 12:18:45 - app.routers.asset_items - WARNING - Temporary ID not found in database: temp-1747896352175-xcgjihcek
2025-05-22 12:18:45 - app.main - WARNING - Request failed: GET /api/asset-items/temp-1747896352175-xcgjihcek - Status: 404
2025-05-22 12:18:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:18:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:18:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:18:52 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:18:52 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:18:52 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:25:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:25:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:25:11 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:25:11 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:25:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:25:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:25:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:25:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:25:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:25:15 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:25:15 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:25:15 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:25:16 - app.main - INFO - Request: GET /api/asset-items/CHR-003
2025-05-22 12:25:16 - app.routers.asset_items - INFO - Fetching asset item with ID: CHR-003
2025-05-22 12:25:16 - app.services.asset_item_service - INFO - Fetching asset item ID: CHR-003
2025-05-22 12:25:16 - app.services.asset_item_service - WARNING - Asset not found: CHR-003
2025-05-22 12:25:16 - app.routers.asset_items - WARNING - Asset item not found: CHR-003
2025-05-22 12:25:16 - app.main - WARNING - Request failed: GET /api/asset-items/CHR-003 - Status: 404
2025-05-22 12:25:17 - app.main - INFO - Request: GET /api/asset-items/CHR-003
2025-05-22 12:25:17 - app.routers.asset_items - INFO - Fetching asset item with ID: CHR-003
2025-05-22 12:25:17 - app.services.asset_item_service - INFO - Fetching asset item ID: CHR-003
2025-05-22 12:25:17 - app.services.asset_item_service - WARNING - Asset not found: CHR-003
2025-05-22 12:25:17 - app.routers.asset_items - WARNING - Asset item not found: CHR-003
2025-05-22 12:25:18 - app.main - WARNING - Request failed: GET /api/asset-items/CHR-003 - Status: 404
2025-05-22 12:25:20 - app.main - INFO - Request: GET /api/asset-items/CHR-003
2025-05-22 12:25:20 - app.routers.asset_items - INFO - Fetching asset item with ID: CHR-003
2025-05-22 12:25:20 - app.services.asset_item_service - INFO - Fetching asset item ID: CHR-003
2025-05-22 12:25:20 - app.services.asset_item_service - WARNING - Asset not found: CHR-003
2025-05-22 12:25:20 - app.routers.asset_items - WARNING - Asset item not found: CHR-003
2025-05-22 12:25:20 - app.main - WARNING - Request failed: GET /api/asset-items/CHR-003 - Status: 404
2025-05-22 12:25:28 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 12:25:42 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 12:25:42 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 12:25:42 - app.main - INFO - Registering routers with prefix /api
2025-05-22 12:25:43 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 12:25:43 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 12:25:43 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 12:25:43 - app.main - INFO - All database indexes verified
2025-05-22 12:25:43 - app.main - INFO - Server started successfully!
2025-05-22 12:25:43 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 12:26:13 - app.main - INFO - Request: GET /api/asset-items/CHR-003
2025-05-22 12:26:13 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:26:13 - app.routers.asset_items - INFO - Fetching asset item with ID: CHR-003
2025-05-22 12:26:13 - app.services.asset_item_service - INFO - Fetching asset item ID: CHR-003
2025-05-22 12:26:13 - app.services.asset_item_service - WARNING - Asset not found: CHR-003
2025-05-22 12:26:13 - app.routers.asset_items - WARNING - Asset item not found: CHR-003
2025-05-22 12:26:13 - app.main - WARNING - Request failed: GET /api/asset-items/CHR-003 - Status: 404
2025-05-22 12:26:13 - app.routers.documents - INFO - GET /documents/ - asset_id: CHR-003, employee_id: None, document_type: None
2025-05-22 12:26:13 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'CHR-003'}
2025-05-22 12:26:14 - app.main - INFO - Request: GET /api/asset-items/CHR-003
2025-05-22 12:26:14 - app.routers.asset_items - INFO - Fetching asset item with ID: CHR-003
2025-05-22 12:26:14 - app.services.asset_item_service - INFO - Fetching asset item ID: CHR-003
2025-05-22 12:26:14 - app.services.asset_item_service - WARNING - Asset not found: CHR-003
2025-05-22 12:26:14 - app.routers.asset_items - WARNING - Asset item not found: CHR-003
2025-05-22 12:26:14 - app.main - WARNING - Request failed: GET /api/asset-items/CHR-003 - Status: 404
2025-05-22 12:26:17 - app.main - INFO - Request: GET /api/asset-items/CHR-003
2025-05-22 12:26:17 - app.routers.asset_items - INFO - Fetching asset item with ID: CHR-003
2025-05-22 12:26:17 - app.services.asset_item_service - INFO - Fetching asset item ID: CHR-003
2025-05-22 12:26:17 - app.services.asset_item_service - WARNING - Asset not found: CHR-003
2025-05-22 12:26:17 - app.routers.asset_items - WARNING - Asset item not found: CHR-003
2025-05-22 12:26:17 - app.main - WARNING - Request failed: GET /api/asset-items/CHR-003 - Status: 404
2025-05-22 12:31:59 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:31:59 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:31:59 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:32:01 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:32:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:32:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:32:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:32:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:32:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:32:07 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:32:07 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:32:07 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:32:09 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:32:09 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:32:09 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 12:32:09 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 12:32:09 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:32:09 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:32:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:32:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:32:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:32:50 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:32:50 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:32:50 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:33:00 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:33:00 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:33:00 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:33:55 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:33:55 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:33:55 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:33:58 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:33:58 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:33:58 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:33:58 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:33:58 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-22 12:33:58 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-22 12:36:24 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:36:24 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:36:24 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:38:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:38:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:38:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:38:39 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:38:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:38:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:39:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:39:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:39:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:39:12 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:39:12 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:39:12 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:39:36 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:39:36 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:39:36 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:39:36 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:39:36 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-22 12:39:36 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-22 12:44:57 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:44:57 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:44:57 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:44:57 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:44:57 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:44:57 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-22 12:44:57 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-22 12:44:57 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:44:57 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:45:29 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:45:29 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:45:29 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:45:29 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:45:29 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-22 12:45:29 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-22 12:45:58 - app.main - INFO - Request: GET /api/maintenance-history/asset/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:45:58 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:45:58 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:45:58 - app.routers.maintenance_history - WARNING - Invalid request: 4 validation errors for MaintenanceResponse
request_date
  Field required [type=missing, input_value={'id': 'MNT-2025-002', 'a...sco Authorized Service'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
scheduled_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2026, 3, 15, 0, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
description
  Field required [type=missing, input_value={'id': 'MNT-2025-002', 'a...sco Authorized Service'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
maintenance_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2026, 3, 15, 10, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:45:58 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/76ad2e00-5c0d-4e3c-9307-5114330e425c - Status: 400
2025-05-22 12:46:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:46:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:46:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:46:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:46:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:46:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:46:04 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:46:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:46:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:46:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:46:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:46:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:46:07 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:07 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:46:07 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:07 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:07 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 12:46:07 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 12:46:10 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:10 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:10 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:10 - app.routers.maintenance_history - WARNING - Invalid request: 5 validation errors for MaintenanceResponse
request_date
  Field required [type=missing, input_value={'id': 'MNT-2025-001', 'a...cheduled': '2025-11-10'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
scheduled_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 8, 0, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
completed_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 10, 11, 30), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
description
  Field required [type=missing, input_value={'id': 'MNT-2025-001', 'a...cheduled': '2025-11-10'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
maintenance_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 10, 9, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:10 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:46:18 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 12:46:29 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 12:46:29 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 12:46:29 - app.main - INFO - Registering routers with prefix /api
2025-05-22 12:46:29 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 12:46:29 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 12:46:29 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 12:46:29 - app.main - INFO - All database indexes verified
2025-05-22 12:46:29 - app.main - INFO - Server started successfully!
2025-05-22 12:46:29 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 12:46:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:46:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:46:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:46:35 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:46:35 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:46:35 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:46:35 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:35 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:35 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:46:36 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:46:36 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:46:36 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:46:36 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:36 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:36 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:46:36 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:37 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:46:37 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 12:46:37 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 12:46:37 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:37 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:37 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:37 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:37 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:46:38 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:38 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:38 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:38 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:38 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:38 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:46:38 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:46:38 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:46:38 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:46:38 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:38 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:38 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:46:40 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:40 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:40 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:40 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:40 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:40 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:46:40 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:40 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:40 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:46:40 - app.routers.maintenance_history - WARNING - Invalid request: 5 validation errors for MaintenanceResponse
request_date
  Field required [type=missing, input_value={'id': 'MNT-2025-001', 'a...cheduled': '2025-11-10'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
scheduled_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 8, 0, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
completed_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 10, 11, 30), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
description
  Field required [type=missing, input_value={'id': 'MNT-2025-001', 'a...cheduled': '2025-11-10'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
maintenance_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 10, 9, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:46:40 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:48:01 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:01 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:48:01 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:01 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:01 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:48:02 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:48:02 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:48:02 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 12:48:02 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 12:48:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:48:02 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:48:02 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:48:03 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:03 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:03 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:03 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:48:03 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:48:03 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:48:06 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:06 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:06 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:48:06 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:48:06 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:48:06 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:49:05 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:05 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:49:05 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:49:05 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:05 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:05 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    def get_asset_item_by_id(db: Collection, asset_id: str) -> Optional[AssetItemResponse]:
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:05 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:05 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 12:49:05 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 12:49:05 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:49:05 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:49:05 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:49:06 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:49:06 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:49:06 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:49:07 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:07 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:07 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:07 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    def get_asset_item_by_id(db: Collection, asset_id: str) -> Optional[AssetItemResponse]:
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:07 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:07 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:49:08 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:08 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:08 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:08 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:08 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:08 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:49:09 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:09 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:09 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:09 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:09 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:09 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:49:09 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:09 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:09 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:49:09 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 120, in get_asset_item_by_id
    def get_asset_item_by_id(db: Collection, asset_id: str) -> Optional[AssetItemResponse]:
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:09 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:09 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:49:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:11 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:11 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:11 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:11 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:11 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:49:14 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:49:14 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:49:14 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:49:16 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:49:16 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:49:16 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:49:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:49:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:49:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:49:20 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:20 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:20 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:20 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:20 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:20 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:49:21 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:21 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:21 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:21 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:21 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:21 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:49:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:23 - app.services.asset_item_service - ERROR - Error fetching asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:23 - app.routers.asset_items - ERROR - Failed to fetch asset items: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\routers\asset_items.py", line 97, in read_asset_items
    items = get_asset_items(collection, filters)
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 85, in get_asset_items
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:24 - app.main - WARNING - Request failed: GET /api/asset-items/ - Status: 500
2025-05-22 12:49:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:49:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:49:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:49:35 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:35 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:35 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:49:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:49:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:49:39 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:49:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:49:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:49:42 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:49:42 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:49:42 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:49:44 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:49:44 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:49:44 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:49:44 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:49:44 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-22 12:49:44 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-22 12:49:46 - app.main - INFO - Request: GET /api/maintenance-history/asset/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:49:46 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:49:46 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:49:46 - app.routers.maintenance_history - WARNING - Invalid request: 4 validation errors for MaintenanceResponse
request_date
  Field required [type=missing, input_value={'id': 'MNT-2025-002', 'a...sco Authorized Service'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
scheduled_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2026, 3, 15, 0, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
description
  Field required [type=missing, input_value={'id': 'MNT-2025-002', 'a...sco Authorized Service'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
maintenance_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2026, 3, 15, 10, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:49:46 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/76ad2e00-5c0d-4e3c-9307-5114330e425c - Status: 400
2025-05-22 12:50:12 - app.main - INFO - Request: GET /api/maintenance-history/asset/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:12 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:12 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:12 - app.routers.maintenance_history - WARNING - Invalid request: 4 validation errors for MaintenanceResponse
request_date
  Field required [type=missing, input_value={'id': 'MNT-2025-002', 'a...sco Authorized Service'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
scheduled_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2026, 3, 15, 0, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
description
  Field required [type=missing, input_value={'id': 'MNT-2025-002', 'a...sco Authorized Service'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
maintenance_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2026, 3, 15, 10, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:50:12 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/76ad2e00-5c0d-4e3c-9307-5114330e425c - Status: 400
2025-05-22 12:50:21 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 12:50:35 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 12:50:35 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 12:50:35 - app.main - INFO - Registering routers with prefix /api
2025-05-22 12:50:35 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 12:50:35 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 12:50:35 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 12:50:35 - app.main - INFO - All database indexes verified
2025-05-22 12:50:35 - app.main - INFO - Server started successfully!
2025-05-22 12:50:35 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 12:50:43 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:50:43 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:50:43 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:50:45 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:50:45 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:50:45 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:50:46 - app.main - INFO - Request: GET /api/asset-items/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:46 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:50:46 - app.routers.documents - INFO - GET /documents/ - asset_id: 76ad2e00-5c0d-4e3c-9307-5114330e425c, employee_id: None, document_type: None
2025-05-22 12:50:46 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '76ad2e00-5c0d-4e3c-9307-5114330e425c'}
2025-05-22 12:50:46 - app.routers.asset_items - INFO - Fetching asset item with ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:46 - app.services.asset_item_service - INFO - Fetching asset item ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:48 - app.main - INFO - Request: GET /api/maintenance-history/asset/76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:48 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:48 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 76ad2e00-5c0d-4e3c-9307-5114330e425c
2025-05-22 12:50:48 - app.routers.maintenance_history - WARNING - Invalid request: 4 validation errors for MaintenanceResponse
request_date
  Field required [type=missing, input_value={'id': 'MNT-2025-002', 'a...sco Authorized Service'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
scheduled_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2026, 3, 15, 0, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
description
  Field required [type=missing, input_value={'id': 'MNT-2025-002', 'a...sco Authorized Service'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
maintenance_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2026, 3, 15, 10, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:50:48 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/76ad2e00-5c0d-4e3c-9307-5114330e425c - Status: 400
2025-05-22 12:54:38 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:54:38 - app.routers.asset_items - INFO - Fetching asset items - category_id: 5c2d5cc3-5d45-4a1d-8c52-56c5bfd7182b, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:54:38 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:54:38 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:54:38 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:54:38 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:54:39 - app.main - INFO - Request: GET /api/employees/
2025-05-22 12:54:39 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 12:54:39 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 12:55:14 - app.main - INFO - Request: GET /api/employees/
2025-05-22 12:55:14 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 12:55:14 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 12:55:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:55:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:55:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:56:04 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:56:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:56:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:56:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:56:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:56:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:56:08 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:08 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:56:08 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:08 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:08 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:56:08 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:56:08 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 12:56:08 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 12:56:08 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:56:09 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:09 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:09 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:09 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:56:09 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:56:09 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:56:11 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:11 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:11 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:11 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:56:11 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:56:11 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:56:19 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:19 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:19 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:56:20 - app.routers.maintenance_history - WARNING - Invalid request: 5 validation errors for MaintenanceResponse
request_date
  Field required [type=missing, input_value={'id': 'MNT-2025-001', 'a...cheduled': '2025-11-10'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
scheduled_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 8, 0, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
completed_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 10, 11, 30), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
description
  Field required [type=missing, input_value={'id': 'MNT-2025-001', 'a...cheduled': '2025-11-10'}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.10/v/missing
maintenance_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 10, 9, 0), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:56:20 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:58:12 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:58:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:58:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:58:15 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 12:58:25 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 12:58:25 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 12:58:25 - app.main - INFO - Registering routers with prefix /api
2025-05-22 12:58:26 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 12:58:26 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 12:58:26 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 12:58:26 - app.main - INFO - All database indexes verified
2025-05-22 12:58:26 - app.main - INFO - Server started successfully!
2025-05-22 12:58:26 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 12:58:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:58:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:58:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:58:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:58:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:58:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:58:38 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 12:58:38 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 12:58:38 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 12:58:40 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:40 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:58:40 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:40 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:40 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:58:40 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:58:40 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:58:40 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 12:58:40 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 12:58:41 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:41 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:41 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:41 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:58:41 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:58:41 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:58:42 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:42 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:42 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:43 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:43 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:43 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:58:43 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:58:43 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:58:43 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:59:08 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:08 - app.main - INFO - Request: GET /api/documents/
2025-05-22 12:59:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 12:59:08 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 12:59:08 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 12:59:08 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:08 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:09 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:59:09 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:59:09 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:59:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 12:59:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 12:59:10 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:10 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:10 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:10 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:59:10 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:59:10 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:59:12 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:12 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:12 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:12 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:59:12 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 12:59:12 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 12:59:14 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:14 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 12:59:14 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:16 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:04:16 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:04:16 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:04:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:04:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:04:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:04:52 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:04:52 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:04:52 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:04:53 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:53 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:53 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:53 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:04:53 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:04:53 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:04:53 - app.main - INFO - Request: GET /api/documents/
2025-05-22 13:04:53 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 13:04:53 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 13:04:54 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:54 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:54 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:54 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:04:54 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:04:54 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:04:55 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:55 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:55 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:57 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:57 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:57 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:04:57 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:04:57 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:04:57 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:05:05 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 13:05:15 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 13:05:15 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 13:05:15 - app.main - INFO - Registering routers with prefix /api
2025-05-22 13:05:15 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 13:05:15 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 13:05:15 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 13:05:16 - app.main - INFO - All database indexes verified
2025-05-22 13:05:16 - app.main - INFO - Server started successfully!
2025-05-22 13:05:16 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 13:05:18 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:05:18 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:05:18 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:05:19 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:05:19 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:05:19 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:05:21 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:21 - app.main - INFO - Request: GET /api/documents/
2025-05-22 13:05:21 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 13:05:21 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 13:05:21 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:21 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:21 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:05:21 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:05:21 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:05:22 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:22 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:22 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:22 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:05:22 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:05:22 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:05:22 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:22 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:22 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:24 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:24 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:24 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:05:24 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:05:24 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:05:24 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:06:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:06:11 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:06:11 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:06:34 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:06:34 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:06:34 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:09:24 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:09:24 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:09:24 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:10:03 - app.main - INFO - Request: GET /api/maintenance-history/asset/undefined
2025-05-22 13:10:03 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset undefined
2025-05-22 13:10:03 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: undefined
2025-05-22 13:10:03 - app.services.maintenance_history_service - WARNING - Asset not found: undefined
2025-05-22 13:10:03 - app.routers.maintenance_history - WARNING - Invalid request: Asset with ID undefined not found
2025-05-22 13:10:03 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/undefined - Status: 400
2025-05-22 13:10:34 - app.main - INFO - Request: GET /api/maintenance-history/asset/undefined
2025-05-22 13:10:34 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset undefined
2025-05-22 13:10:34 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: undefined
2025-05-22 13:10:34 - app.services.maintenance_history_service - WARNING - Asset not found: undefined
2025-05-22 13:10:34 - app.routers.maintenance_history - WARNING - Invalid request: Asset with ID undefined not found
2025-05-22 13:10:34 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/undefined - Status: 400
2025-05-22 13:10:34 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:10:34 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:10:34 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:11:04 - app.main - INFO - Request: GET /api/maintenance-history/asset/undefined
2025-05-22 13:11:04 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset undefined
2025-05-22 13:11:04 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: undefined
2025-05-22 13:11:04 - app.services.maintenance_history_service - WARNING - Asset not found: undefined
2025-05-22 13:11:04 - app.routers.maintenance_history - WARNING - Invalid request: Asset with ID undefined not found
2025-05-22 13:11:04 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/undefined - Status: 400
2025-05-22 13:11:22 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 13:11:48 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 13:11:48 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 13:11:48 - app.main - INFO - Registering routers with prefix /api
2025-05-22 13:11:48 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 13:11:48 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 13:11:48 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 13:11:48 - app.main - INFO - All database indexes verified
2025-05-22 13:11:48 - app.main - INFO - Server started successfully!
2025-05-22 13:11:48 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 13:11:51 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:11:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:11:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:11:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:11:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:11:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:11:54 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:11:54 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:11:54 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:11:56 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:56 - app.main - INFO - Request: GET /api/documents/
2025-05-22 13:11:56 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:56 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:56 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:11:56 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:11:56 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 13:11:56 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 13:11:56 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:11:57 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:57 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:57 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:57 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:11:57 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:11:57 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:57 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:11:57 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:57 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:59 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:59 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:59 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:11:59 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:11:59 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:11:59 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:11:59 - app.main - INFO - Request: GET /api/maintenance-history/asset/undefined
2025-05-22 13:11:59 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset undefined
2025-05-22 13:11:59 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: undefined
2025-05-22 13:11:59 - app.services.maintenance_history_service - WARNING - Asset not found: undefined
2025-05-22 13:11:59 - app.routers.maintenance_history - WARNING - Invalid request: Asset with ID undefined not found
2025-05-22 13:11:59 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/undefined - Status: 400
2025-05-22 13:12:09 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 13:12:19 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 13:12:19 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 13:12:19 - app.main - INFO - Registering routers with prefix /api
2025-05-22 13:12:19 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 13:12:19 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 13:12:19 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 13:12:20 - app.main - INFO - All database indexes verified
2025-05-22 13:12:20 - app.main - INFO - Server started successfully!
2025-05-22 13:12:20 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 13:12:20 - app.main - INFO - Request: GET /api/maintenance-history/asset/undefined
2025-05-22 13:12:20 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset undefined
2025-05-22 13:12:20 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: undefined
2025-05-22 13:12:20 - app.services.maintenance_history_service - WARNING - Asset not found: undefined
2025-05-22 13:12:20 - app.routers.maintenance_history - WARNING - Invalid request: Asset with ID undefined not found
2025-05-22 13:12:20 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/undefined - Status: 400
2025-05-22 13:12:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:12:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:12:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:12:26 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:12:26 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:12:26 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:12:34 - app.main - INFO - Request: GET /api/maintenance-history/asset/undefined
2025-05-22 13:12:34 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset undefined
2025-05-22 13:12:34 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: undefined
2025-05-22 13:12:34 - app.services.maintenance_history_service - WARNING - Asset not found: undefined
2025-05-22 13:12:34 - app.routers.maintenance_history - WARNING - Invalid request: Asset with ID undefined not found
2025-05-22 13:12:34 - app.main - WARNING - Request failed: GET /api/maintenance-history/asset/undefined - Status: 400
2025-05-22 13:13:28 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 13:13:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:13:28 - app.main - WARNING - Request failed: GET /api/maintenance-history - Status: 405
2025-05-22 13:13:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:13:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:13:45 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 13:13:45 - app.main - WARNING - Request failed: GET /api/maintenance-history - Status: 405
2025-05-22 13:13:54 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:13:54 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:13:54 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:13:55 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 13:13:55 - app.main - WARNING - Request failed: GET /api/maintenance-history - Status: 405
2025-05-22 13:14:36 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 13:14:46 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 13:14:46 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 13:14:46 - app.main - INFO - Registering routers with prefix /api
2025-05-22 13:14:46 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 13:14:46 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 13:14:47 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 13:14:47 - app.main - INFO - All database indexes verified
2025-05-22 13:14:47 - app.main - INFO - Server started successfully!
2025-05-22 13:14:47 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 13:14:57 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:14:57 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:14:57 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:14:58 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 13:14:58 - app.main - WARNING - Request failed: GET /api/maintenance-history - Status: 405
2025-05-22 13:17:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:17:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:17:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:17:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:17:11 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:17:11 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:17:11 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:17:13 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:17:13 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:17:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:17:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:17:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:19:04 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:19:04 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:19:04 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:19:06 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:19:06 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:19:06 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:19:28 - app.main - INFO - Request: DELETE /api/asset-categories/207290be-433c-4db8-84ec-0e060193269b
2025-05-22 13:19:28 - app.routers.asset_categories - INFO - Deleting asset category with ID: 207290be-433c-4db8-84ec-0e060193269b
2025-05-22 13:19:28 - app.services.asset_category_service - INFO - Deleting category ID: 207290be-433c-4db8-84ec-0e060193269b
2025-05-22 13:19:56 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 13:19:56 - app.main - WARNING - Request failed: GET /api/maintenance-history - Status: 405
2025-05-22 13:20:07 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 13:20:07 - app.main - WARNING - Request failed: GET /api/maintenance-history - Status: 405
2025-05-22 13:20:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:20:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:20:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:20:13 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 13:20:23 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 13:20:23 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 13:20:23 - app.main - INFO - Registering routers with prefix /api
2025-05-22 13:20:23 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 13:20:23 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 13:20:23 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 13:20:23 - app.main - INFO - All database indexes verified
2025-05-22 13:20:23 - app.main - INFO - Server started successfully!
2025-05-22 13:20:23 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 13:20:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:20:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:20:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:20:34 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 13:20:34 - app.routers.maintenance_history - INFO - Fetching all maintenance history entries
2025-05-22 13:20:34 - app.services.maintenance_history_service - INFO - Fetching all maintenance history entries
2025-05-22 13:22:04 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:22:04 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:22:04 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:22:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:22:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:22:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:22:51 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:22:51 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:22:51 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:22:52 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:52 - app.main - INFO - Request: GET /api/documents/
2025-05-22 13:22:52 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:52 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:52 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:22:52 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:22:52 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 13:22:52 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 13:22:52 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:22:53 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:53 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:53 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:53 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:53 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:53 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:53 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:22:53 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:22:53 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:22:55 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:22:55 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:22:55 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:22:57 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:57 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:57 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 13:22:57 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:22:57 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 13:22:57 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 13:27:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:27:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:27:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:27:51 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:27:51 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:27:51 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:27:54 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:27:54 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:27:54 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:28:06 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:28:06 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:28:06 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:28:12 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:28:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:28:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:28:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:28:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:28:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:28:18 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:28:18 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:28:18 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:28:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:28:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:28:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:29:15 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:29:15 - app.routers.asset_items - INFO - Fetching asset items - category_id: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:29:15 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:29:41 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:29:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:29:41 - app.routers.asset_items - INFO - Fetching asset items - category_id: p3q4r5s6-t7u8-4v9w-0x1y-2z3a4b5c6d7e, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:29:41 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:29:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:29:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:36:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:36:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:36:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:36:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:36:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:36:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:36:55 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:36:55 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:36:55 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:39:53 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 13:40:06 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 13:40:06 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 13:40:06 - app.main - INFO - Registering routers with prefix /api
2025-05-22 13:40:06 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 13:40:06 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 13:40:06 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 13:40:06 - app.main - INFO - All database indexes verified
2025-05-22 13:40:06 - app.main - INFO - Server started successfully!
2025-05-22 13:40:06 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 13:41:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:41:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:41:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:41:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:41:11 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:41:11 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:41:38 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:41:38 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:41:38 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:41:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:41:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:41:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:41:43 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:41:43 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:41:43 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:41:43 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:41:43 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:41:43 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:41:45 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:41:45 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:41:45 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:41:47 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:41:47 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:41:47 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:41:47 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:41:47 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:41:47 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:41:48 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:41:48 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:41:48 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:41:50 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:41:50 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:41:50 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:41:50 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:41:50 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:41:50 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:42:00 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:00 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:01 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:01 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:02 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:02 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:03 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:03 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:03 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:03 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:03 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:03 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:03 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:03 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:04 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:04 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:04 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:04 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:05 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:05 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:06 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:06 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:06 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:42:06 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:42:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:42:16 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:42:16 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:42:16 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:42:16 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:42:16 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:42:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:42:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:42:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:42:19 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:42:19 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:42:19 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:42:19 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:42:19 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:42:19 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:42:21 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:42:21 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:42:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:42:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:42:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:42:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:42:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:42:23 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:42:23 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:42:25 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:42:25 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:42:25 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:42:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:42:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:42:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:42:30 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:42:30 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:42:30 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:42:31 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:42:31 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:42:31 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:42:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:42:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:42:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:42:33 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:42:33 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:42:33 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:42:33 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:42:34 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:42:34 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:43:31 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 13:43:40 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 13:43:40 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 13:43:40 - app.main - INFO - Registering routers with prefix /api
2025-05-22 13:43:41 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 13:43:41 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 13:43:41 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 13:43:41 - app.main - INFO - All database indexes verified
2025-05-22 13:43:41 - app.main - INFO - Server started successfully!
2025-05-22 13:43:41 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 13:43:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:43:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:43:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:43:46 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:43:46 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:43:46 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:43:46 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:43:46 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:43:46 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:44:06 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:06 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:07 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:07 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:07 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:07 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:07 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:07 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:08 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:08 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:08 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:08 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:09 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:09 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:10 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:10 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 13:44:10 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:10 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 13:44:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:44:16 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:44:16 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:44:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:44:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:44:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:44:20 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:44:20 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:44:20 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:44:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:44:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:44:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:44:27 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:44:27 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:44:27 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:44:27 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:44:27 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:44:27 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:44:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:44:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:44:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:44:39 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:44:39 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:44:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:44:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:44:39 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:44:39 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:44:41 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:44:41 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:44:41 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:49:44 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:49:44 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:49:44 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:49:44 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:49:45 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:49:45 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:49:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:49:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:49:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:49:48 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:49:48 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:49:48 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:49:48 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 13:49:48 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:49:48 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:49:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:49:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:49:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:49:54 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:49:54 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:49:54 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:49:56 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 13:49:56 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 13:49:56 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 13:49:58 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 13:49:58 - app.main - INFO - Request: GET /api/employees/
2025-05-22 13:49:58 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 13:49:58 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 13:49:59 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 13:49:59 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:01:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:01:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:01:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:01:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:01:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:01:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:01:35 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:01:35 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:01:35 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:02:12 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:02:12 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:02:12 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:02:12 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:02:12 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:02:12 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:02:14 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:02:14 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:02:14 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:02:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:02:16 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:02:16 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:02:16 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:02:17 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:02:17 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:02:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:02:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:02:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:02:20 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:02:20 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:02:20 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:02:20 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:02:21 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:02:21 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:02:21 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:02:21 - app.routers.asset_items - INFO - Fetching asset items - category_id: t1u2v3w4-x5y6-4z7a-8b9c-0d1e2f3g4h5i, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:02:21 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:02:21 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:02:21 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:02:21 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:02:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:02:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:02:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:02:25 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:02:25 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:02:25 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:02:39 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:02:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:02:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:02:39 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:02:39 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:02:39 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:02:40 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:02:40 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:02:40 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:39:50 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:39:50 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:39:50 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:39:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:39:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:39:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:45:00 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 14:45:09 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 14:45:09 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 14:45:09 - app.main - INFO - Registering routers with prefix /api
2025-05-22 14:45:09 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 14:45:09 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 14:45:10 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 14:45:10 - app.main - INFO - All database indexes verified
2025-05-22 14:45:10 - app.main - INFO - Server started successfully!
2025-05-22 14:45:10 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 14:45:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:45:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:45:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:45:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:45:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:45:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:45:20 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:45:20 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:45:20 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:45:20 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:45:20 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:45:20 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:45:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:45:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:45:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:45:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:45:23 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:45:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:45:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:45:23 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:45:23 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:45:24 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:45:24 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:45:24 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:45:26 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:45:26 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:45:26 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:45:26 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:45:28 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:45:28 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:45:34 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 14:45:34 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 14:45:35 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 14:45:35 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 14:45:37 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 14:45:37 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 14:48:51 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:48:51 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:48:51 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:48:51 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:48:52 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:48:52 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:49:00 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:49:00 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:49:00 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:49:00 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:49:00 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:49:00 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:50:16 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:50:16 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:50:16 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:50:20 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:50:20 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:50:20 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:50:20 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:50:20 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:50:20 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:50:31 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:50:31 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:50:31 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:50:44 - app.main - INFO - Request: PUT /api/asset-categories/c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r
2025-05-22 14:50:44 - app.routers.asset_categories - INFO - Updating asset category with ID: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r
2025-05-22 14:50:44 - app.services.asset_category_service - INFO - Updating category ID: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r
2025-05-22 14:50:44 - app.main - ERROR - Request failed: PUT /api/asset-categories/c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r - Error: 3 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='d2e3f4g5-h6i7-4j8k-9l0m-1n2o3p4q5r6s', type='edit', edit_date='2025-05-21', change_type='Category Creation', details='Created new category: Chairs', notes='Added via API on 2025-05-21 at 05:11 PM IST')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 1), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='dda86534-41e3-4c3b-9387-69ee0ab6bf27', type='edit', edit_date='2025-05-21', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 2), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='f8b6d801-e8da-4ed7-9c73-f05a1b1b3464', type='edit', edit_date='2025-05-22', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-22 14:50:55 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:50:55 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:50:55 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:50:55 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:50:55 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:50:55 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:51:01 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 14:51:01 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 14:51:02 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 14:51:02 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 14:51:04 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 14:51:04 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 404
2025-05-22 14:51:09 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:51:09 - app.routers.asset_items - INFO - Fetching asset items - category_id: c1d2e3f4-g5h6-4i7j-8k9l-0m1n2o3p4q5r, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:51:09 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:51:09 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:51:09 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:51:09 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:51:11 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:51:11 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:51:11 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:51:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:51:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:51:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:51:22 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 14:51:32 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 14:51:32 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 14:51:32 - app.main - INFO - Registering routers with prefix /api
2025-05-22 14:51:32 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 14:51:32 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 14:51:32 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 14:51:32 - app.main - INFO - All database indexes verified
2025-05-22 14:51:32 - app.main - INFO - Server started successfully!
2025-05-22 14:51:32 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 14:51:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:51:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:51:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:51:35 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:51:35 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:51:35 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:51:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:51:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:51:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:51:39 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:51:39 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:51:39 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:51:42 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 14:51:42 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 14:51:42 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 14:51:42 - app.main - INFO - Request: GET /api/employees/
2025-05-22 14:51:42 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 14:51:42 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 14:52:03 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 14:52:03 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 14:52:03 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 14:56:55 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 14:57:04 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 14:57:04 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 14:57:04 - app.main - INFO - Registering routers with prefix /api
2025-05-22 14:57:04 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 14:57:04 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 14:57:04 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 14:57:05 - app.main - INFO - All database indexes verified
2025-05-22 14:57:05 - app.main - INFO - Server started successfully!
2025-05-22 14:57:05 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 14:57:35 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-22 14:57:35 - app.routers.asset_categories - INFO - Creating asset category: Speakers
2025-05-22 14:57:35 - app.services.asset_category_service - INFO - Creating category: Speakers
2025-05-22 14:57:35 - app.services.asset_category_service - INFO - Created category with ID: f5d1783d-4517-4208-b9a4-48c220e37f37
2025-05-22 14:58:22 - app.main - INFO - Request: POST /api/asset-items/
2025-05-22 14:58:22 - app.routers.asset_items - INFO - Creating asset item: JBL Bluetooth Conference Speaker
2025-05-22 14:58:22 - app.services.asset_item_service - INFO - Creating asset: JBL Bluetooth Conference Speaker
2025-05-22 14:58:22 - app.services.asset_item_service - WARNING - Category not found: f5d1783d-4517-4208-b9a4-48c220e37f37
2025-05-22 14:58:22 - app.routers.asset_items - WARNING - Failed to create asset item: Category with ID 'f5d1783d-4517-4208-b9a4-48c220e37f37' does not exist
2025-05-22 14:58:22 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 400
2025-05-22 15:00:04 - app.main - INFO - Request: POST /api/asset-items/
2025-05-22 15:00:04 - app.routers.asset_items - INFO - Creating asset item: JBL Bluetooth Conference Speaker
2025-05-22 15:00:04 - app.services.asset_item_service - INFO - Creating asset: JBL Bluetooth Conference Speaker
2025-05-22 15:00:04 - app.services.asset_item_service - WARNING - Category not found: f5d1783d-4517-4208-b9a4-48c220e37f37
2025-05-22 15:00:04 - app.routers.asset_items - WARNING - Failed to create asset item: Category with ID 'f5d1783d-4517-4208-b9a4-48c220e37f37' does not exist
2025-05-22 15:00:04 - app.main - WARNING - Request failed: POST /api/asset-items/ - Status: 400
2025-05-22 15:00:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:00:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:00:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:00:53 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:00:53 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:00:53 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:01:42 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:01:42 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:01:42 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:01:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:01:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:01:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:05:01 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:05:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: a1b2c3d4-e5f6-4g7h-8i9j-0k1l2m3n4o5p, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:05:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:05:57 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:05:57 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:05:57 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:05:59 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:05:59 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:05:59 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:06:00 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:00 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:00 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:00 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:00 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:00 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 15:06:00 - app.main - INFO - Request: GET /api/documents/
2025-05-22 15:06:00 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 15:06:00 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 15:06:01 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:01 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:01 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:01 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:01 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:01 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 15:06:03 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:03 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:03 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:03 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:03 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:03 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:04 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:04 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:04 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 15:06:06 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 15:06:06 - app.routers.maintenance_history - INFO - Fetching all maintenance history entries
2025-05-22 15:06:06 - app.services.maintenance_history_service - INFO - Fetching all maintenance history entries
2025-05-22 15:06:16 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:06:16 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:06:16 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:06:18 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:06:18 - app.routers.asset_items - INFO - Fetching asset items - category_id: 958d338a-8828-495f-88c7-04d52049cb8a, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:06:18 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:06:19 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:19 - app.main - INFO - Request: GET /api/documents/
2025-05-22 15:06:19 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:19 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:19 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:19 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:19 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 15:06:19 - app.routers.documents - INFO - GET /documents/ - asset_id: 70ee52cb-1753-4987-8b74-3c0567718a2d, employee_id: None, document_type: None
2025-05-22 15:06:19 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '70ee52cb-1753-4987-8b74-3c0567718a2d'}
2025-05-22 15:06:20 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:20 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:20 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:20 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:20 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:20 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 15:06:22 - app.main - INFO - Request: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:22 - app.routers.asset_items - INFO - Fetching asset item with ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:22 - app.services.asset_item_service - INFO - Fetching asset item ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:22 - app.services.asset_item_service - ERROR - Error fetching asset 70ee52cb-1753-4987-8b74-3c0567718a2d: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
Traceback (most recent call last):
  File "C:\Users\devanshu\Downloads\github asset management\my-asset-app\backend\app\services\asset_item_service.py", line 143, in get_asset_item_by_id
    asset_response = AssetItemResponse(**asset)
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\site-packages\pydantic\main.py", line 214, in __init__
    validated_self = self.__pydantic_validator__.validate_python(data, self_instance=self)
pydantic_core._pydantic_core.ValidationError: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:22 - app.routers.asset_items - WARNING - Invalid asset ID: 1 validation error for AssetItemResponse
current_assignment_date
  Input should be a valid string [type=string_type, input_value=datetime.datetime(2025, 5, 18, 8, 1, 13, 715000), input_type=datetime]
    For further information visit https://errors.pydantic.dev/2.10/v/string_type
2025-05-22 15:06:22 - app.main - WARNING - Request failed: GET /api/asset-items/70ee52cb-1753-4987-8b74-3c0567718a2d - Status: 400
2025-05-22 15:06:22 - app.main - INFO - Request: GET /api/maintenance-history/asset/70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:22 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:22 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 70ee52cb-1753-4987-8b74-3c0567718a2d
2025-05-22 15:06:32 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:06:32 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:06:32 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:09:49 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-22 15:09:49 - app.routers.asset_categories - INFO - Creating asset category: Speakers
2025-05-22 15:09:49 - app.services.asset_category_service - INFO - Creating category: Speakers
2025-05-22 15:09:49 - app.services.asset_category_service - INFO - Created category with ID: 00d13910-f691-45e4-a3e2-4967d5eec5af
2025-05-22 15:10:50 - app.main - INFO - Request: POST /api/asset-items/
2025-05-22 15:10:50 - app.routers.asset_items - INFO - Creating asset item: JBL Bluetooth Conference Speaker
2025-05-22 15:10:50 - app.services.asset_item_service - INFO - Creating asset: JBL Bluetooth Conference Speaker
2025-05-22 15:10:51 - app.services.asset_item_service - INFO - Created asset with ID: ebbdeabe-97d1-4173-b210-68f06768b98a
2025-05-22 15:11:10 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:11:10 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:11:10 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:11:12 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:11:12 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:11:12 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:11:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:11:16 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:11:16 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:11:19 - app.main - INFO - Request: GET /api/asset-items/ebbdeabe-97d1-4173-b210-68f06768b98a
2025-05-22 15:11:19 - app.main - INFO - Request: GET /api/documents/
2025-05-22 15:11:19 - app.routers.documents - INFO - GET /documents/ - asset_id: ebbdeabe-97d1-4173-b210-68f06768b98a, employee_id: None, document_type: None
2025-05-22 15:11:19 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': 'ebbdeabe-97d1-4173-b210-68f06768b98a'}
2025-05-22 15:11:19 - app.routers.asset_items - INFO - Fetching asset item with ID: ebbdeabe-97d1-4173-b210-68f06768b98a
2025-05-22 15:11:19 - app.services.asset_item_service - INFO - Fetching asset item ID: ebbdeabe-97d1-4173-b210-68f06768b98a
2025-05-22 15:11:45 - app.main - INFO - Request: POST /api/employees/
2025-05-22 15:11:45 - app.routers.employees - INFO - Creating employee: EMP-201
2025-05-22 15:11:45 - app.services.employee_service - INFO - Creating employee: John Smith
2025-05-22 15:11:45 - app.services.employee_service - INFO - Created employee with ID: a79f6e67-f3c2-4226-9eb3-21582d6ca0d7
2025-05-22 15:11:53 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:11:53 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:11:53 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:13:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:13:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:13:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:13:42 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:13:42 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:13:42 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:13:42 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:13:42 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:13:42 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:13:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:13:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:13:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:18:12 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 15:18:21 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 15:18:21 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 15:18:21 - app.main - INFO - Registering routers with prefix /api
2025-05-22 15:18:21 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 15:18:21 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 15:18:21 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 15:18:21 - app.main - INFO - All database indexes verified
2025-05-22 15:18:21 - app.main - INFO - Server started successfully!
2025-05-22 15:18:21 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 15:18:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:18:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:18:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:18:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:18:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:18:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:18:48 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:18:48 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:18:48 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:18:48 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:18:49 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:18:49 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:18:57 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 15:18:57 - app.routers.assignment_history - INFO - Creating new assignment - asset None to None
2025-05-22 15:18:57 - app.routers.assignment_history - ERROR - Missing required fields: asset_id=None, assigned_to=None
2025-05-22 15:18:57 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 400
2025-05-22 15:18:58 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 15:18:58 - app.routers.assignment_history - INFO - Creating new assignment - asset None to None
2025-05-22 15:18:58 - app.routers.assignment_history - ERROR - Missing required fields: asset_id=None, assigned_to=None
2025-05-22 15:18:58 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 400
2025-05-22 15:19:00 - app.main - INFO - Request: POST /api/assignment-history/
2025-05-22 15:19:00 - app.routers.assignment_history - INFO - Creating new assignment - asset None to None
2025-05-22 15:19:00 - app.routers.assignment_history - ERROR - Missing required fields: asset_id=None, assigned_to=None
2025-05-22 15:19:00 - app.main - WARNING - Request failed: POST /api/assignment-history/ - Status: 400
2025-05-22 15:25:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:25:06 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:25:06 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:25:06 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:25:07 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:25:07 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:25:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:25:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:25:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:25:36 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:25:36 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:25:36 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:25:36 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:25:36 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:25:36 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:26:38 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:26:38 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:26:38 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:26:38 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:26:39 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:26:39 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:26:43 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:26:43 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:26:43 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:26:43 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:26:45 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:26:45 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:29:43 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 15:29:54 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 15:29:54 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 15:29:54 - app.main - INFO - Registering routers with prefix /api
2025-05-22 15:29:54 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 15:29:54 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 15:29:54 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 15:29:54 - app.main - INFO - All database indexes verified
2025-05-22 15:29:54 - app.main - INFO - Server started successfully!
2025-05-22 15:29:54 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 15:30:13 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:30:13 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:30:13 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:30:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:30:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:30:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:30:19 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:30:19 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:30:19 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:30:19 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:30:19 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:30:19 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:30:49 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:30:49 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:30:49 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:30:49 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:30:49 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:30:50 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:30:50 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:30:51 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:30:51 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:30:57 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:30:57 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:30:57 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:31:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:31:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:31:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:31:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:31:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:31:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:31:11 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:31:11 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:31:11 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:31:11 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:31:13 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:31:13 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:36:05 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:36:05 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:36:05 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:36:05 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:36:05 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:36:05 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:36:06 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:36:06 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:36:06 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:36:06 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:36:06 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:36:06 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:37:00 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:37:00 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:37:00 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:37:00 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:37:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:37:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:37:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:37:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:37:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:37:14 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:37:14 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:37:14 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:37:14 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:37:14 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:37:14 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:37:22 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:37:22 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:37:22 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:37:22 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:37:22 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:37:22 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:37:23 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:37:23 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:37:23 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:37:23 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:37:23 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:37:23 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:37:44 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 15:37:54 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 15:37:54 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 15:37:54 - app.main - INFO - Registering routers with prefix /api
2025-05-22 15:37:54 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 15:37:54 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 15:37:54 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 15:37:54 - app.main - INFO - All database indexes verified
2025-05-22 15:37:54 - app.main - INFO - Server started successfully!
2025-05-22 15:37:54 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 15:37:58 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:37:58 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:37:58 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:37:58 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:37:58 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:37:59 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:37:59 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:38:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:38:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:38:01 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:38:01 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:38:01 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:38:07 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:38:07 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:38:07 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:38:07 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:38:07 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:38:07 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:38:14 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:38:14 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:38:14 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:38:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:38:16 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:38:16 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:38:16 - app.main - INFO - Request: GET /api/employees/
2025-05-22 15:38:16 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 15:38:16 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 15:38:29 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 15:38:29 - app.routers.asset_items - INFO - Fetching asset items - category_id: 00d13910-f691-45e4-a3e2-4967d5eec5af, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 15:38:29 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 15:38:30 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:38:30 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:38:30 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:38:35 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:38:35 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:38:35 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:38:36 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:38:36 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:38:36 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:39:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:39:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:39:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 15:39:22 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 15:39:22 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 15:39:22 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 16:02:34 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-22 16:02:34 - app.routers.asset_categories - INFO - Creating asset category: Speakers
2025-05-22 16:02:34 - app.services.asset_category_service - INFO - Creating category: Speakers
2025-05-22 16:02:34 - app.services.asset_category_service - INFO - Created category with ID: f3c8660e-82b3-4f38-8f50-1dc9373424ef
2025-05-22 16:04:54 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-22 16:04:54 - app.routers.asset_categories - INFO - Creating asset category: Speakers
2025-05-22 16:04:54 - app.services.asset_category_service - INFO - Creating category: Speakers
2025-05-22 16:04:54 - app.services.asset_category_service - INFO - Created category with ID: 9946979a-e3d1-449c-a9fa-6532b5da2f72
2025-05-22 16:05:46 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-22 16:05:46 - app.main - WARNING - Request failed: POST /api/asset-categories/ - Status: 422
2025-05-22 16:13:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 16:13:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 16:13:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 16:13:07 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 16:13:07 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 16:13:07 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 16:25:08 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-22 16:25:08 - app.main - WARNING - Request failed: POST /api/asset-categories/ - Status: 422
2025-05-22 16:25:23 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 16:25:32 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 16:25:32 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 16:25:32 - app.main - INFO - Registering routers with prefix /api
2025-05-22 16:25:33 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 16:25:33 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 16:25:33 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 16:25:33 - app.main - INFO - All database indexes verified
2025-05-22 16:25:33 - app.main - INFO - Server started successfully!
2025-05-22 16:25:33 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 16:26:15 - app.main - INFO - Request: POST /api/asset-categories/
2025-05-22 16:26:15 - app.main - WARNING - Request failed: POST /api/asset-categories/ - Status: 422
2025-05-22 16:33:05 - app.main - INFO - Request: POST /api/asset-categories/bulk
2025-05-22 16:33:05 - app.routers.asset_categories - INFO - Creating 7 asset categories in bulk
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Creating category: Laptops
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Created category with ID: 1c6e3103-9dc5-4191-89eb-27506065ffdd
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Creating category: Office Chairs
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Created category with ID: e737bbc8-1858-406c-80af-35be291e32b3
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Creating category: Printer Ink
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Created category with ID: b56ef577-12c3-475f-a1cb-c937100a45be
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Creating category: Projectors
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Created category with ID: 7be733c3-ed86-4820-a6ff-69178be5d5ec
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Creating category: Software Licenses
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Created category with ID: 1bace0c9-ecaa-4e15-addc-4ab56f3282e0
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Creating category: Desk Phones
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Created category with ID: 83c036c0-bdfd-4c64-b2d2-bd77018bb11b
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Creating category: Notebooks
2025-05-22 16:33:05 - app.services.asset_category_service - INFO - Created category with ID: bfb3b812-3085-460a-87f7-67214c541adf
2025-05-22 16:33:05 - app.routers.asset_categories - INFO - Successfully created 7 out of 7 categories
2025-05-22 16:33:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 16:33:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 16:33:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 16:33:29 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 16:33:29 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 16:33:29 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 16:47:46 - app.main - INFO - Request: POST /api/assets/bulk
2025-05-22 16:47:46 - app.main - WARNING - Request failed: POST /api/assets/bulk - Status: 404
2025-05-22 16:54:23 - app.main - INFO - Request: POST /api/assets/bulk
2025-05-22 16:54:23 - app.main - WARNING - Request failed: POST /api/assets/bulk - Status: 404
2025-05-22 17:02:44 - app.main - INFO - Request: POST /api/employees/bulk
2025-05-22 17:02:44 - app.routers.employees - INFO - Creating 10 employees in bulk
2025-05-22 17:02:44 - app.services.employee_service - INFO - Creating employee: Fiyaz Sood
2025-05-22 17:02:44 - app.services.employee_service - INFO - Created employee with ID: d1232c5d-74af-41a1-a770-6620389857a0
2025-05-22 17:02:44 - app.services.employee_service - INFO - Creating employee: Nihal Sabharwal
2025-05-22 17:02:44 - app.services.employee_service - INFO - Created employee with ID: e6aeef64-693c-4508-9ba4-0603bee7c64b
2025-05-22 17:02:44 - app.services.employee_service - INFO - Creating employee: Ridhi Nagy
2025-05-22 17:02:44 - app.services.employee_service - INFO - Created employee with ID: bcbe9f9c-2cf7-48b9-a09a-2211f7d865cc
2025-05-22 17:02:44 - app.services.employee_service - INFO - Creating employee: Nandini Srivastava
2025-05-22 17:02:44 - app.services.employee_service - INFO - Created employee with ID: c1e545df-b66a-44e9-bfe3-e0bb474e2bab
2025-05-22 17:02:44 - app.services.employee_service - INFO - Creating employee: Yashica Mistry
2025-05-22 17:02:44 - app.services.employee_service - INFO - Created employee with ID: 566efe29-aaa8-49d1-a5ca-1b6e1dae6399
2025-05-22 17:02:44 - app.services.employee_service - INFO - Creating employee: Varsha Balan
2025-05-22 17:02:45 - app.services.employee_service - INFO - Created employee with ID: beae9e24-b3d2-431a-859a-a5bb86ce31b3
2025-05-22 17:02:45 - app.services.employee_service - INFO - Creating employee: Max Dada
2025-05-22 17:02:45 - app.services.employee_service - INFO - Created employee with ID: 293bba73-5614-4959-b760-ae56ea98d966
2025-05-22 17:02:45 - app.services.employee_service - INFO - Creating employee: Kritika Karnik
2025-05-22 17:02:45 - app.services.employee_service - INFO - Created employee with ID: f0162e42-18ef-49e5-8565-ff27769445b2
2025-05-22 17:02:45 - app.services.employee_service - INFO - Creating employee: William Cherian
2025-05-22 17:02:45 - app.services.employee_service - INFO - Created employee with ID: e8666cfb-a0c2-4d7d-9d74-27711de3f382
2025-05-22 17:02:45 - app.services.employee_service - INFO - Creating employee: Hemani Devi
2025-05-22 17:02:45 - app.services.employee_service - INFO - Created employee with ID: 4fc347e2-6ccf-480a-859e-c446fb61e3c0
2025-05-22 17:02:45 - app.routers.employees - INFO - Successfully created 10 out of 10 employees
2025-05-22 17:05:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:05:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:05:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:05:28 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:05:28 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:05:28 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:05:29 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:05:29 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:05:29 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:09:42 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:09:42 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:09:42 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:09:48 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:09:48 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:09:48 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:09:52 - app.main - INFO - Request: GET /api/maintenance-history
2025-05-22 17:09:52 - app.routers.maintenance_history - INFO - Fetching all maintenance history entries
2025-05-22 17:09:52 - app.services.maintenance_history_service - INFO - Fetching all maintenance history entries
2025-05-22 17:10:08 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:10:08 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:10:08 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:10:09 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:10:09 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:10:09 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:10:13 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:10:13 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:10:13 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:10:15 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:10:15 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:10:15 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:10:34 - app.main - INFO - Request: PUT /api/asset-categories/bfb3b812-3085-460a-87f7-67214c541adf
2025-05-22 17:10:34 - app.routers.asset_categories - INFO - Updating asset category with ID: bfb3b812-3085-460a-87f7-67214c541adf
2025-05-22 17:10:34 - app.services.asset_category_service - INFO - Updating category ID: bfb3b812-3085-460a-87f7-67214c541adf
2025-05-22 17:10:34 - app.main - ERROR - Request failed: PUT /api/asset-categories/bfb3b812-3085-460a-87f7-67214c541adf - Error: 1 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='9af749bb-7204-48f6-88ce-f08a67537033', type='edit', edit_date='2025-05-22', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-22 17:10:42 - app.main - INFO - Request: PUT /api/asset-categories/1c6e3103-9dc5-4191-89eb-27506065ffdd
2025-05-22 17:10:42 - app.routers.asset_categories - INFO - Updating asset category with ID: 1c6e3103-9dc5-4191-89eb-27506065ffdd
2025-05-22 17:10:42 - app.services.asset_category_service - INFO - Updating category ID: 1c6e3103-9dc5-4191-89eb-27506065ffdd
2025-05-22 17:10:42 - app.main - ERROR - Request failed: PUT /api/asset-categories/1c6e3103-9dc5-4191-89eb-27506065ffdd - Error: 1 validation errors:
  {'type': 'dict_type', 'loc': ('response', 'edit_history', 0), 'msg': 'Input should be a valid dictionary', 'input': EditHistoryEntry(id='6bc7907a-ebc8-487b-8825-8a3f78fe0042', type='edit', edit_date='2025-05-22', change_type='Category Update', details='Updated category fields: category_name, category_type, description, policies, is_consumable, is_allotted, is_active, is_reassignable, requires_maintenance, assignment_policies, updated_at', notes='Updated via API')}

2025-05-22 17:10:46 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:10:46 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:10:46 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:10:47 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:10:47 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:10:47 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:16:48 - app.main - INFO - Request: POST /api/assets/bulk
2025-05-22 17:16:48 - app.main - WARNING - Request failed: POST /api/assets/bulk - Status: 404
2025-05-22 17:17:35 - app.main - INFO - Request: POST /api/assets/bulk
2025-05-22 17:17:35 - app.main - WARNING - Request failed: POST /api/assets/bulk - Status: 404
2025-05-22 17:17:46 - app.main - INFO - ========== APPLICATION SHUTTING DOWN ==========
2025-05-22 17:17:55 - app.main - INFO - Logging configured successfully (level: INFO)
2025-05-22 17:17:55 - app.main - INFO - CORS middleware configured with frontend origins
2025-05-22 17:17:55 - app.main - INFO - Registering routers with prefix /api
2025-05-22 17:17:55 - app.main - INFO - Starting Asset Management API application on port 8000...
2025-05-22 17:17:55 - app.main - INFO - MongoDB connection verified successfully
2025-05-22 17:17:55 - app.main - INFO - Using existing text index: asset_tag_text_category_id_1
2025-05-22 17:17:55 - app.main - INFO - All database indexes verified
2025-05-22 17:17:55 - app.main - INFO - Server started successfully!
2025-05-22 17:17:55 - app.main - INFO - API documentation available at: http://localhost:8000/docs
2025-05-22 17:17:58 - app.main - INFO - Request: POST /api/assets/bulk
2025-05-22 17:17:58 - app.main - WARNING - Request failed: POST /api/assets/bulk - Status: 404
2025-05-22 17:20:06 - app.main - INFO - Request: POST /api/asset-items/bulk
2025-05-22 17:20:06 - app.main - WARNING - Request failed: POST /api/asset-items/bulk - Status: 422
2025-05-22 17:22:43 - app.main - INFO - Request: POST /api/asset-items/bulk
2025-05-22 17:22:43 - app.routers.asset_items - INFO - Creating 10 asset items in bulk
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Creating asset: Bose Speaker
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Created asset with ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Creating asset: Logitech Speaker
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Created asset with ID: 4e0e3c5f-1c5a-411a-ac72-092b6c4101eb
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Creating asset: Sony Speaker
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Created asset with ID: 87f9314f-bada-4a32-b588-53f0e929112b
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Creating asset: JBL Speaker
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Created asset with ID: cdbf8aa5-f6bd-40b8-8fd2-a1b8f6f999d6
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Creating asset: Bose Speaker
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Created asset with ID: 5ee30b1e-a048-4ae1-835a-572cf2f81d94
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Creating asset: Logitech Speaker
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Created asset with ID: 3b9a463a-0f8a-4aeb-b802-c7a2da8694a3
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Creating asset: JBL Speaker
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Created asset with ID: f6397267-755a-4b28-8a95-28fb71e98f7e
2025-05-22 17:22:43 - app.services.asset_item_service - INFO - Creating asset: Zebronics Speaker
2025-05-22 17:22:44 - app.services.asset_item_service - INFO - Created asset with ID: d3c3093b-4350-4c7d-b634-1f71c30a7947
2025-05-22 17:22:44 - app.services.asset_item_service - INFO - Creating asset: JBL Speaker
2025-05-22 17:22:44 - app.services.asset_item_service - INFO - Created asset with ID: d5481a00-2457-4d7f-a9b3-467e3621da8d
2025-05-22 17:22:44 - app.services.asset_item_service - INFO - Creating asset: JBL Speaker
2025-05-22 17:22:44 - app.services.asset_item_service - INFO - Created asset with ID: 20ea2f16-2ad9-4b0f-964c-8dbab1e437e2
2025-05-22 17:22:44 - app.routers.asset_items - INFO - Successfully created 10 out of 10 asset items
2025-05-22 17:22:51 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:22:51 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:22:51 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:22:52 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:22:52 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:22:52 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:23:54 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:23:54 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:23:54 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:24:01 - app.main - INFO - Request: GET /api/asset-items/437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:24:01 - app.routers.asset_items - INFO - Fetching asset item with ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:24:01 - app.services.asset_item_service - INFO - Fetching asset item ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:24:01 - app.main - INFO - Request: GET /api/documents/
2025-05-22 17:24:01 - app.routers.documents - INFO - GET /documents/ - asset_id: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3, employee_id: None, document_type: None
2025-05-22 17:24:01 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '437d2033-0cd1-4b4a-9201-e3e3ebc440d3'}
2025-05-22 17:24:03 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:24:03 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:24:03 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:24:06 - app.main - INFO - Request: GET /api/asset-items/437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:24:06 - app.routers.asset_items - INFO - Fetching asset item with ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:24:06 - app.services.asset_item_service - INFO - Fetching asset item ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:24:06 - app.main - INFO - Request: GET /api/documents/
2025-05-22 17:24:06 - app.routers.documents - INFO - GET /documents/ - asset_id: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3, employee_id: None, document_type: None
2025-05-22 17:24:06 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '437d2033-0cd1-4b4a-9201-e3e3ebc440d3'}
2025-05-22 17:24:16 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:24:16 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:24:16 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:24:18 - app.main - INFO - Request: GET /api/asset-items/87f9314f-bada-4a32-b588-53f0e929112b
2025-05-22 17:24:18 - app.main - INFO - Request: GET /api/documents/
2025-05-22 17:24:18 - app.routers.asset_items - INFO - Fetching asset item with ID: 87f9314f-bada-4a32-b588-53f0e929112b
2025-05-22 17:24:18 - app.services.asset_item_service - INFO - Fetching asset item ID: 87f9314f-bada-4a32-b588-53f0e929112b
2025-05-22 17:24:18 - app.routers.documents - INFO - GET /documents/ - asset_id: 87f9314f-bada-4a32-b588-53f0e929112b, employee_id: None, document_type: None
2025-05-22 17:24:18 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '87f9314f-bada-4a32-b588-53f0e929112b'}
2025-05-22 17:24:25 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:24:25 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:24:25 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:24:27 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:24:27 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:24:27 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:24:34 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:24:34 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:24:34 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:28:02 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:28:02 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:28:02 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:28:04 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:28:04 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:28:04 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:28:04 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:28:04 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:28:04 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:28:17 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:28:17 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:28:17 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:28:19 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:28:19 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:28:19 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:28:19 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:28:19 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:28:19 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:28:21 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:28:21 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:28:21 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:28:27 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:28:27 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:28:27 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:28:27 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:28:27 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:28:27 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:28:32 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:28:32 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:28:32 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:28:33 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:28:33 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:28:33 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:28:37 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:28:37 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:28:37 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:28:38 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:28:38 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:28:38 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:28:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:28:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:28:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:28:44 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:28:44 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:28:44 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:30:01 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:30:01 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:30:01 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:30:01 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:30:01 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:30:01 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:30:07 - app.main - INFO - Request: GET /api/employees/
2025-05-22 17:30:07 - app.routers.employees - INFO - Fetching employees - department: None, role: None, is_active: None
2025-05-22 17:30:07 - app.services.employee_service - INFO - Fetching employees with filters
2025-05-22 17:30:08 - app.main - INFO - Request: GET /api/asset-categories/
2025-05-22 17:30:08 - app.routers.asset_categories - INFO - Fetching asset categories - category_type: None, is_active: None
2025-05-22 17:30:08 - app.services.asset_category_service - INFO - Fetching all asset categories
2025-05-22 17:30:10 - app.main - INFO - Request: GET /api/asset-items/
2025-05-22 17:30:10 - app.routers.asset_items - INFO - Fetching asset items - category_id: 9946979a-e3d1-449c-a9fa-6532b5da2f72, status: None, has_active_assignment: None, serial_number: None, asset_tag: None, department: None, location: None, maintenance_due_before: None
2025-05-22 17:30:10 - app.services.asset_item_service - INFO - Fetching asset items with filters
2025-05-22 17:30:12 - app.main - INFO - Request: GET /api/asset-items/437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:30:12 - app.routers.asset_items - INFO - Fetching asset item with ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:30:12 - app.services.asset_item_service - INFO - Fetching asset item ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:30:12 - app.main - INFO - Request: GET /api/documents/
2025-05-22 17:30:12 - app.routers.documents - INFO - GET /documents/ - asset_id: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3, employee_id: None, document_type: None
2025-05-22 17:30:12 - app.services.document_service - INFO - Fetching documents with filters: {'asset_id': '437d2033-0cd1-4b4a-9201-e3e3ebc440d3'}
2025-05-22 17:30:14 - app.main - INFO - Request: GET /api/assignment-history/asset/437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:30:14 - app.routers.assignment_history - INFO - Fetching assignment history for asset 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:30:14 - app.services.assignment_history_service - INFO - Fetching assignment history for asset ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:30:16 - app.main - INFO - Request: GET /api/maintenance-history/asset/437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:30:16 - app.routers.maintenance_history - INFO - Fetching maintenance history for asset 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:30:16 - app.services.maintenance_history_service - INFO - Fetching maintenance history for asset ID: 437d2033-0cd1-4b4a-9201-e3e3ebc440d3
2025-05-22 17:31:30 - asyncio - ERROR - Exception in callback _ProactorBasePipeTransport._call_connection_lost()
handle: <Handle _ProactorBasePipeTransport._call_connection_lost()>
Traceback (most recent call last):
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)
    ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\devanshu\AppData\Local\Programs\Python\Python313\Lib\asyncio\proactor_events.py", line 165, in _call_connection_lost
    self._sock.shutdown(socket.SHUT_RDWR)
    ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^
ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host
